CREATE OR ALTER TRIGGER TK_FNPAG
ON FNPAG 
WITH ENCRYPTION
--FOR --ANTES
AFTER --DESPUES
--INSTEAD OF 
INSERT--,UPDATE--,DELETE 
AS
DECLARE @ACTION		VARCHAR(1)
DECLARE @BODY		NVARCHAR(MAX)
DECLARE @ID			INT
DECLARE @IDKPAGE	INT
DECLARE @CODACJA	VARCHAR(20)
DECLARE @USUARIO	VARCHAR(20)
DECLARE @vads_trans_status VARCHAR(20)
BEGIN

	SELECT @ID = ID FROM INSERTED

	SET @ACTION = 'I';
	IF EXISTS(SELECT * FROM DELETED)
	BEGIN
		SET @ACTION = CASE WHEN EXISTS(SELECT * FROM INSERTED) THEN 'U' ELSE 'D' END 
	END   
   
	IF @ACTION = 'I'
	BEGIN
		SELECT @BODY = BODY FROM FNPAG WHERE ID=@ID
		PRINT @BODY
		SELECT @IDKPAGE = IDKPAGE,@vads_trans_status=vads_trans_status
		FROM OPENJSON (@BODY)
		WITH (
			VADS_AMOUNT		VARCHAR(100)     '$.vads_amount'
			,IDKPAGE		VARCHAR(100)     '$.vads_order_id',
          vads_trans_status  VARCHAR(20)'$.vads_trans_status'
		)

		SELECT @USUARIO = DBO.FNK_VALORVARIABLE('USUARIO_IZIPAY')

		INSERT INTO API_LOG(COMMAND, COMMANDTYPE, USUARIO)
		SELECT @BODY, 'IZIPAY', @USUARIO

		UPDATE FNPAG SET IDKPAGE = @IDKPAGE,ESTADO_OPE=@vads_trans_status WHERE ID=@ID
		UPDATE KPAGE SET FECHARES=DBO.FNK_GETDATE() WHERE  IDKPAGE = @IDKPAGE
	END	
END


