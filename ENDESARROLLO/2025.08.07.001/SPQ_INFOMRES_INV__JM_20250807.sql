CREATE OR ALTER PROCEDURE DBO.SPQ_INFOMRES_INV @JSON NVARCHAR(MAX)
	WITH ENCRYPTION
AS
SET DATEFORMAT dmy
DECLARE @TBLERRORES TABLE (ERROR VARCHAR(MAX))
DECLARE  @PARAMETROS NVARCHAR(MAX)			,@MODELO VARCHAR(100)			    ,@METODO VARCHAR(100)
		,@USUARIO VARCHAR(12)				   ,@COMPANIA VARCHAR(2)		       ,@IDSEDE      VARCHAR(5)		
      ,@SYS_COMPUTERNAME VARCHAR(200)     ,@DATOS    VARCHAR(MAX)           ,@IDTIPOMOV VARCHAR(20)
      ,@IDARTICULO VARCHAR(20)            ,@PCOSTO   DECIMAL(14,2)          ,@IDBODEGA VARCHAR(20)
      ,@TIPOMOV VARCHAR(20)               ,@F_INICIAL DATETIME              ,@F_FINAL DATETIME
      ,@CNSRPDX VARCHAR(20)               ,@NOLOTE    VARCHAR(20)           ,@CNSLOG VARCHAR(20)
      ,@TBODEGA VARCHAR(20)               ,@SVENTAS BIT                     ,@ANO VARCHAR(4)
      ,@MES SMALLINT
BEGIN
	SELECT *
	INTO #JSON
	FROM OPENJSON(@json) WITH (
			MODELO VARCHAR(100) '$.MODELO'
			,METODO VARCHAR(100) '$.METODO'
			,USUARIO VARCHAR(12) '$.USUARIO'
			,PARAMETROS NVARCHAR(MAX) AS JSON
	)

	SELECT   @MODELO = MODELO			,@METODO = METODO
			,@PARAMETROS = PARAMETROS	,@USUARIO = USUARIO
	FROM #JSON

   IF @METODO='IBOD_ITAR'     
   BEGIN         
      SELECT 'OK' OK
      SELECT IDBODEGA as value, DESCRIPCION AS label FROM IBOD
      WHERE EXISTS(SELECT * FROM IEXI WHERE IEXI.IDBODEGA=IBOD.IDBODEGA)
      AND IBOD.ESTADO='Activo'
      ORDER BY IBOD.IDBODEGA

      SELECT IDITAR AS value, DESCRIPCION AS label
      FROM ITAR 
      ORDER BY IDITAR ASC

      RETURN
   END   
   IF @METODO='SOLO_IBOD'     
   BEGIN         
      SELECT 'OK' OK

      SELECT IDBODEGA as value, DESCRIPCION AS label FROM IBOD
      WHERE EXISTS(SELECT * FROM IEXI WHERE IEXI.IDBODEGA=IBOD.IDBODEGA)
      AND IBOD.ESTADO='Activo'
      ORDER BY IBOD.IDBODEGA
      RETURN
    END 
   IF @METODO='IBOD_ITMO'     
   BEGIN         
      SELECT 'OK' OK
      SELECT IDBODEGA as value, DESCRIPCION AS label FROM IBOD
      WHERE EXISTS(SELECT * FROM IEXI WHERE IEXI.IDBODEGA=IBOD.IDBODEGA)
      AND IBOD.ESTADO='Activo'
      ORDER BY IBOD.IDBODEGA

      SELECT IDTIPOMOV AS value, DESCRIPCION AS label
      FROM ITMO 
      ORDER BY IDTIPOMOV ASC

      RETURN
    END 
   IF @METODO='TRAE_EXISTS'     
   BEGIN         
      SELECT @IDARTICULO=IDARTICULO        
      FROM   OPENJSON (@PARAMETROS)
      WITH (           
          IDARTICULO VARCHAR(20) '$.IDARTICULO'
            )    
      IF COALESCE(@IDARTICULO,'')<>'' AND EXISTS(SELECT * FROM IART WHERE IDARTICULO=@IDARTICULO)
      BEGIN
         SELECT @PCOSTO=PCOSTO FROM IART WHERE IDARTICULO=@IDARTICULO
         SELECT 'OK'OK,@PCOSTO PCOSTO 

         SELECT IEXI.IDBODEGA,IBOD.DESCRIPCION,SUM(IEXI.EXISLOTE)CANTIDAD
         FROM IEXI INNER JOIN IBOD ON IEXI.IDBODEGA=IBOD.IDBODEGA
         WHERE IDARTICULO=@IDARTICULO
         AND EXISLOTE>0
         GROUP BY IEXI.IDBODEGA,IBOD.DESCRIPCION

         RETURN
      END
      ELSE
      BEGIN
         SELECT 'KO'KO
         RETURN
      END
        
   END   
   IF @METODO='BUSCAR_MOV'     
   BEGIN         
      SELECT @DATOS=DATOS        
      FROM   OPENJSON (@PARAMETROS)
      WITH (           
         DATOS NVARCHAR(MAX) AS JSON 
            )           
      
         SELECT @IDBODEGA=IDBODEGA,   @TIPOMOV=TIPOMOV,  @F_INICIAL=CONVERT(DATETIME,F_INICIAL), @F_FINAL=CONVERT(DATETIME,F_FINAL), @IDARTICULO=IDARTICULO     
         FROM   OPENJSON (@DATOS)
         WITH   ( 
         IDBODEGA VARCHAR(20)       '$.IDBODEGA',
         TIPOMOV VARCHAR(20)       '$.TIPOMOV',
         F_INICIAL DATE        '$.F_INICIAL',
         F_FINAL DATE           '$.F_FINAL',
         IDARTICULO VARCHAR(20)    '$.IDARTICULO'       
         ) 
         IF EXISTS(SELECT * FROM IART WHERE IDARTICULO=@IDARTICULO)
         BEGIN
            SELECT 'OK' OK
            PRINT 'Entradas'
            SELECT IMOV.IDBODEGA, IMOV.IDTIPOMOV, ITMO.DESCRIPCION, SUM(IMOVH.CANTIDAD)CANTIDAD, CONVERT(DECIMAL(14,2),SUM(ISNULL(IMOVH.PCOSTO,0))) PCOSTO
            FROM IMOV INNER JOIN IMOVH ON IMOV.CNSMOV=IMOVH.CNSMOV  
                     INNER JOIN ITMO  ON IMOV.IDTIPOMOV=ITMO.IDTIPOMOV 
            WHERE IMOV.ESTADO=1 AND IMOVH.ESTADO=1 AND ITMO.TIPO='Credito' 
            AND   IMOVH.IDARTICULO=@IDARTICULO
            AND   IMOV.IDBODEGA=CASE WHEN COALESCE(@IDBODEGA,'Todas') <> 'Todas' THEN @IDBODEGA ELSE IMOV.IDBODEGA END 
            AND   IMOV.IDTIPOMOV=CASE WHEN COALESCE(@TIPOMOV,'Todos') <> 'Todos' THEN  @TIPOMOV ELSE IMOV.IDTIPOMOV END 
            AND   IMOV.FECHACONF>=@F_INICIAL
            AND   IMOV.FECHACONF<@F_FINAL
            GROUP BY IMOV.IDBODEGA, IMOV.IDTIPOMOV, ITMO.DESCRIPCION 

            PRINT 'SALIDAS'

            SELECT IMOV.IDBODEGA, IMOV.IDTIPOMOV, ITMO.DESCRIPCION, SUM(ISAL.CANTIDAD)CANTIDAD, CONVERT(DECIMAL(14,2),SUM(ISNULL(ISAL.PCOSTO,0))) PCOSTO
            FROM IMOV INNER JOIN ISAL ON IMOV.CNSMOV=ISAL.CNSMOV                       
                     INNER JOIN ITMO ON IMOV.IDTIPOMOV=ITMO.IDTIPOMOV                 
            WHERE IMOV.ESTADO=1 AND ITMO.TIPO='Debito'                               
            AND   ISAL.IDARTICULO=@IDARTICULO
            AND   IMOV.IDBODEGA=CASE WHEN COALESCE(@IDBODEGA,'Todas') <> 'Todas' THEN @IDBODEGA ELSE IMOV.IDBODEGA END 
            AND   IMOV.IDTIPOMOV=CASE WHEN COALESCE(@TIPOMOV,'Todos') <> 'Todos' THEN  @TIPOMOV ELSE IMOV.IDTIPOMOV END 
            AND   IMOV.FECHACONF>=@F_INICIAL
            AND   IMOV.FECHACONF<@F_FINAL+1
            GROUP BY IMOV.IDBODEGA, IMOV.IDTIPOMOV, ITMO.DESCRIPCION 
         RETURN
      END
      ELSE
      BEGIN
         SELECT 'KO'KO
         RETURN
      END
   END   
   IF @METODO='DETALLE_ENTRADA'     
   BEGIN         
      SELECT @DATOS=DATOS,@IDBODEGA=IDBODEGA,@TIPOMOV=IDTIPOMOV       
      FROM   OPENJSON (@PARAMETROS)
      WITH (           
         DATOS NVARCHAR(MAX) AS JSON ,
         IDBODEGA VARCHAR(20) '$.IDBODEGA',
         IDTIPOMOV VARCHAR(20) '$.IDTIPOMOV'
            )           
         PRINT '@IDBODEGA ='+@IDBODEGA
         PRINT '@TIPOMOV ='+@TIPOMOV
         SELECT  @F_INICIAL=CONVERT(DATETIME,F_INICIAL), @F_FINAL=CONVERT(DATETIME,F_FINAL), @IDARTICULO=IDARTICULO     
         FROM   OPENJSON (@DATOS)
         WITH   ( 
         F_INICIAL DATE        '$.F_INICIAL',
         F_FINAL DATE           '$.F_FINAL',
         IDARTICULO VARCHAR(20)    '$.IDARTICULO'       
         ) 
         IF EXISTS(SELECT * FROM IART WHERE IDARTICULO=@IDARTICULO)
         BEGIN
            SELECT 'OK'OK
            IF @TIPOMOV = DBO.FNK_VALORVARIABLE('IDINVMOV_COMPRAS') OR @TIPOMOV=DBO.FNK_VALORVARIABLE('IDINVMOV_REMISION_EN')
            BEGIN
               PRINT 'Compras de Farmacia'
               SELECT DBO.FNK_FECHA_GRINGA(IMOV.FECHAMOV)FECHAMOV,DBO.FNK_FECHA_GRINGA(IMOV.FECHACONF)FECHACONF,IMOV.NODOCUMENTO,DBO.FNK_FECHA_GRINGA(IMOV.F_FACTURA)F_FACTURA,
                      CONVERT(INT,IMOVH.CANTIDAD)CANTIDAD,CONVERT(DECIMAL(14,2),IMOVH.PCOSTO)PCOSTO,IMOVH.NOLOTE,IMOVH.NOLOTEPEDIDO,IMOV.CNSFCOM,IMOV.CNSMOV,TER.NIT,TER.RAZONSOCIAL 
               FROM IMOV INNER JOIN IMOVH ON IMOV.CNSMOV=IMOVH.CNSMOV
                         INNER JOIN TER ON IMOV.IDTERCERO=TER.IDTERCERO
               WHERE IMOV.IDBODEGA=@IDBODEGA
               AND IMOV.IDTIPOMOV=@TIPOMOV
               AND IMOV.FECHACONF>=@F_INICIAL
               AND IMOV.FECHACONF<@F_FINAL+1
               AND IMOV.ESTADO=1
               AND IMOVH.IDARTICULO=@IDARTICULO
               RETURN
            END
            ELSE
            BEGIN
               PRINT 'OTROS MOVIMIENTOS'
               SELECT DBO.FNK_FECHA_GRINGA(IMOV.FECHAMOV)FECHAMOV,DBO.FNK_FECHA_GRINGA(IMOV.FECHACONF)FECHACONF,IMOV.NODOCUMENTO,DBO.FNK_FECHA_GRINGA(IMOV.F_FACTURA)F_FACTURA,
               CONVERT(INT,IMOVH.CANTIDAD)CANTIDAD,CONVERT(DECIMAL(14,2),IMOVH.PCOSTO),IMOVH.NOLOTE,IMOVH.NOLOTEPEDIDO,IMOV.CNSFCOM,IMOV.CNSMOV,AFI.DOCIDAFILIADO,AFI.NOMBREAFI
                     FROM IMOV INNER JOIN IMOVH ON IMOV.CNSMOV=IMOVH.CNSMOV
                               LEFT  JOIN HADM ON IMOV.NODOCUMENTO=HADM.NOADMISION
                               LEFT JOIN AFI   ON HADM.IDAFILIADO=AFI.IDAFILIADO
               WHERE IMOV.IDBODEGA=@IDBODEGA
               AND IMOV.IDTIPOMOV=@TIPOMOV
               AND IMOV.FECHACONF>=@F_INICIAL
               AND IMOV.FECHACONF<@F_FINAL+1
               AND IMOV.ESTADO=1
               AND IMOV.PROCEDENCIA<>'INV'
               AND IMOVH.IDARTICULO=@IDARTICULO
               UNION ALL
               SELECT DBO.FNK_FECHA_GRINGA(IMOV.FECHAMOV)FECHAMOV,DBO.FNK_FECHA_GRINGA(IMOV.FECHACONF)FECHACONF,IMOV.NODOCUMENTO,DBO.FNK_FECHA_GRINGA(IMOV.F_FACTURA)F_FACTURA,
                      CONVERT(INT,IMOVH.CANTIDAD)CANTIDAD,CONVERT(DECIMAL(14,2),IMOVH.PCOSTO),IMOVH.NOLOTE,IMOVH.NOLOTEPEDIDO,IMOV.CNSFCOM,IMOV.CNSMOV,TER.NIT,TER.RAZONSOCIAL 
               FROM IMOV INNER JOIN IMOVH ON IMOV.CNSMOV=IMOVH.CNSMOV
                         INNER JOIN TER ON IMOV.IDTERCERO=TER.IDTERCERO
               WHERE IMOV.IDBODEGA=@IDBODEGA
               AND IMOV.IDTIPOMOV=@TIPOMOV
               AND IMOV.FECHACONF>=@F_INICIAL
               AND IMOV.FECHACONF<@F_FINAL+1
               AND IMOV.ESTADO=1
               AND IMOVH.IDARTICULO=@IDARTICULO
            END
         END
      END
   IF @METODO='DETALLE_SALIDA'     
   BEGIN         
      SELECT @DATOS=DATOS,@IDBODEGA=IDBODEGA,@TIPOMOV=IDTIPOMOV       
      FROM   OPENJSON (@PARAMETROS)
      WITH (           
         DATOS NVARCHAR(MAX) AS JSON ,
         IDBODEGA VARCHAR(20) '$.IDBODEGA',
         IDTIPOMOV VARCHAR(20) '$.IDTIPOMOV'
            )           
         PRINT '@IDBODEGA ='+@IDBODEGA
         PRINT '@TIPOMOV ='+@TIPOMOV
         SELECT  @F_INICIAL=CONVERT(DATETIME,F_INICIAL), @F_FINAL=CONVERT(DATETIME,F_FINAL), @IDARTICULO=IDARTICULO     
         FROM   OPENJSON (@DATOS)
         WITH   ( 
         F_INICIAL DATE        '$.F_INICIAL',
         F_FINAL DATE           '$.F_FINAL',
         IDARTICULO VARCHAR(20)    '$.IDARTICULO'       
      ) 
      IF EXISTS(SELECT * FROM IART WHERE IDARTICULO=@IDARTICULO)
      BEGIN
         SELECT 'OK'OK
         PRINT 'SALIDAS DE INVENTARIO'
         SELECT DBO.FNK_FECHA_GRINGA(IMOV.FECHAMOV)FECHAMOV,DBO.FNK_FECHA_GRINGA(IMOV.FECHACONF)FECHACONF,IMOV.NODOCUMENTO,DBO.FNK_FECHA_GRINGA(IMOV.F_FACTURA)F_FACTURA,
         CONVERT(INT,ISAL.CANTIDAD)CANTIDAD,CONVERT(DECIMAL(14,2),ISAL.PCOSTO),ISAL.NOLOTE,ISAL.NOLOTEPEDIDO,IMOV.NODOCUMENTO,IMOV.CNSMOV,AFI.DOCIDAFILIADO,AFI.NOMBREAFI
               FROM IMOV INNER JOIN ISAL ON IMOV.CNSMOV=ISAL.CNSMOV
                           INNER JOIN IZSOL ON IMOV.NODOCUMENTO=IZSOL.CNSIZSOL
                           LEFT  JOIN HADM ON IZSOL.NOADMISION=HADM.NOADMISION
                           LEFT JOIN AFI   ON HADM.IDAFILIADO=AFI.IDAFILIADO
         WHERE IMOV.IDBODEGA=@IDBODEGA
         AND IMOV.IDTIPOMOV=@TIPOMOV
         AND IMOV.FECHACONF>=@F_INICIAL
         AND IMOV.FECHACONF<@F_FINAL+1
         AND IMOV.ESTADO=1
         AND IMOV.PROCEDENCIA='CM_SOL'
         AND ISAL.IDARTICULO=@IDARTICULO
         UNION ALL
         SELECT DBO.FNK_FECHA_GRINGA(IMOV.FECHAMOV)FECHAMOV,DBO.FNK_FECHA_GRINGA(IMOV.FECHACONF)FECHACONF,IMOV.NODOCUMENTO,DBO.FNK_FECHA_GRINGA(IMOV.F_FACTURA)F_FACTURA,
                  CONVERT(INT,IMOVH.CANTIDAD)CANTIDAD,CONVERT(DECIMAL(14,2),IMOVH.PCOSTO),IMOVH.NOLOTE,IMOVH.NOLOTEPEDIDO,IMOV.CNSFCOM,IMOV.CNSMOV,TER.NIT,TER.RAZONSOCIAL 
         FROM IMOV INNER JOIN IMOVH ON IMOV.CNSMOV=IMOVH.CNSMOV
                     INNER JOIN TER ON IMOV.IDTERCERO=TER.IDTERCERO
         WHERE IMOV.IDBODEGA=@IDBODEGA
         AND IMOV.IDTIPOMOV=@TIPOMOV
         AND IMOV.FECHACONF>=@F_INICIAL
         AND IMOV.FECHACONF<@F_FINAL+1
         AND IMOV.ESTADO=1
         AND IMOV.PROCEDENCIA='INV'
         AND IMOVH.IDARTICULO=@IDARTICULO

      END
   END
   IF @METODO='MEDPEN_APLICAR'     
   BEGIN       
      SELECT @IDSEDE= COALESCE(UBEQ.IDSEDE,USUSU.IDSEDE),@COMPANIA=COALESCE(UBEQ.COMPANIA,USUSU.COMPANIA) 
      FROM USUSU LEFT JOIN UBEQ ON USUSU.SYS_ComputerName=UBEQ.SYS_ComputerName
      WHERE USUARIO=@USUARIO
         
      BEGIN TRY
         PRINT 'AQUI LLAMO A GENCONSECUTIVO @IDSEDE='+COALESCE(@IDSEDE,'SIN SEDE')  +COALESCE(@COMPANIA,'CIA') 
         SELECT @CNSRPDX=''
		   EXEC SPK_GENCONSECUTIVO @COMPANIA,@IDSEDE, '@RPDX', @CNSRPDX OUTPUT  
         PRINT '@CNSRPDX='+COALESCE(@CNSRPDX,'')   
		   SELECT @CNSRPDX = @IDSEDE + REPLACE(SPACE(8 - LEN(@CNSRPDX))+LTRIM(RTRIM(@CNSRPDX)),SPACE(1),0)
		   PRINT '@CNSRPDX='+COALESCE(@CNSRPDX,'')                    
      END TRY
      BEGIN CATCH
         INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE()
         SELECT ERROR AS ERROR FROM  @TBLERRORES 
         RETURN
      END CATCH

      INSERT INTO RPDX (CNS, IDTERCERO, STRINGMEDIO1, ID1, ID2, NOMBRE, CANTIDAD, FECHA1, CANTIDAD1,VALOR1)
        SELECT @CNSRPDX, 'IENF', SEC.DESCRIPCION, I.NOADMISION, I.IDSERVICIO, SER.DESCSERVICIO, I.CANTIDAD,
              F_RECIBIDO=I.FECHA, HORAS=DATEDIFF(HOUR,I.FECHA,GETDATE()),ROW_NUMBER() OVER(ORDER  BY @CNSRPDX  ASC) AS ID
        FROM (
        		SELECT NOADMISION=NOREFERENCIA, FECHA=MIN(FECHA), IDSERVICIO, CANTIDAD=COUNT(1)
        		FROM IENF WHERE IENF.TIPO='NOADMISION' AND IENF.COBRADO=0 AND IENF.DEVUELTO=0 AND IENF.APLICADO=0 
            AND IENF.DESECHADO=0 AND IENF.ENTREGADO=0
        		GROUP BY NOREFERENCIA, CONVERT(DATE,FECHA), IDSERVICIO
        	) AS I
           INNER JOIN HHAB ON HHAB.NOADMISION=I.NOADMISION AND HHAB.CLASE='Cama' AND HHAB.ESTADOHAB='Ocupada'
           INNER JOIN HHAB SEC ON SEC.HABCAMA=HHAB.SECTOR AND SEC.CLASE='Sector'
           INNER JOIN SER ON SER.IDSERVICIO=I.IDSERVICIO
        ORDER BY HORAS DESC

        SELECT 'OK'OK,@CNSRPDX AS CNSRPDX
        RETURN 
   END   
   IF @METODO='BORRAR_RPDX'     
   BEGIN         
      SELECT @CNSRPDX=CNSRPDX        
      FROM   OPENJSON (@PARAMETROS)
      WITH (           
        CNSRPDX  VARCHAR(20) '$.CNSRPDX'
         )               
      DELETE RPDX WHERE CNS=@CNSRPDX
    END
   IF @METODO='BUSCAR_LOTE'     
   BEGIN         
      SELECT @NOLOTE=NOLOTE,@IDBODEGA = IDBODEGA,@IDTIPOMOV = IDTIPOMOV
      FROM   OPENJSON (@PARAMETROS)
      WITH (           
         NOLOTE NVARCHAR(20) '$.NOLOTE',
         IDBODEGA  VARCHAR(20)   '$.IDBODEGA',
         IDTIPOMOV  VARCHAR(20)   '$.IDTIPOMOV'
            ) 
      IF EXISTS(SELECT  * FROM IEXI WHERE NOLOTE=@NOLOTE AND IDBODEGA=CASE WHEN COALESCE(@IDBODEGA,'Todas')<>'Todas' THEN @IDBODEGA ELSE IEXI.IDBODEGA END)
      BEGIN
         SELECT 'OK' OK
         SELECT IDBODEGA, NOLOTEPEDIDO,NOLOTE,IEXI.IDARTICULO,IART.DESCRIPCION,IEXI.EXISLOTE
         FROM IEXI INNER JOIN IART ON IEXI.IDARTICULO=IART.IDARTICULO
         WHERE IEXI.NOLOTE=@NOLOTE
         AND IEXI.IDBODEGA=CASE WHEN COALESCE(@IDBODEGA,'Todas')<>'Todas' THEN @IDBODEGA ELSE IEXI.IDBODEGA END

         --Movimientos 

         SELECT IMOV.IDBODEGA, DBO.FNK_FECHA_GRINGA(COALESCE(IMOV.FECHACONF,IMOV.FECHAMOV)) FECHA, CONVERT(VARCHAR,COALESCE(IMOV.FECHACONF,IMOV.FECHAMOV),108)HORA,
         CASE WHEN ITMO.TIPO = 'CREDITO' THEN 'INGRESO AL ALMACEN' ELSE 'SALIDA DEL ALMACEN' END+' DE '+CAST(CAST(IMOVH.CANTIDAD AS DECIMAL(14,2)) AS VARCHAR)+' POR '+  
         CASE WHEN DBO.FNK_VALORVARIABLE('IDINVMOV_VENTAS')=ITMO.IDTIPOMOV THEN 'ENTREGA AL PACIENTE' ELSE ITMO.DESCRIPCION END 
         +CASE ITMO.IDTIPOMOV  
                WHEN DBO.FNK_VALORVARIABLE('IDINVMOV_VENTAS') THEN ISNULL(' ('+(SELECT DBO.FNK_NOMBRE_AFI(IDAFILIADO) FROM IZSOL INNER JOIN HADM ON HADM.NOADMISION=IZSOL.NOADMISION WHERE CNSIZSOL=IMOV.NODOCUMENTO)+')','') 
                WHEN DBO.FNK_VALORVARIABLE('IDCINVMOVPREDEV') THEN ISNULL(' ('+(SELECT DBO.FNK_NOMBRE_AFI(IDAFILIADO) FROM HADM WHERE NOADMISION=IMOV.NODOCUMENTO)+')','')  
                ELSE '' END EVENTO 
         ,IMOV.CNSMOV,IMOVH.NOLOTE,CAST(IMOVH.CANTIDAD AS DECIMAL(14,2)) CANTIDAD INTO #T
         FROM IMOVH  
         INNER JOIN IMOV ON IMOVH.CNSMOV = IMOV.CNSMOV 
         INNER JOIN ITMO ON IMOV.IDTIPOMOV = ITMO.IDTIPOMOV 
         INNER JOIN IART ON IMOVH.IDARTICULO = IART.IDARTICULO 
         WHERE @NOLOTE IN (NOLOTE,NOLOTEPEDIDO) 
         AND IMOV.IDBODEGA=CASE WHEN COALESCE(@IDBODEGA,'Todas')<>'Todas' THEN @IDBODEGA ELSE IMOV.IDBODEGA END
         AND IMOV.IDTIPOMOV=CASE WHEN COALESCE(@IDTIPOMOV,'Todos')<>'Todos' THEN @IDTIPOMOV ELSE IMOV.IDTIPOMOV END
         AND IMOV.ESTADO=1 
         ORDER BY ISNULL(IMOV.FECHACONF,IMOV.FECHAMOV)

         SELECT  * FROM #T

         SELECT IMOV.IDBODEGA,CNSIZSOL,DBO.FNK_FECHA_GRINGA(IZSOL.FECHASOL)FECHASOL,CONVERT(VARCHAR,IZSOL.FECHASOL,108)HORA,SOL.NOMBRE SOLICITA ,CONF.NOMBRE CONFIRMA,T.CNSMOV
         FROM IMOV INNER JOIN IZSOL ON IZSOL.CNSIZSOL=IMOV.NODOCUMENTO 
                   INNER JOIN #T T ON IMOV.CNSMOV=T.CNSMOV
                   LEFT JOIN USUSU SOL ON SOL.USUARIO=IMOV.IDSOLICITA  
                   LEFT JOIN USUSU CONF ON CONF.USUARIO=IMOV.USUARIOCONF  
         UNION ALL
         SELECT IMOV.IDBODEGA,IMOV.CNSMOV,DBO.FNK_FECHA_GRINGA(IMOV.FECHACONF),CONVERT(VARCHAR,IMOV.FECHACONF,108),SOL.NOMBRE,CONF.NOMBRE,T.CNSMOV
         FROM IMOV INNER JOIN IMOVH  ON IMOV.CNSMOV=IMOVH.CNSMOV 
                   INNER JOIN #T T ON IMOV.CNSMOV=T.CNSMOV
                   LEFT JOIN USUSU SOL ON SOL.USUARIO=IMOV.IDSOLICITA  
                   LEFT JOIN USUSU CONF ON CONF.USUARIO=IMOV.USUARIOCONF 
         WHERE IMOV.PROCEDENCIA<>'CM_SOL'
         AND @NOLOTE IN (IMOVH.NOLOTE,NOLOTEPEDIDO) 
         AND IMOV.IDBODEGA=CASE WHEN COALESCE(@IDBODEGA,'Todas')<>'Todas' THEN @IDBODEGA ELSE IMOV.IDBODEGA END

         

         RETURN 
      END
      ELSE
      BEGIN
         SELECT 'KO'KO
         RETURN 
      END
    END 
   IF @METODO='AJUSTA_PCOSTO'     
   BEGIN         
      SELECT @DATOS=DATOS        
      FROM   OPENJSON (@PARAMETROS)
      WITH (           
         DATOS NVARCHAR(MAX) AS JSON 
            )           
      
         SELECT @IDARTICULO=IDARTICULO,@PCOSTO=PCOSTO        
         FROM   OPENJSON (@DATOS)
         WITH   (  
         IDARTICULO VARCHAR(20) '$.IDARTICULO',
         PCOSTO  DECIMAL(14,2)  '$.PCOSTONV'
         )
      IF EXISTS(SELECT * FROM IART WHERE IDARTICULO=@IDARTICULO) AND COALESCE(@PCOSTO,0)>0
      BEGIN
         DECLARE @PCOSTOA DECIMAL(14,2)
         SELECT @PCOSTOA=COALESCE(PCOSTO,0) FROM IART WHERE IDARTICULO=@IDARTICULO
         UPDATE IART SET PCOSTO=@PCOSTO WHERE IDARTICULO=@IDARTICULO

         SELECT @IDSEDE= COALESCE(UBEQ.IDSEDE,USUSU.IDSEDE),@COMPANIA=COALESCE(UBEQ.COMPANIA,USUSU.COMPANIA),
         @SYS_COMPUTERNAME=COALESCE(USUSU.SYS_COMPUTERNAME,HOST_NAME())
         FROM USUSU LEFT JOIN UBEQ ON USUSU.SYS_ComputerName=UBEQ.SYS_ComputerName
         WHERE USUARIO=@USUARIO

         SELECT @CNSLOG=SPACE(20)
         EXEC SPK_GENCONSECUTIVO @COMPANIA, @IDSEDE, '@LOG',  @CNSLOG OUTPUT  
         SELECT @CNSLOG = @IDSEDE + REPLACE(SPACE(8 - LEN(@CNSLOG))+LTRIM(RTRIM(@CNSLOG)),SPACE(1),0)
         
            -- el log debe mirarse donde apunta bdix revisar
         INSERT INTO USLOG (CNSLOG, COMPANIA, NOADMISION, PROCESO, REQUEST, REFERENCIA, USUARIO, FECHA, SYS_ComputerName,TABLA) 
         SELECT @CNSLOG, @COMPANIA, @IDARTICULO, 'PCOSTO', 'CHANGE', 'IDATICULO:'+@IDARTICULO, @USUARIO, 
                  DBO.FNK_GETDATE(), @SYS_COMPUTERNAME,'IART'         
         INSERT INTO USLOGH( CNSLOG, ITEM, CAMPO, VALORANT, VALORNVO)
         SELECT @CNSLOG, 1, 'PCOSTO', @PCOSTOA, @PCOSTO  

         SELECT 'OK'OK, @PCOSTO  PCOSTO
         RETURN
      END
      ELSE
      BEGIN
         SELECT 'KO'KO, CASE WHEN COALESCE(@PCOSTO,0)<=0 THEN 'El Nuevo precio de Costo debe ser Mayor que Cero' ELSE 'Articulo no Encontrado ' END ERROR
      END
   END  
   IF @METODO='ACTUALIZAR_EXISTENCIAS'     
   BEGIN
      BEGIN TRY           
         EXEC SPK_AJUSTE_IDXB_IART                
      END TRY
      BEGIN CATCH
            INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE()
      END CATCH
      IF EXISTS(SELECT * FROM @TBLERRORES)
      BEGIN
         SELECT 'KO' KO
         SELECT * FROM @TBLERRORES
      END
      ELSE
      BEGIN
         SELECT 'OK' OK
      END
      RETURN
   END
   IF @METODO='GENERA_CNSRPDX'     
   BEGIN   
      SELECT @IDSEDE= COALESCE(UBEQ.IDSEDE,USUSU.IDSEDE),@COMPANIA=COALESCE(UBEQ.COMPANIA,USUSU.COMPANIA),
      @SYS_COMPUTERNAME=COALESCE(USUSU.SYS_COMPUTERNAME,HOST_NAME())
      FROM USUSU LEFT JOIN UBEQ ON USUSU.SYS_ComputerName=UBEQ.SYS_ComputerName
      WHERE USUARIO=@USUARIO

      SELECT @CNSRPDX=SPACE(20)
      EXEC SPK_GENCONSECUTIVO @COMPANIA, @IDSEDE, '@RPDX',  @CNSRPDX OUTPUT  
      SELECT @CNSRPDX = @IDSEDE + REPLACE(SPACE(8 - LEN(@CNSRPDX))+LTRIM(RTRIM(@CNSRPDX)),SPACE(1),0)   
      IF COALESCE(@CNSRPDX,'')<>''
      BEGIN
         SELECT 'OK'OK,@CNSRPDX CNSRPDX
      END
      ELSE
      BEGIN
         SELECT 'KO'KO,'No se ha Generado el Consecutivo '
      END
      RETURN
   END  
   IF @METODO='BUSCAR_PROMEPEDIDO'     
   BEGIN       
      SELECT @CNSRPDX   = CNSRPDX,
             @F_INICIAL = CONVERT(DATE,F_INICIAL),
             @F_FINAL   = CONVERT(DATE,F_FINAL),
             @TBODEGA   = CASE WHEN TBODEGA='true' THEN 1 ELSE 0 END ,
             @SVENTAS   = CASE WHEN SVENTAS='true' THEN 1 ELSE 0 END,
             @IDBODEGA  = IDBODEGA
      FROM   OPENJSON (@PARAMETROS)
      WITH (           
         CNSRPDX VARCHAR(20) '$.CNSRPDX',
         F_INICIAL VARCHAR(20) '$.F_INICIAL',
         F_FINAL  VARCHAR(20)  '$.F_FINAL',
         TBODEGA VARCHAR(5)  '$.TBODEGA',
         SVENTAS VARCHAR(10) '$.SVENTAS',
         IDBODEGA VARCHAR(20) '$.IDBODEGA'
       )  
      DELETE RPDX WHERE CNS=@CNSRPDX 
      IF @F_FINAL<=@F_INICIAL
      BEGIN
         SELECT 'KO' KO,'La Fecha final debe ser Mayor a la Fecha Inicial, Verfique e intente de nuevo'
         RETURN
      END
      SELECT @IDBODEGA =CASE WHEN @TBODEGA=1 THEN '' ELSE @IDBODEGA END
      INSERT INTO RPDX(CNS,ID1,STRINGMEDIO1,VALOR1,VALOR2,VALOR3,VALOR4,VALOR5,VALOR6)
      SELECT @CNSRPDX, IDARTICULO, DESCARTICULO, SUM(EXISTENCIA), SUM(SALIDAS), SUM(PROMEDIO), SUM(ENTRADAS), SUM(PROM_ENT), SUM(APEDIR) 
      FROM FNK_INV_CONSUMOYPEDIDOART(@F_INICIAL,@F_FINAL,@SVENTAS,'',@IDBODEGA) 
      GROUP BY IDARTICULO, DESCARTICULO

      SELECT 'OK' OK
      RETURN 
   END  
   IF @METODO='BUSCAR_PROMEBODEGA'     
   BEGIN     
      SELECT @CNSRPDX=CNSRPDX,@F_INICIAL=CONVERT(DATE,F_INICIAL),@F_FINAL=CONVERT(DATE,F_FINAL),
      @TBODEGA=CASE WHEN TBODEGA='true' THEN 1 ELSE 0 END ,
      @SVENTAS= CASE WHEN SVENTAS='true' THEN 1 ELSE 0 END,@IDBODEGA=IDBODEGA,@IDARTICULO=IDARTICULO
      FROM   OPENJSON (@PARAMETROS)
      WITH (           
         CNSRPDX VARCHAR(20) '$.CNSRPDX',
         F_INICIAL VARCHAR(20) '$.F_INICIAL',
         F_FINAL  VARCHAR(20)  '$.F_FINAL',
         TBODEGA VARCHAR(5)  '$.TBODEGA',
         SVENTAS VARCHAR(10) '$.SVENTAS',
         IDBODEGA VARCHAR(20) '$.IDBODEGA',
         IDARTICULO VARCHAR(20) '$.IDARTICULO'
       )  
      DELETE RPDX WHERE CNS=@CNSRPDX 
      IF @F_FINAL<=@F_INICIAL
      BEGIN
         SELECT 'KO' KO,'La Fecha final debe ser Mayor a la Fecha Inicial, Verfique e intente de nuevo'
         RETURN
      END
      SELECT @IDBODEGA =CASE WHEN @TBODEGA=0 THEN '' ELSE @IDBODEGA END

      INSERT INTO RPDX(CNS,ID1,NOMBRE,VALOR1,VALOR2,VALOR3,VALOR4,VALOR5,VALOR6)
      SELECT @CNSRPDX,IDBODEGA, DESCBODEGA, EXISTENCIA, SALIDAS, PROMEDIO, ENTRADAS, PROM_ENT, APEDIR 
      FROM FNK_INV_CONSUMOYPEDIDOART(@F_INICIAL,@F_FINAL,@SVENTAS,@IDARTICULO,@IDBODEGA) 

      SELECT 'OK' OK
      RETURN 
   END  
   IF @METODO='LIMPIAR_RPDX'     
   BEGIN         
      SELECT @CNSRPDX=CNSRPDX      
      FROM   OPENJSON (@PARAMETROS)
      WITH (           
      CNSRPDX VARCHAR(20) '$.CNSRPDX'
      )
      DELETE RPDX WHERE CNS=@CNSRPDX 
      DELETE RPDX WHERE CNS=@CNSRPDX+'_1'
      SELECT 'OK' OK
      RETURN
   END  
   IF @METODO='EXPORTAR_CONPROM'     
   BEGIN         
      SELECT @CNSRPDX=CNSRPDX      
      FROM   OPENJSON (@PARAMETROS)
      WITH (           
      CNSRPDX VARCHAR(20) '$.CNSRPDX'
      )
      SELECT 'OK' OK
      SELECT ROW_NUMBER() OVER(ORDER  BY CNS,ID1  DESC)ID,ID1 IDARTICULO,STRINGMEDIO1 DESCARTICULO,VALOR1 EXISTENCIA,VALOR2 SALIDAS,
                       VALOR3 PROMEDIO,VALOR4 ENTRADAS,VALOR5 PROM_ENT,VALOR6 APEDIR
      FROM RPDX 
      WHERE CNS = @CNSRPDX
      RETURN
   END 
   IF @METODO='KARDEX_PERIODOS'     
   BEGIN         
      SELECT 'OK'OK
      SELECT DISTINCT ANO FROM IHIS ORDER BY ANO DESC
      SELECT IDBODEGA value, CONCAT(IDBODEGA,' - ',DESCRIPCION) label FROM IBOD WHERE ESTADO='Activo'
   END
   IF @METODO='KARDEX_DESCARGA'     
   BEGIN         
      SELECT @ANO=ANO, @MES=CONVERT(INT,MES),@IDBODEGA=IDBODEGA        
      FROM   OPENJSON (@PARAMETROS)
      WITH (           
      ANO  VARCHAR(20)   '$.ANO',
      MES  VARCHAR(20)   '$.MES',
      IDBODEGA  VARCHAR(20)   '$.BODEGA'
      )

      SELECT 'OK' OK
      SELECT * FROM(
      SELECT ROW_NUMBER() OVER(ORDER  BY IART.DESCRIPCION,IHISD.NOLOTE)ID,
      IART.DESCRIPCION AS NOMBRE_ARTICULO,IPAC.DESCRIPCION AS PRINCIPIO,ICCN.DESCRIPCION AS CONCENTRACION,IFFA.DESCRIPCION FORMA_FARMA,IHISD.NOLOTE,IEXI.NOLOTEPEDIDO,
      DBO.FNK_FECHA_DDMMAA(IEXI.FECHAVENCE)F_VENCE,TP.DESCRIPCION PRESENTA_COMERCIAL,TER.RAZONSOCIAL AS FABRICANTE,TR.DESCRIPCION AS RIESGO,IART.PCOSTO,
      CONVERT(INT,SUM(CASE WHEN IHIS.DIA=1 THEN  SALDOINICIAL ELSE 0 END))      AS SI,
      CONVERT(INT,SUM(CASE WHEN IHIS.DIA=1 THEN  MOVIMIENTOENTRADA ELSE 0 END)) AS [E01],
      CONVERT(INT,SUM(CASE WHEN IHIS.DIA=2 THEN  MOVIMIENTOENTRADA ELSE 0 END)) AS E02,
      CONVERT(INT,SUM(CASE WHEN IHIS.DIA=3 THEN  MOVIMIENTOENTRADA ELSE 0 END)) AS [E03],
      CONVERT(INT,SUM(CASE WHEN IHIS.DIA=4 THEN  MOVIMIENTOENTRADA ELSE 0 END)) AS [E04],
      CONVERT(INT,SUM(CASE WHEN IHIS.DIA=5 THEN  MOVIMIENTOENTRADA ELSE 0 END)) AS [E05],
      CONVERT(INT,SUM(CASE WHEN IHIS.DIA=6 THEN  MOVIMIENTOENTRADA ELSE 0 END)) AS [E06],
      CONVERT(INT,SUM(CASE WHEN IHIS.DIA=7 THEN  MOVIMIENTOENTRADA ELSE 0 END)) AS [E07],
      CONVERT(INT,SUM(CASE WHEN IHIS.DIA=8 THEN  MOVIMIENTOENTRADA ELSE 0 END)) AS [E08],
      CONVERT(INT,SUM(CASE WHEN IHIS.DIA=8 THEN  MOVIMIENTOENTRADA ELSE 0 END)) AS [E09],
      CONVERT(INT,SUM(CASE WHEN IHIS.DIA=10 THEN MOVIMIENTOENTRADA ELSE 0 END))AS [E10],
      CONVERT(INT,SUM(CASE WHEN IHIS.DIA=11 THEN MOVIMIENTOENTRADA ELSE 0 END))AS [E11],
      CONVERT(INT,SUM(CASE WHEN IHIS.DIA=12 THEN MOVIMIENTOENTRADA ELSE 0 END))AS [E12],
      CONVERT(INT,SUM(CASE WHEN IHIS.DIA=13 THEN MOVIMIENTOENTRADA ELSE 0 END))AS [E13],
      CONVERT(INT,SUM(CASE WHEN IHIS.DIA=14 THEN MOVIMIENTOENTRADA ELSE 0 END))AS [E14],
      CONVERT(INT,SUM(CASE WHEN IHIS.DIA=15 THEN MOVIMIENTOENTRADA ELSE 0 END))AS [E15],
      CONVERT(INT,SUM(CASE WHEN IHIS.DIA=16 THEN MOVIMIENTOENTRADA ELSE 0 END))AS [E16],
      CONVERT(INT,SUM(CASE WHEN IHIS.DIA=17 THEN MOVIMIENTOENTRADA ELSE 0 END))AS [E17],
      CONVERT(INT,SUM(CASE WHEN IHIS.DIA=18 THEN MOVIMIENTOENTRADA ELSE 0 END))AS [E18],
      CONVERT(INT,SUM(CASE WHEN IHIS.DIA=19 THEN MOVIMIENTOENTRADA ELSE 0 END))AS [E19],
      CONVERT(INT,SUM(CASE WHEN IHIS.DIA=20 THEN MOVIMIENTOENTRADA ELSE 0 END))AS [E20],
      CONVERT(INT,SUM(CASE WHEN IHIS.DIA=21 THEN MOVIMIENTOENTRADA ELSE 0 END))AS [E21],
      CONVERT(INT,SUM(CASE WHEN IHIS.DIA=22 THEN MOVIMIENTOENTRADA ELSE 0 END))AS [E22],
      CONVERT(INT,SUM(CASE WHEN IHIS.DIA=23 THEN MOVIMIENTOENTRADA ELSE 0 END))AS [E23],
      CONVERT(INT,SUM(CASE WHEN IHIS.DIA=24 THEN MOVIMIENTOENTRADA ELSE 0 END))AS [E24],
      CONVERT(INT,SUM(CASE WHEN IHIS.DIA=25 THEN MOVIMIENTOENTRADA ELSE 0 END))AS [E25],
      CONVERT(INT,SUM(CASE WHEN IHIS.DIA=26 THEN MOVIMIENTOENTRADA ELSE 0 END))AS [E26],
      CONVERT(INT,SUM(CASE WHEN IHIS.DIA=27 THEN MOVIMIENTOENTRADA ELSE 0 END))AS [E27],
      CONVERT(INT,SUM(CASE WHEN IHIS.DIA=28 THEN MOVIMIENTOENTRADA ELSE 0 END))AS [E28],
      CONVERT(INT,SUM(CASE WHEN IHIS.DIA=29 THEN MOVIMIENTOENTRADA ELSE 0 END))AS [E29],
      CONVERT(INT,SUM(CASE WHEN IHIS.DIA=30 THEN MOVIMIENTOENTRADA ELSE 0 END))AS [E30],
      CONVERT(INT,SUM(CASE WHEN IHIS.DIA=31 THEN MOVIMIENTOENTRADA ELSE 0 END))AS [E31],
      CONVERT(INT,SUM(CASE WHEN IHIS.DIA=1 THEN  MOVIMIENTOSALIDA ELSE 0 END) )AS [S01],
      CONVERT(INT,SUM(CASE WHEN IHIS.DIA=2 THEN  MOVIMIENTOSALIDA ELSE 0 END) )AS [S02],
      CONVERT(INT,SUM(CASE WHEN IHIS.DIA=3 THEN  MOVIMIENTOSALIDA ELSE 0 END) )AS [S03],
      CONVERT(INT,SUM(CASE WHEN IHIS.DIA=4 THEN  MOVIMIENTOSALIDA ELSE 0 END) )AS [S04],
      CONVERT(INT,SUM(CASE WHEN IHIS.DIA=5 THEN  MOVIMIENTOSALIDA ELSE 0 END) )AS [S05],
      CONVERT(INT,SUM(CASE WHEN IHIS.DIA=6 THEN  MOVIMIENTOSALIDA ELSE 0 END) )AS [S06],
      CONVERT(INT,SUM(CASE WHEN IHIS.DIA=7 THEN  MOVIMIENTOSALIDA ELSE 0 END) )AS [S07],
      CONVERT(INT,SUM(CASE WHEN IHIS.DIA=8 THEN  MOVIMIENTOSALIDA ELSE 0 END) )AS [S08],
      CONVERT(INT,SUM(CASE WHEN IHIS.DIA=8 THEN  MOVIMIENTOSALIDA ELSE 0 END) )AS [S09],
      CONVERT(INT,SUM(CASE WHEN IHIS.DIA=10 THEN MOVIMIENTOSALIDA ELSE 0 END) )AS [S10],
      CONVERT(INT,SUM(CASE WHEN IHIS.DIA=11 THEN MOVIMIENTOSALIDA ELSE 0 END) )AS [S11],
      CONVERT(INT,SUM(CASE WHEN IHIS.DIA=12 THEN MOVIMIENTOSALIDA ELSE 0 END) )AS [S12],
      CONVERT(INT,SUM(CASE WHEN IHIS.DIA=13 THEN MOVIMIENTOSALIDA ELSE 0 END) )AS [S13],
      CONVERT(INT,SUM(CASE WHEN IHIS.DIA=14 THEN MOVIMIENTOSALIDA ELSE 0 END) )AS [S14],
      CONVERT(INT,SUM(CASE WHEN IHIS.DIA=15 THEN MOVIMIENTOSALIDA ELSE 0 END) )AS [S15],
      CONVERT(INT,SUM(CASE WHEN IHIS.DIA=16 THEN MOVIMIENTOSALIDA ELSE 0 END) )AS [S16],
      CONVERT(INT,SUM(CASE WHEN IHIS.DIA=17 THEN MOVIMIENTOSALIDA ELSE 0 END) )AS [S17],
      CONVERT(INT,SUM(CASE WHEN IHIS.DIA=18 THEN MOVIMIENTOSALIDA ELSE 0 END) )AS [S18],
      CONVERT(INT,SUM(CASE WHEN IHIS.DIA=19 THEN MOVIMIENTOSALIDA ELSE 0 END) )AS [S19],
      CONVERT(INT,SUM(CASE WHEN IHIS.DIA=20 THEN MOVIMIENTOSALIDA ELSE 0 END) )AS [S20],
      CONVERT(INT,SUM(CASE WHEN IHIS.DIA=21 THEN MOVIMIENTOSALIDA ELSE 0 END) )AS [S21],
      CONVERT(INT,SUM(CASE WHEN IHIS.DIA=22 THEN MOVIMIENTOSALIDA ELSE 0 END) )AS [S22],
      CONVERT(INT,SUM(CASE WHEN IHIS.DIA=23 THEN MOVIMIENTOSALIDA ELSE 0 END) )AS [S23],
      CONVERT(INT,SUM(CASE WHEN IHIS.DIA=24 THEN MOVIMIENTOSALIDA ELSE 0 END) )AS [S24],
      CONVERT(INT,SUM(CASE WHEN IHIS.DIA=25 THEN MOVIMIENTOSALIDA ELSE 0 END) )AS [S25],
      CONVERT(INT,SUM(CASE WHEN IHIS.DIA=26 THEN MOVIMIENTOSALIDA ELSE 0 END) )AS [S26],
      CONVERT(INT,SUM(CASE WHEN IHIS.DIA=27 THEN MOVIMIENTOSALIDA ELSE 0 END) )AS [S27],
      CONVERT(INT,SUM(CASE WHEN IHIS.DIA=28 THEN MOVIMIENTOSALIDA ELSE 0 END) )AS [S28],
      CONVERT(INT,SUM(CASE WHEN IHIS.DIA=29 THEN MOVIMIENTOSALIDA ELSE 0 END) )AS [S29],
      CONVERT(INT,SUM(CASE WHEN IHIS.DIA=30 THEN MOVIMIENTOSALIDA ELSE 0 END) )AS [S30],
      CONVERT(INT,SUM(CASE WHEN IHIS.DIA=31 THEN MOVIMIENTOSALIDA ELSE 0 END) )AS [S31],
      SUM(MOVIMIENTOENTRADA)TOTAL_ENTRADAS,SUM(MOVIMIENTOSALIDA) TOTAL_SALIDAS,
      SUM(CASE WHEN IHIS.DIA=1 THEN SALDOINICIAL+MOVIMIENTOENTRADA ELSE MOVIMIENTOENTRADA END)-SUM(MOVIMIENTOSALIDA) STOCK_FINAL,
      IHISD.IDARTICULO,IART.IDSERVICIO,IHISD.IDBODEGA
      FROM IHIS INNER JOIN IHISD ON IHIS.CNSIHIS=IHISD.CNSIHIS
                INNER  JOIN IEXI ON IHISD.IDARTICULO=IEXI.IDARTICULO AND IHISD.IDBODEGA=IEXI.IDBODEGA AND IEXI.NOLOTE=IHISD.NOLOTE
                INNER JOIN IART ON IHISD.IDARTICULO=IART.IDARTICULO
                LEFT  JOIN IPAC ON IART.IDPRINACTIVO=IPAC.IDPRINACTIVO
                LEFT  JOIN ICCN ON IART.IDCONCENTRA=ICCN.IDCONCENTRA 
                LEFT  JOIN IFFA ON IART.IDFORFARM=IFFA.IDFORFARM
                LEFT JOIN TGEN TR ON IART.CLASERIESGO=TR.CODIGO AND TR.TABLA='IART' AND TR.CAMPO='CLASERIESGO'
                LEFT JOIN TGEN TP ON IART.PRECOMERCIAL=TP.CODIGO AND TP.TABLA='IART' AND TP.CAMPO='PRECOMERCIAL' 
                LEFT JOIN TER ON     IART.IDFABRICANTE=TER.IDTERCERO
      WHERE IHIS.ANO=@ANO
      AND IHIS.MES=@MES
      AND IHISD.IDBODEGA=@IDBODEGA
      GROUP BY IART.DESCRIPCION,IPAC.DESCRIPCION,IFFA.DESCRIPCION,ICCN.DESCRIPCION,IEXI.FECHAVENCE,TP.DESCRIPCION,TER.RAZONSOCIAL,TR.DESCRIPCION,
      IHISD.NOLOTE,IEXI.NOLOTEPEDIDO,IHISD.IDARTICULO,IART.IDSERVICIO,IHISD.IDBODEGA,IART.PCOSTO
      ) X
      ORDER BY X.ID

   END  
END






