CREATE	OR	ALTER PROCEDURE DBO.SPQ_CUE_COL 
	@JSON NVARCHAR(MAX)
WITH ENCRYPTION
AS
DECLARE @PARAMETROS NVARCHAR(MAX)	,@MODELO VARCHAR(100)	,@METODO VARCHAR(100)	,@USUARIO VARCHAR(12)	,@GRUPO VARCHAR(8)
	,@SYS_COMPUTERNAME VARCHAR(254)	,@SEDE VARCHAR(5)	,@A INT	,@IDENTITY INT	,@PROCESO VARCHAR(20)
	,@CUE NVARCHAR(MAX)	,@COMPANIA VARCHAR(2)	,@CUENTA VARCHAR(16)	,@NOMCUENTA VARCHAR(60)	,@TIPO VARCHAR(7)
	,@NEMONICO VARCHAR(20)	,@CENTRO SMALLINT	,@PRODUCTO TINYINT	,@REFERENCIA SMALLINT	,@TERCERO SMALLINT
	,@RETENCION SMALLINT	,@CPTORETENCION VARCHAR(4)	,@AJUSTE SMALLINT	,@CIERRE SMALLINT	,@CUENTAFISCAL VARCHAR(16)
	,@IMPUESTO SMALLINT	,@ESTADO VARCHAR(8)	,@NIVEL SMALLINT	,@CUENTA_SUMA VARCHAR(16)	,@CLASE VARCHAR(10)	,@RUBRO VARCHAR(50)
	,@TIPOTESORERO VARCHAR(20)	,@BANCO VARCHAR(3)	,@SUCURSAL VARCHAR(2)	,@CTA_BCO VARCHAR(40)	,@CODCAJA VARCHAR(4)
	,@DETALLEXTERCERO VARCHAR(2)	,@RESPONSABLE VARCHAR(20)	,@CUENTA_HOMOLOGA VARCHAR(16)	,@CUENTANIIF VARCHAR(16)
	,@CONCEPTOEXO VARCHAR(6)	,@FORMATOEXO VARCHAR(6)	,@NODEDUCIBLE INT	,@ASUMIDA_PRACTICADA SMALLINT
	,@CTACIERRECOSTOS VARCHAR(16)	,@CTACREDITOCOSTOS VARCHAR(16)	,@CORRIENTE SMALLINT	,@CUEESPEJO VARCHAR(16)
	,@RUBRO_ID INT	,@CONCEPTO_ACREENCIA VARCHAR(3)

BEGIN
	SET LANGUAGE Spanish
	SET DATEFORMAT dmy

	SELECT @A = ISJSON(@JSON)
	IF @A = 0
	BEGIN
		RAISERROR ('Json: Formato Erroneo',16,1)
		RETURN
	END

	PRINT 'INGRESE A SPQ_CUE_COL'

	SELECT *
	INTO #JSON
	FROM OPENJSON(@json) WITH (
			MODELO VARCHAR(100) '$.MODELO'
			,METODO VARCHAR(100) '$.METODO'
			,USUARIO VARCHAR(12) '$.USUARIO'
			,PARAMETROS NVARCHAR(MAX) AS JSON
			)

	SELECT @MODELO = MODELO	,@METODO = METODO	,@PARAMETROS = PARAMETROS	,@USUARIO = USUARIO
	FROM #JSON

	--DEFINICION DE TABLA DE ERRORES     
	DECLARE @TBLERRORES TABLE (ERROR VARCHAR(200))

	-- TOMA DEL GRUPO, SYS_COMPUTERNAME, SEDE   DE ACUERDO AL USUARIO     
	PRINT 'USUARIO:' + @USUARIO

	--SELECT @GRUPO = DBO.FNK_DESCIFRAR(GRUPO) FROM USUSU WHERE USUARIO = @USUARIO     
	--SELECT @SYS_COMPUTERNAME = SYS_COMPUTERNAME FROM USUSU WHERE USUARIO = @USUARIO     
	--SELECT @SEDE = IDSEDE FROM UBEQ WHERE SYS_ComputerName = @SYS_COMPUTERNAME     
	IF COALESCE(@SEDE, '') = ''
		SELECT @SEDE = '01'

	PRINT 'SEDE=' + @SEDE

	IF @METODO = 'CRUDCUE'
	BEGIN
		PRINT 'CRUDCUE'

		SELECT @CUE = REGISTRO
		FROM OPENJSON(@PARAMETROS) WITH (REGISTRO NVARCHAR(MAX) AS JSON)

		SELECT @PROCESO = JSON_VALUE(@CUE, '$.PROCESO')

		--Leo Campos enviados y los coloco en las variables respectivas       
		SELECT @COMPANIA = JSON_VALUE(@CUE, '$.COMPANIA')
		SELECT @CUENTA = JSON_VALUE(@CUE, '$.CUENTA')
		SELECT @NOMCUENTA = JSON_VALUE(@CUE, '$.NOMCUENTA')
		SELECT @TIPO = JSON_VALUE(@CUE, '$.TIPO')
		SELECT @NEMONICO = JSON_VALUE(@CUE, '$.NEMONICO')
		SELECT @CENTRO = CAST(JSON_VALUE(@CUE, '$.CENTRO') AS BIT)
		SELECT @PRODUCTO = JSON_VALUE(@CUE, '$.PRODUCTO')
		SELECT @REFERENCIA = CAST(JSON_VALUE(@CUE, '$.REFERENCIA') AS BIT)
		SELECT @TERCERO = CAST(JSON_VALUE(@CUE, '$.TERCERO') AS BIT)
		SELECT @RETENCION = JSON_VALUE(@CUE, '$.RETENCION')
		SELECT @CPTORETENCION = JSON_VALUE(@CUE, '$.CPTORETENCION')
		SELECT @AJUSTE = CAST(JSON_VALUE(@CUE, '$.AJUSTE') AS BIT)
		SELECT @CIERRE = JSON_VALUE(@CUE, '$.CIERRE')
		SELECT @CUENTAFISCAL = JSON_VALUE(@CUE, '$.CUENTAFISCAL')
		SELECT @IMPUESTO = CAST(JSON_VALUE(@CUE, '$.IMPUESTO') AS BIT)
		SELECT @ESTADO = JSON_VALUE(@CUE, '$.ESTADO')
		SELECT @NIVEL = JSON_VALUE(@CUE, '$.NIVEL')
		SELECT @CUENTA_SUMA = JSON_VALUE(@CUE, '$.CUENTA_SUMA')
		SELECT @CLASE = JSON_VALUE(@CUE, '$.CLASE')
		SELECT @RUBRO = JSON_VALUE(@CUE, '$.RUBRO')
		SELECT @TIPOTESORERO = JSON_VALUE(@CUE, '$.TIPOTESORERO')
		SELECT @BANCO = JSON_VALUE(@CUE, '$.BANCO')
		SELECT @SUCURSAL = JSON_VALUE(@CUE, '$.SUCURSAL')
		SELECT @CTA_BCO = JSON_VALUE(@CUE, '$.CTA_BCO')
		SELECT @CODCAJA = JSON_VALUE(@CUE, '$.CODCAJA')
		SELECT @DETALLEXTERCERO = JSON_VALUE(@CUE, '$.DETALLEXTERCERO')
		SELECT @RESPONSABLE = JSON_VALUE(@CUE, '$.RESPONSABLE')
		SELECT @CUENTA_HOMOLOGA = JSON_VALUE(@CUE, '$.CUENTA_HOMOLOGA')
		SELECT @CUENTANIIF = JSON_VALUE(@CUE, '$.CUENTANIIF')
		SELECT @CONCEPTOEXO = JSON_VALUE(@CUE, '$.CONCEPTOEXO')
		SELECT @FORMATOEXO = JSON_VALUE(@CUE, '$.FORMATOEXO')
		SELECT @NODEDUCIBLE = JSON_VALUE(@CUE, '$.NODEDUCIBLE')
		SELECT @ASUMIDA_PRACTICADA = JSON_VALUE(@CUE, '$.ASUMIDA_PRACTICADA')
		SELECT @CTACIERRECOSTOS = JSON_VALUE(@CUE, '$.CTACIERRECOSTOS')
		SELECT @CTACREDITOCOSTOS = JSON_VALUE(@CUE, '$.CTACREDITOCOSTOS')
		SELECT @CORRIENTE = JSON_VALUE(@CUE, '$.CORRIENTE')
		SELECT @CUEESPEJO = JSON_VALUE(@CUE, '$.CUEESPEJO')
		SELECT @RUBRO_ID = JSON_VALUE(@CUE, '$.RUBRO_ID')
		SELECT @CONCEPTO_ACREENCIA = JSON_VALUE(@CUE, '$.CONCEPTO_ACREENCIA')

		IF UPPER(@PROCESO) = 'INSERTAR'
		BEGIN
			PRINT 'INSERTAR'

			BEGIN TRY
				INSERT INTO @TBLERRORES(ERROR) 
				SELECT 'LA CUENTA YA EXISTE'
				WHERE EXISTS (SELECT 1 FROM CUE WHERE CUENTA = @CUENTA)

				IF(SELECT COUNT(*) FROM @TBLERRORES) <=0
				BEGIN
					INSERT INTO CUE (COMPANIA,CUENTA,NOMCUENTA,TIPO,NEMONICO,CENTRO,PRODUCTO,REFERENCIA,TERCERO,RETENCION,CPTORETENCION,AJUSTE
						,CIERRE,CUENTAFISCAL,IMPUESTO,ESTADO,NIVEL,CUENTA_SUMA,CLASE,RUBRO,TIPOTESORERO,BANCO,SUCURSAL,CTA_BCO,CODCAJA
						,DETALLEXTERCERO,RESPONSABLE,CUENTA_HOMOLOGA,CUENTANIIF,CONCEPTOEXO,FORMATOEXO,NODEDUCIBLE,ASUMIDA_PRACTICADA,CTACIERRECOSTOS
						,CTACREDITOCOSTOS,CORRIENTE,CUEESPEJO,RUBRO_ID,CONCEPTO_ACREENCIA)
					SELECT @COMPANIA,@CUENTA,@NOMCUENTA,@TIPO,@NEMONICO,@CENTRO,@PRODUCTO,@REFERENCIA,@TERCERO,@RETENCION,@CPTORETENCION
					,@AJUSTE,@CIERRE,@CUENTAFISCAL,@IMPUESTO,@ESTADO,@NIVEL,@CUENTA_SUMA,@CLASE,@CUENTA,@TIPOTESORERO,@BANCO,@SUCURSAL,@CTA_BCO,@CODCAJA
					,@DETALLEXTERCERO,@RESPONSABLE,@CUENTA_HOMOLOGA,@CUENTANIIF,@CONCEPTOEXO,@FORMATOEXO,@NODEDUCIBLE,@ASUMIDA_PRACTICADA,@CTACIERRECOSTOS
					,@CTACREDITOCOSTOS,@CORRIENTE,@CUEESPEJO,@RUBRO_ID,@CONCEPTO_ACREENCIA

					SELECT @IDENTITY = SCOPE_IDENTITY()
				END
			END TRY

			BEGIN CATCH
				INSERT INTO @TBLERRORES (ERROR)
				SELECT ERROR_MESSAGE()
			END CATCH

			IF (SELECT COUNT(*)	FROM @TBLERRORES) > 0
			BEGIN
				SELECT 'KO' OK
				SELECT ERROR FROM @TBLERRORES
				RETURN
			END

			SELECT 'OK' OK,@IDENTITY CNS
			RETURN
		END

		IF UPPER(@PROCESO) = 'EDITAR'
		BEGIN
			BEGIN TRY
				UPDATE CUE
				SET COMPANIA = @COMPANIA,CUENTA = @CUENTA,NOMCUENTA = @NOMCUENTA,TIPO = @TIPO,NEMONICO = @NEMONICO,CENTRO = @CENTRO,PRODUCTO = @PRODUCTO,REFERENCIA = @REFERENCIA,TERCERO = @TERCERO
				,RETENCION = @RETENCION,CPTORETENCION = @CPTORETENCION,AJUSTE = @AJUSTE,CIERRE = @CIERRE,CUENTAFISCAL = @CUENTAFISCAL,IMPUESTO = @IMPUESTO,ESTADO = @ESTADO,NIVEL = @NIVEL
				,CUENTA_SUMA = @CUENTA_SUMA,CLASE = @CLASE,RUBRO = @CUENTA,TIPOTESORERO = @TIPOTESORERO,BANCO = @BANCO,SUCURSAL = @SUCURSAL,CTA_BCO = @CTA_BCO,CODCAJA = @CODCAJA
				,DETALLEXTERCERO = @DETALLEXTERCERO,RESPONSABLE = @RESPONSABLE,CUENTA_HOMOLOGA = @CUENTA_HOMOLOGA,CUENTANIIF = @CUENTANIIF,CONCEPTOEXO = @CONCEPTOEXO,FORMATOEXO = @FORMATOEXO
				,NODEDUCIBLE = @NODEDUCIBLE,ASUMIDA_PRACTICADA = @ASUMIDA_PRACTICADA,CTACIERRECOSTOS = @CTACIERRECOSTOS,CTACREDITOCOSTOS = @CTACREDITOCOSTOS,CORRIENTE = @CORRIENTE,CUEESPEJO = @CUEESPEJO,RUBRO_ID = @RUBRO_ID,CONCEPTO_ACREENCIA = @CONCEPTO_ACREENCIA
				WHERE CUENTA = @CUENTA
			END TRY

			BEGIN CATCH
				INSERT INTO @TBLERRORES (ERROR)
				SELECT ERROR_MESSAGE()
			END CATCH

			IF (SELECT COUNT(*) FROM @TBLERRORES) > 0
			BEGIN
				SELECT 'KO' OK
				SELECT ERROR FROM @TBLERRORES
				RETURN
			END

			SELECT 'OK' OK
			RETURN
		END

		RETURN
	END
   IF @METODO='VALIDARCUENTAS'     
   BEGIN         
      -- cuentas sumas
      DECLARE @CUEERROR TABLE(CUENTA VARCHAR(20),NOMCUENTA VARCHAR(60),ERROR VARCHAR(255))
      IF EXISTS(SELECT  * FROM CUE WHERE LEFT(CUENTA,LEN(CUENTA)-2)<>CUENTA_SUMA AND LEN(CUENTA)>2 )
      BEGIN
         INSERT INTO @CUEERROR
         SELECT CUENTA,NOMCUENTA,' Cuenta de suma inválida: la cuenta contable '+CUENTA+' no tiene una cuenta de agrupación válida ('+CUENTA_SUMA+'). Verifica la jerarquía del plan contable'
         FROM CUE WHERE LEFT(CUENTA,LEN(CUENTA)-2)<>CUENTA_SUMA AND LEN(CUENTA)>2
      END
      IF EXISTS(SELECT * FROM CUE WHERE CUENTA_SUMA NOT IN(SELECT  CUENTA FROM CUE WHERE TIPO='Suma'))
      BEGIN
         INSERT INTO @CUEERROR
         SELECT CUENTA,NOMCUENTA,'La cuenta '+CUENTA+' debe estar asociada a una cuenta de nivel superior de tipo Suma. la cuenta '+CUENTA_SUMA+' no tiene el tipo requerido'
         FROM CUE WHERE  CUENTA_SUMA NOT IN(SELECT  CUENTA FROM CUE WHERE TIPO='Suma') 
		 AND LEN(CUENTA)>1
      END  
      IF EXISTS(SELECT * FROM CUE WHERE LEN(CUENTA)%2 <>0 AND LEN(CUENTA)>1)
      BEGIN
         INSERT INTO @CUEERROR
         SELECT CUENTA,NOMCUENTA,' Error en la estructura, Error de formato: la longitud del campo debe ser un número par de caracteres. '
         FROM CUE WHERE LEN(CUENTA)%2 <>0 AND LEN(CUENTA)>1
      END
      DECLARE @NRO INT
      DECLARE @B   INT =1 
      DECLARE @MAX INT =10
      WHILE @B<=@MAX
	   BEGIN
         IF  @B=1
         BEGIN
            IF EXISTS(SELECT * FROM CUE WHERE LEN(CUENTA)=1 AND COALESCE(NIVEL,1)<>@B)
            BEGIN
               INSERT INTO @CUEERROR
               SELECT CUENTA,NOMCUENTA,' Error en la estructura, nivel '+CAST(NIVEL AS VARCHAR(2))+' No es Valido para esta Cuenta '
               FROM CUE WHERE LEN(CUENTA)=1 AND NIVEL<>@B   
			   AND LEN(CUENTA)=1
            END
         END
         IF @B>=2
         BEGIN
            IF EXISTS(SELECT * FROM CUE WHERE  LEN(CUENTA)=CASE WHEN @B=2 THEN 2  ELSE (@B-1)*2 END AND NIVEL<>@B )
            BEGIN
               INSERT INTO @CUEERROR
               SELECT CUENTA,NOMCUENTA,' Error en la estructura, nivel '+CAST(NIVEL AS VARCHAR(2))+' No es Valido para esta Cuenta, digitos: '+CAST(LEN(CUENTA) AS VARCHAR(3))+' Nivel Sugerido: '+CAST(@B AS VARCHAR(2))
               FROM CUE WHERE  LEN(CUENTA)=CASE WHEN @B=2 THEN 1  ELSE (@B-1)*2 END AND  NIVEL<>@B  
            END
         END
         SELECT @B +=1
      END
      IF EXISTS(SELECT * FROM @CUEERROR)
      BEGIN
         SELECT 'OK'OK,ERROR=1
         SELECT * FROM @CUEERROR
      END
      ELSE
      BEGIN
         SELECT 'OK'OK,ERROR=0
      END
      RETURN
	 END
    IF @METODO='EXPOCUENTAS'     
    BEGIN         
       SELECT 'OK'OK

       SELECT CUE.COMPANIA,CUE.CUENTA,CUE.NOMCUENTA,CUE.TIPO,CUE.CORRIENTE,CUE.NIVEL,CUE.CUENTA_SUMA,CUENTA_SUMA.NOMCUENTA DESC_CUENTA_SUMA,
       COALESCE(CUE.CENTRO,0) CENTRO,COALESCE(CUE.TERCERO,0)  TERCERO,COALESCE(CUE.CLASE,'OTROS')CLASE,
       COALESCE(CUE.AJUSTE,0)  AJUSTE,COALESCE(CUE.IMPUESTO,0) IMPUESTO,COALESCE(CUE.REFERENCIA,0) REFERENCIA,
       CUE.ESTADO,CUE.TIPOTESORERO,CUE.CONCEPTO_ACREENCIA,CUE.CODCAJA,CAJ.DESCRIPCION DESC_CAJA,CUE.CTA_BCO,CUE.BANCO,CUE.SUCURSAL,
       BCO.DESCRIPCION AS DESC_BCO,CUE.CUEESPEJO,CUEESPEJO.NOMCUENTA DESC_CUEESPEJO,CUE.CTACIERRECOSTOS,CTACIERRECOSTOS.NOMCUENTA DESC_CTACIERRECOSTOS,
       CUE.CTACREDITOCOSTOS,CTACREDITOCOSTOS.NOMCUENTA DESC_CTACREDITOCOSTOS,CUE.CUENTA_HOMOLOGA,CUENTA_HOMOLOGA.NOMCUENTA DESC_CUENTA_HOMOLOG  
       FROM [dbo].[CUE] LEFT JOIN CUE CUENTA_SUMA ON CUE.CUENTA_SUMA = CUENTA_SUMA.CUENTA 
                        LEFT JOIN CUE CUENTA_HOMOLOGA ON CUE.CUENTA_HOMOLOGA = CUENTA_HOMOLOGA.CUENTA 
                        LEFT JOIN CUE CUEESPEJO ON CUE.CUEESPEJO = CUEESPEJO.CUENTA 
                        LEFT JOIN CUE CTACIERRECOSTOS ON CUE.CTACIERRECOSTOS = CTACIERRECOSTOS.CUENTA 
                        LEFT JOIN CUE CTACREDITOCOSTOS ON CUE.CTACREDITOCOSTOS = CTACREDITOCOSTOS.CUENTA 
                        LEFT JOIN BCT ON CUE.CTA_BCO = BCT.CTA_BCO 
                        LEFT JOIN BCO ON BCT.BANCO = BCO.BANCO 
                        LEFT JOIN CAJ ON CUE.CODCAJA = CAJ.CODCAJA 
       ORDER BY CUE.CUENTA ASC
    END  
END



