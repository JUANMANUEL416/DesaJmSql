CREATE OR ALTER PROCEDURE DBO.SPQ_MAGP_COL @JSON NVARCHAR(MAX)
	WITH ENCRYPTION
AS
DECLARE	@TBLERRORES	TABLE (ERROR VARCHAR(MAX))
DECLARE	@CIT		TABLE (
	ITEM INT IDENTITY(1,1), CONSECUTIVO VARCHAR(20), FECHA DATETIME, VIRTUAL SMALLINT DEFAULT 0
	,TIPOCITA VARCHAR(20), IDPLAN VARCHAR(10), DISPONIBILIDAD VARCHAR(20), MPLAN SMALLINT DEFAULT 0
	,WEB SMALLINT, ESPROGRAMAS SMALLINT , MODELOS VARCHAR(256), RCAMBIO BIT DEFAULT 0,TIPO_ATEN VARCHAR(20)
)
DECLARE	 @PARAMETROS	NVARCHAR(MAX),@METODO	 VARCHAR(100),@USUARIO	VARCHAR(12)	,@CONSECUTIVO	VARCHAR(20)				
		,@FECHAINICIAL	DATETIME	,@FECHAFINAL DATETIME	,@IDMEDICO	VARCHAR(20)	,@IDSEDE		VARCHAR(2)
		,@CNSLOG		VARCHAR(20)	,@IDMODELOAG VARCHAR(12),@COMPANIA	VARCHAR(2)	,@TIPO			VARCHAR(1)	
		,@FESTIVOS		SMALLINT	,@USARMODELO SMALLINT	,@INTERVALO SMALLINT	,@CONSECUTIVOCIT VARCHAR(20)
		,@TIPOCITA		VARCHAR(20) ,@VIRTUAL	 SMALLINT	,@IDPLAN	VARCHAR(10) ,@SYS_COMPUTERNAME VARCHAR(200)	
		,@DISPONIBILIDAD VARCHAR(20),@IDEMEDICA  VARCHAR(4) ,@MPLAN		SMALLINT	,@WEB			SMALLINT
		,@MODELOS		VARCHAR(256),@RCAMBIO	 BIT = 0	,@NOCITAS	INT			,@ESPROGRAMAS	INT
		,@FECHA_ACTUAL	DATETIME    ,@TIPO_ATEN VARCHAR(20)
BEGIN
		
	SET LANGUAGE Spanish;  
	SET DATEFORMAT dmy
	SET DATEFIRST 1; -- EZERPA 13.03.2023, El primer día de la semana es el lunes, si se quita esto desde node toma el domingo como el primer dia de semana en DATEPART(dw,  @_FECHA)

	SELECT *
	INTO #JSON
	FROM OPENJSON(@json) WITH (
		METODO VARCHAR(100) '$.METODO'
		,USUARIO VARCHAR(12) '$.USUARIO'
		,PARAMETROS NVARCHAR(MAX) AS JSON
	)

	SELECT @METODO = METODO
		,@PARAMETROS = PARAMETROS
		,@USUARIO = USUARIO
	FROM #JSON
	
	SELECT @SYS_COMPUTERNAME = SYS_ComputerName FROM USUSU WHERE USUARIO = @USUARIO
	SELECT @IDSEDE = IDSEDE, @COMPANIA = COALESCE(COMPANIA, '01')
	FROM UBEQ 
	WHERE SYS_ComputerName = @SYS_COMPUTERNAME

	IF @METODO = 'DESHACER_MAGP'
	BEGIN		
		EXEC SPK_GENCONSECUTIVO @COMPANIA, @IDSEDE, '@LOG',  @CNSLOG OUTPUT  
		SELECT @CNSLOG = @IDSEDE + REPLACE(SPACE(10 - LEN(@CNSLOG))+LTRIM(RTRIM(@CNSLOG)),SPACE(1),0)

		SELECT @CONSECUTIVO = CONSECUTIVO
		FROM OPENJSON(@PARAMETROS) WITH (CONSECUTIVO   VARCHAR(20) '$.CONSECUTIVO')
		BEGIN TRY

			BEGIN -- Registrar en USLOG
				INSERT INTO USLOG (CNSLOG ,COMPANIA ,NOADMISION ,PROCESO ,REQUEST ,REFERENCIA ,USUARIO ,FECHA ,SYS_ComputerName ,TABLA)
				SELECT	 CNSLOG=@CNSLOG		,COMPANIA=@COMPANIA		,NOADMISION=@IDMODELOAG		,PROCESO='BORRA PROGRAMACION' 
						,REQUEST='BORRAR'	,REFERENCIA = 'CNS PROGRAMACION = '+@CONSECUTIVO	,USUARIO = @USUARIO 
						,FECHA = DBO.FNK_GETDATE()		,SYS_ComputerName = @SYS_COMPUTERNAME	,TABLA='MAGP'

				INSERT INTO USLOGH (CNSLOG ,ITEM ,CAMPO ,VALORANT ,VALORNVO )   
				SELECT @CNSLOG,1,'GENERADA' , '', CAST(GENERADA AS VARCHAR)
				FROM MAGP WHERE CONSECUTIVO=@CONSECUTIVO UNION ALL
				SELECT @CNSLOG,2,'BORRADA' , '', CAST(BORRADA AS VARCHAR)
				FROM MAGP WHERE CONSECUTIVO=@CONSECUTIVO
			END

			BEGIN -- Eliminar las citas que no han sido asignadas a ningun paciente del profesional
				SELECT	 @FECHAINICIAL	=CAST(FECHAINICIAL AS DATE)	
						,@FECHAFINAL	=CAST(FECHAFINAL AS DATE)
						,@IDMEDICO = IDMEDICO		,@IDSEDE = IDSEDE
				FROM MAGP WHERE CONSECUTIVO=@CONSECUTIVO

				DELETE FROM CIT 
				WHERE CONSECUTIVOMAGP = @CONSECUTIVO
				AND IDAFILIADO IS NULL
				--WHERE CONSECUTIVO IN (
				--	SELECT CONSECUTIVO 
				--	FROM CIT
				--	WHERE	IDMEDICO= @IDMEDICO 
				--	AND		IDSEDE	= @IDSEDE
				--	AND		IDAFILIADO IS NULL 
				--	AND		CAST(FECHA AS DATE) >= @FECHAINICIAL 
				--	AND		CAST(FECHA AS DATE) <= @FECHAFINAL
				--)
			END

			-- Actualizar MAGP como borrada
			UPDATE	MAGP 
			SET		GENERADA=0	,BORRADA=1
			WHERE	CONSECUTIVO = @CONSECUTIVO

		END TRY
		BEGIN CATCH
			INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE()          
		END CATCH

		IF(SELECT COUNT(*) FROM @TBLERRORES) >0
		BEGIN
			SELECT 'KO' OK, '' CONSECUTIVO
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END

		SELECT 'OK' AS OK, @CONSECUTIVO AS CONSECUTIVO
		RETURN
	END

	IF @METODO = 'ELIMINAR_MAGP'
	BEGIN
		SELECT @CONSECUTIVO = CONSECUTIVO
		FROM OPENJSON(@PARAMETROS) WITH (CONSECUTIVO   VARCHAR(20) '$.CONSECUTIVO')
		BEGIN TRY			
			INSERT INTO @TBLERRORES(ERROR) SELECT 'NO SE TIENE PERMITIDO BORRAR PROGRAMACION DE AGENDAS'
			--DELETE FROM MAGP WHERE CONSECUTIVO = @CONSECUTIVO				
		END TRY
		BEGIN CATCH
			INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE()          
		END CATCH

		IF(SELECT COUNT(*) FROM @TBLERRORES) >0
		BEGIN
			SELECT 'KO' OK, '' CONSECUTIVO
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END
		SELECT 'OK' AS OK, @CONSECUTIVO AS CONSECUTIVO
		RETURN
	END

	IF @METODO = 'GUARDAR_MAGP'
	BEGIN
		BEGIN TRY
			SELECT @CONSECUTIVO = CONSECUTIVO, @TIPO = TIPO
			FROM OPENJSON(@PARAMETROS) WITH (
				CONSECUTIVO VARCHAR(20) '$.CONSECUTIVO'
				,TIPO		SMALLINT	'$.TIPO'
			)

			SELECT * INTO #MAGP
			FROM OPENJSON(@PARAMETROS) WITH (
					CONSECUTIVO	VARCHAR(20)	'$.CONSECUTIVO'
				,IDMEDICO		VARCHAR(20)	'$.IDMEDICO'
				,IDSEDE			VARCHAR(2)	'$.IDSEDE'
				,TIPO			SMALLINT	'$.TIPO'
				,USARMODELO		SMALLINT	'$.USARMODELO'
				,FESTIVOS		SMALLINT	'$.FESTIVOS'
				,FECHAINICIAL	DATE		'$.FECHAINICIAL'
				,FECHAFINAL		DATE		'$.FECHAFINAL'
				,HORAINICIAL_T	VARCHAR(5)	'$.HORAINICIAL_T'
				,HORAFINAL_T	VARCHAR(5)	'$.HORAFINAL_T'
				
				,GENERADA		SMALLINT	'$.GENERADA'
				,BORRADA		SMALLINT	'$.BORRADA'
				,INTERVALO		SMALLINT	'$.INTERVALO'
				,NOCITAS		SMALLINT	'$.NOCITAS'
				,VIRTUAL		SMALLINT	'$.VIRTUAL'
				,RCAMBIO		BIT			'$.RCAMBIO'
				,DISPONIBILIDAD	VARCHAR(20)	'$.DISPONIBILIDAD'
				,MPLAN			SMALLINT	'$.MPLAN'
				,MODELOS		VARCHAR(256)'$.MODELOS'
				,IDPLAN			VARCHAR(6)	'$.IDPLAN'
				,WEB			INT			'$.WEB'
				,ESPROGRAMAS	INT			'$.ESPROGRAMAS'
            ,TIPO_ATEN  VARCHAR(20)   '$.TIPO_ATEN'
			)


			DECLARE @F_VARCHAR AS VARCHAR(14)
			DECLARE @T_VARCHAR AS VARCHAR(5)
				
			BEGIN -- Fecha Inicial
				SELECT @F_VARCHAR = REPLACE(CONVERT(VARCHAR,FECHAINICIAL,102),'.','')
				FROM #MAGP
				IF @F_VARCHAR IS NOT NULL
				BEGIN
					SELECT @T_VARCHAR = HORAINICIAL_T FROM #MAGP
					IF COALESCE(@T_VARCHAR,'')<>''
					BEGIN
						SELECT @F_VARCHAR = CONCAT(@F_VARCHAR, ' ',@T_VARCHAR)
					END
					SELECT @FECHAINICIAL = @F_VARCHAR
				END
			END
			BEGIN -- Fecha Final
				SELECT @F_VARCHAR = REPLACE(CONVERT(VARCHAR,FECHAFINAL,102),'.','')
				FROM #MAGP
				IF @F_VARCHAR IS NOT NULL
				BEGIN
					SELECT @T_VARCHAR = HORAFINAL_T FROM #MAGP
					IF COALESCE(@T_VARCHAR,'')<>''
					BEGIN
						SELECT @F_VARCHAR = CONCAT(@F_VARCHAR, ' ',@T_VARCHAR)
					END
					SELECT @FECHAFINAL = @F_VARCHAR
				END
			END

			IF @TIPO='2' 
			BEGIN
				UPDATE #MAGP 
				SET	 HORAFINAL_T = NULL,FECHAFINAL = NULL
			WHERE 1=1
					--, INTERVALO = 6
			END

			-- Validar que no supere un ano desde la fecha inicial a la fecha final
			IF DATEDIFF(DAY,@FECHAINICIAL,@FECHAFINAL) > 365
			BEGIN
				INSERT INTO @TBLERRORES(ERROR) SELECT 'No se permite generar una PROGRAMACION de agenda MAYOR A 365 DIAS'          
			END

			INSERT INTO @TBLERRORES(ERROR)
			SELECT 'La agenda que intenta procesar es de tipo "MODELO" pero no esta incluyendo modelos de programas especiales' AS ERROR FROM #MAGP
			WHERE COALESCE(USARMODELO, 0)=0 
			AND COALESCE(DISPONIBILIDAD, '')='Mode'
			AND COALESCE(MODELOS, '') = ''

			IF NOT EXISTS(SELECT 1 FROM @TBLERRORES)
			BEGIN
				IF COALESCE(@CONSECUTIVO,'') = ''
				BEGIN
					EXEC SPK_GENCONSECUTIVO @COMPANIA, @IDSEDE, '@MAGP',  @CONSECUTIVO OUTPUT  
					SELECT @CONSECUTIVO = @IDSEDE + REPLACE(SPACE(8 - LEN(@CONSECUTIVO))+LTRIM(RTRIM(@CONSECUTIVO)),SPACE(1),0)

					INSERT INTO MAGP (CONSECUTIVO ,IDMEDICO ,FECHAINICIAL ,FECHAFINAL ,USARMODELO ,INTERVALO ,DISPONIBILIDAD ,MPLAN 
						,IDPLAN ,FESTIVOS ,GENERADA ,BORRADA ,TIPO ,NOCITAS ,USUARIO ,SYS_COMPUTERNAME 
						,FECHA ,MODELOS ,IDSEDE ,RCAMBIO ,VIRTUAL, WEB, ESPROGRAMAS,TIPO_ATEN)   
					SELECT @CONSECUTIVO ,IDMEDICO ,@FECHAINICIAL ,@FECHAFINAL ,USARMODELO ,INTERVALO ,DISPONIBILIDAD ,MPLAN 
						,IDPLAN ,FESTIVOS ,GENERADA=0,BORRADA=0,TIPO ,NOCITAS ,USUARIO=@USUARIO,SYS_COMPUTERNAME = @SYS_COMPUTERNAME
						,FECHA=DBO.FNK_GETDATE(),MODELOS ,IDSEDE ,RCAMBIO ,VIRTUAL, WEB, ESPROGRAMAS,TIPO_ATEN
					FROM #MAGP
				END
				ELSE
				BEGIN

					DELETE FROM MAGPD WHERE CONSECUTIVO = @CONSECUTIVO

					UPDATE MAGP
					SET	 FECHAINICIAL	= @FECHAINICIAL
						,FECHAFINAL		= @FECHAFINAL
						,IDMEDICO		= T.IDMEDICO
						,USARMODELO		= T.USARMODELO
						,INTERVALO		= T.INTERVALO
						,DISPONIBILIDAD	= T.DISPONIBILIDAD
						,MPLAN			= T.MPLAN
						,IDPLAN			= T.IDPLAN
						,FESTIVOS		= T.FESTIVOS
						,GENERADA		= T.GENERADA
						,BORRADA		= T.BORRADA
						,TIPO			= T.TIPO
						,NOCITAS		= T.NOCITAS
						,MODELOS		= T.MODELOS
						--,IDSEDE		= T.IDSEDE
						,RCAMBIO		= T.RCAMBIO
						,VIRTUAL		= T.VIRTUAL
						,WEB			= T.WEB
						,ESPROGRAMAS	= T.ESPROGRAMAS
                  ,TIPO_ATEN =T.TIPO_ATEN
					FROM #MAGP AS T INNER JOIN MAGP ON 
						MAGP.CONSECUTIVO=T.CONSECUTIVO
				END

				IF @TIPO = '2' -- Por cantidad de citas
				BEGIN
					SELECT @SYS_COMPUTERNAME = SYS_ComputerName FROM USUSU WHERE USUARIO = @USUARIO
					SELECT @IDSEDE = IDSEDE FROM UBEQ WHERE SYS_ComputerName = @SYS_COMPUTERNAME
					SELECT @COMPANIA = COMPANIA FROM UBEQ WHERE SYS_ComputerName = @SYS_COMPUTERNAME

					SELECT 
						@FECHAINICIAL	= REPLACE(CONVERT(VARCHAR,FECHAINICIAL,102),'.','')+' '+CONVERT(VARCHAR,HORAINICIAL_T,108)
						,@INTERVALO		= INTERVALO
						,@NOCITAS		= NOCITAS
					FROM #MAGP

					SELECT @FECHA_ACTUAL = @FECHAINICIAL
					
					DECLARE @ITEM INT = @NOCITAS
					WHILE @NOCITAS>0
					BEGIN

						INSERT INTO MAGPD(CONSECUTIVO,ITEM,FECHAINI,GENERADA)
						SELECT @CONSECUTIVO,@ITEM-@NOCITAS+1,@FECHA_ACTUAL,0

						SELECT @FECHA_ACTUAL = DATEADD(MINUTE,@INTERVALO,@FECHA_ACTUAL)

						SET @NOCITAS -= 1
					END
				END
			END

		END TRY
		BEGIN CATCH
			INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE()          
		END CATCH

		IF(SELECT COUNT(*) FROM @TBLERRORES) >0
		BEGIN
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END

		SELECT 'OK' OK, @CONSECUTIVO CONSECUTIVO
		RETURN
	END

	IF @METODO = 'GENERAR_MAGP'
	BEGIN
		DECLARE @TOTAL_DIAS INT = 1
		DECLARE @DIA INT = 0
		DECLARE @IDSEDE_PARAMETRO VARCHAR(2)
		DECLARE @SINFECHA INT
		DECLARE @_FECHA AS DATE
		DECLARE @TABLE TABLE ( FECHA DATE, CANTIDAD INT )
		DECLARE @FECHAS TABLE (ITEM INT IDENTITY(1,1), FECHA DATE)
		DECLARE @_FECHAINICIAL DATETIME, @_FECHAFINAL DATETIME
		DECLARE @CANT_WHILE INT=0

		BEGIN TRY
			SELECT @CONSECUTIVO = CONSECUTIVO
				,@IDMODELOAG	= IDMODELOAG
				,@IDEMEDICA		= IDEMEDICA
				--,@IDSEDE_PARAMETRO=IDSEDE
			FROM OPENJSON(@PARAMETROS) WITH (
					CONSECUTIVO VARCHAR(20) '$.CONSECUTIVO',
					IDMODELOAG	 VARCHAR(20) '$.IDMODELOAG',
					IDEMEDICA	 VARCHAR(4) '$.IDEMEDICA'
					--IDSEDE		 VARCHAR(2)	 '$.IDSEDE'
			)

			INSERT INTO @TBLERRORES
			SELECT 'El consecutivo del modelo de agenda es obligatorio' WHERE COALESCE(@CONSECUTIVO,'')=''
			UNION ALL SELECT 'El código del modelo de agenda es obligatorio' WHERE COALESCE(@IDMODELOAG,'')=''
			UNION ALL SELECT 'El código de la especialidad médica es obligatorio' WHERE COALESCE(@IDEMEDICA,'')=''
			IF NOT EXISTS(SELECT 1 FROM @TBLERRORES)
			BEGIN -- Generación de citas
				IF EXISTS(SELECT 1 FROM MAGP WHERE CONSECUTIVO=@CONSECUTIVO AND COALESCE(GENERADA,0)=1)
				BEGIN
					SELECT 'OK' OK, @CONSECUTIVO CONSECUTIVO
					RETURN
				END				
				SELECT	@TIPO			= TIPO		
						,@FESTIVOS		= COALESCE(FESTIVOS,0)
						,@USARMODELO	= COALESCE(MAGP.USARMODELO,0)
						,@FECHAFINAL	= FECHAFINAL
						,@FECHAINICIAL	= FECHAINICIAL
						,@INTERVALO		= COALESCE(INTERVALO,1)
						,@IDSEDE_PARAMETRO=IDSEDE
						,@IDMEDICO		= IDMEDICO
						,@RCAMBIO		= RCAMBIO
						,@TIPOCITA      = DISPONIBILIDAD
						,@VIRTUAL       = COALESCE(VIRTUAL,0)
						,@ESPROGRAMAS   = COALESCE(ESPROGRAMAS,0)
						,@WEB			= IIF(COALESCE(WEB, 0)>0,1,0)
                  ,@TIPO_ATEN = @TIPO_ATEN
				FROM	MAGP
				WHERE	CONSECUTIVO		= @CONSECUTIVO

				SELECT @TOTAL_DIAS = DATEDIFF(DAY,@FECHAINICIAL,@FECHAFINAL)

				IF @TOTAL_DIAS > 365
				BEGIN
					SELECT 'KO' OK
					SELECT ERROR = 'La fecha final no puede superar 365 días de la fecha inicial.'
					RETURN
				END

				IF @TIPO = '1' -- Por Agenda
				BEGIN
					PRINT '*************** Por Agenda ***************'
					IF @FECHAFINAL<@FECHAINICIAL
					BEGIN
						SELECT 'KO' OK
						SELECT ERROR = 'La fecha final no puede ser menor a la fecha inicial, por favor valide'
						RETURN
					END
					IF COALESCE(@USARMODELO,0)=0 AND COALESCE(@INTERVALO,0)<=0
					BEGIN
						SELECT 'KO' OK
						SELECT ERROR = 'El intervalo de minutos no puede ser menor o igual a 0 (cero)'
						RETURN						
					END

					INSERT INTO @TABLE 
					SELECT @FECHAINICIAL, IIF(@TOTAL_DIAS <= 0, 1, @TOTAL_DIAS)

					IF @TOTAL_DIAS = 1
					BEGIN
						IF CAST(@FECHAINICIAL AS DATE) <> CAST(@FECHAFINAL AS DATE)
							SELECT @TOTAL_DIAS = 2
					END
                    
					IF IIF(@TOTAL_DIAS <= 0, 1, @TOTAL_DIAS) > 1
					BEGIN
						;WITH FECHAS as (
							SELECT 1 AS NUM,  FECHA, CANTIDAD 
							FROM @TABLE
							UNION ALL 
							SELECT NUM+1,  DATEADD( D, 1, F.FECHA), CANTIDAD 
							FROM FECHAS F
							WHERE F.NUM <= CANTIDAD
						)                
						INSERT INTO @FECHAS(FECHA)
						SELECT FECHA
						FROM FECHAS
						ORDER BY FECHA
						OPTION (MAXRECURSION 1000)
					END
					ELSE
					BEGIN
						INSERT INTO @FECHAS(FECHA)
						SELECT FECHA
						FROM @TABLE
					END

					SELECT @SINFECHA = COUNT(FECHA)
					FROM @FECHAS
					WHERE FECHA NOT IN 
					(
						SELECT CAST(FECHA AS DATE) FROM FES
						WHERE @FESTIVOS = 0
					)

					IF COALESCE(@SINFECHA,0) <= 0
					BEGIN 
						PRINT 'NO HAY FECHA PARA GENERAR AGENDA'
					END

					DECLARE _CURSOR CURSOR FOR
					SELECT FECHA
					FROM @FECHAS
					WHERE FECHA NOT IN  ( SELECT CAST(FECHA AS DATE) FROM FES WHERE @FESTIVOS = 0)
					ORDER BY FECHA

					OPEN _CURSOR  
					FETCH NEXT FROM _CURSOR INTO @_FECHA  
					/*primer cursor*/
					WHILE @@FETCH_STATUS = 0  
					BEGIN
						SELECT @DIA = DATEPART(dw,  @_FECHA)
						IF @USARMODELO = 1 -- Se usa modelo de agenda
						BEGIN
							DECLARE MAGD_CURSOR CURSOR FOR   
							SELECT	 FECHAINICIAL	= REPLACE(CONVERT(VARCHAR,@_FECHA,102),'.','')+' '+CONVERT(VARCHAR,HORAINICIAL,108)
									,FECHAFINAL		= REPLACE(CONVERT(VARCHAR,@_FECHA,102),'.','')+' '+CONVERT(VARCHAR,HORAFINAL,108)
									,INTERVALO
									,VIRTUAL		= COALESCE(VIRTUAL,0) 
									,IDPLAN
									,TIPOCITA		= LTRIM(RTRIM(DISPONIBILIDAD))
									,DISPONIBILIDAD
									,MPLAN			= COALESCE(MPLAN,0)
									,WEB			= COALESCE(WEB,0)
									,@ESPROGRAMAS
									,MODELOS		= CASE WHEN MMODELO = 1  OR DISPONIBILIDAD='Mode' THEN COALESCE(MODELOS,'') ELSE '' END
									,RCAMBIO		= CASE WHEN DISPONIBILIDAD='Prio' AND COALESCE(@RCAMBIO,0) = 1 THEN 1 ELSE 0 END
							FROM	MAGD
							WHERE	IDMODELOAG = @IDMODELOAG
									AND DIA = @DIA
									AND	INTERVALO>0

							OPEN MAGD_CURSOR  
							FETCH NEXT FROM MAGD_CURSOR INTO @FECHAINICIAL, @FECHAFINAL,@INTERVALO,@VIRTUAL,@IDPLAN,@TIPOCITA,@DISPONIBILIDAD,@MPLAN,@WEB, @ESPROGRAMAS,@MODELOS,@RCAMBIO
							/*segundo cursor*/
							WHILE @@FETCH_STATUS = 0  
							BEGIN								
								PRINT '
									MAGD
									Modelo de agenda: '+@IDMODELOAG+'
									Dia: '+CONVERT(VARCHAR,@_FECHA,103)+' ('+CAST(@DIA AS VARCHAR)+')
									Rango de horas: '+CONVERT(VARCHAR,@FECHAINICIAL,108)+' - '+CONVERT(VARCHAR,@FECHAFINAL,108)+'
									Rango de Fechas: '+CONVERT(VARCHAR,@FECHAINICIAL,103)+' - '+CONVERT(VARCHAR,@FECHAFINAL,103)+'
									Intervalo: '+CAST(@INTERVALO AS VARCHAR)+'
									IDMEDICO: '+CAST(@IDMEDICO AS VARCHAR)+'
									Id. Sede: '+COALESCE(@IDSEDE_PARAMETRO, '')+'
								'
								-- Manejo de restricciones
								IF EXISTS(SELECT 1 FROM MAGPR 
												WHERE MAGPR.FECHAINICIAL<=@FECHAINICIAL AND MAGPR.FECHAFINAL>=@FECHAFINAL
													AND MAGPR.CONSECUTIVO = @CONSECUTIVO)
								BEGIN
									PRINT '******** Fecha y hora restringida desde MAGPR ********'
								END
								ELSE
								BEGIN
									SELECT @FECHA_ACTUAL = @FECHAINICIAL
									/*while de dias*/
									WHILE @FECHA_ACTUAL < @FECHAFINAL
									BEGIN									
										SELECT @CONSECUTIVOCIT = NULL
										SELECT @CANT_WHILE = 0
										/*while de consecutivos*/
										WHILE (@CONSECUTIVOCIT IS NULL OR EXISTS(SELECT 1 FROM CIT WHERE CONSECUTIVO=@CONSECUTIVOCIT)) AND @CANT_WHILE<100
										BEGIN
											SET @CANT_WHILE +=1
											EXEC SPK_GENCONSECUTIVO @COMPANIA, @IDSEDE_PARAMETRO, '@CIT',  @CONSECUTIVOCIT OUTPUT  
											SELECT @CONSECUTIVOCIT = @IDSEDE_PARAMETRO + REPLACE(SPACE(10 - LEN(@CONSECUTIVOCIT))+LTRIM(RTRIM(@CONSECUTIVOCIT)),SPACE(1),0)
										END
										PRINT '@CONSECUTIVOCIT = ' + COALESCE(@CONSECUTIVOCIT, '')
										INSERT INTO @CIT(CONSECUTIVO,FECHA,VIRTUAL,TIPOCITA,IDPLAN,DISPONIBILIDAD,MPLAN,WEB, ESPROGRAMAS,MODELOS, RCAMBIO,TIPO_ATEN)
										SELECT @CONSECUTIVOCIT,@FECHA_ACTUAL, @VIRTUAL, @TIPOCITA, @IDPLAN, @DISPONIBILIDAD, @MPLAN, @WEB, @ESPROGRAMAS, @MODELOS ,@RCAMBIO,@TIPO_ATEN
										WHERE NOT EXISTS (SELECT  1 FROM @CIT WHERE FECHA=@FECHA_ACTUAL) AND @CONSECUTIVOCIT IS NOT NULL

										SELECT @FECHA_ACTUAL = DATEADD(MINUTE,@INTERVALO,@FECHA_ACTUAL)
									END
								END
								FETCH NEXT FROM MAGD_CURSOR INTO @FECHAINICIAL, @FECHAFINAL,@INTERVALO,@VIRTUAL,@IDPLAN,@TIPOCITA, @DISPONIBILIDAD,@MPLAN,@WEB,@ESPROGRAMAS,@MODELOS,@RCAMBIO
							END  
  
							CLOSE MAGD_CURSOR  
							DEALLOCATE MAGD_CURSOR 
							
						END
						ELSE -- Si no usa modelo de agenda
						BEGIN
							PRINT '*** MODELO DE AGENDA MANUAL ***'							
							SELECT   @_FECHAINICIAL = REPLACE(CONVERT(VARCHAR,@_FECHA,102),'.','')+' '+CONVERT(VARCHAR,@FECHAINICIAL,108)
									,@_FECHAFINAL	= REPLACE(CONVERT(VARCHAR,@_FECHA,102),'.','')+' '+CONVERT(VARCHAR,@FECHAFINAL,108) 


							PRINT 'Modelo de agenda: '+@IDMODELOAG
							PRINT 'Dia: '+CONVERT(VARCHAR,@_FECHA,103)+' ('+CAST(@DIA AS VARCHAR)+')'
							PRINT 'Rango de horas: '+CONVERT(VARCHAR,@_FECHAINICIAL,108)+' - '+CONVERT(VARCHAR,@_FECHAFINAL,108)
							PRINT 'Rango de Fechas: '+CONVERT(VARCHAR,@_FECHAINICIAL,103)+' - '+CONVERT(VARCHAR,@_FECHAFINAL,103)
							PRINT 'Intervalo: '+CAST(@INTERVALO AS VARCHAR)
							PRINT 'Tipo Cita: '+COALESCE(@TIPOCITA,'')

							-- Manejo de restricciones
							IF EXISTS(SELECT 1 FROM MAGPR 
												WHERE MAGPR.FECHAINICIAL<=@FECHAINICIAL AND MAGPR.FECHAFINAL>=@FECHAFINAL
													AND MAGPR.CONSECUTIVO = @CONSECUTIVO)
							BEGIN
								PRINT 'Fecha y hora restringida desde MAGPR'
							END
							ELSE
							BEGIN
								SELECT @FECHA_ACTUAL = @_FECHAINICIAL
								WHILE @FECHA_ACTUAL < @_FECHAFINAL
								BEGIN	
									SELECT @CONSECUTIVOCIT = NULL
									SELECT @CANT_WHILE = 0
									/*while de consecutivos*/
									WHILE (@CONSECUTIVOCIT IS NULL OR EXISTS(SELECT 1 FROM CIT WHERE CONSECUTIVO=@CONSECUTIVOCIT)) AND @CANT_WHILE<100
									BEGIN
										SET @CANT_WHILE +=1
										EXEC SPK_GENCONSECUTIVO @COMPANIA, @IDSEDE_PARAMETRO, '@CIT',  @CONSECUTIVOCIT OUTPUT  
										SELECT @CONSECUTIVOCIT = @IDSEDE_PARAMETRO + REPLACE(SPACE(10 - LEN(@CONSECUTIVOCIT))+LTRIM(RTRIM(@CONSECUTIVOCIT)),SPACE(1),0)
									END                      
									INSERT INTO @CIT(CONSECUTIVO,FECHA,VIRTUAL,TIPOCITA,IDPLAN,DISPONIBILIDAD,MPLAN,WEB, ESPROGRAMAS,MODELOS, RCAMBIO,TIPO_ATEN)
									SELECT @CONSECUTIVOCIT,@FECHA_ACTUAL, @VIRTUAL, @TIPOCITA, @IDPLAN, @DISPONIBILIDAD, @MPLAN, @WEB, @ESPROGRAMAS, /*@MODELOS*/ (SELECT MODELOS FROM MAGP WHERE CONSECUTIVO = @CONSECUTIVO)
										,@RCAMBIO,@TIPO_ATEN
									WHERE NOT EXISTS (SELECT  1 FROM @CIT WHERE FECHA=@FECHA_ACTUAL) AND @CONSECUTIVOCIT IS NOT NULL
									SELECT @FECHA_ACTUAL = DATEADD(MINUTE,@INTERVALO,@FECHA_ACTUAL)
								END
							END
						END						
						UPDATE MAGP SET GENERADA = 1, BORRADA = 0 WHERE CONSECUTIVO = @CONSECUTIVO
						FETCH NEXT FROM _CURSOR INTO @_FECHA  
					END
  
					CLOSE _CURSOR  
					DEALLOCATE _CURSOR
				END
				ELSE
				BEGIN -- Por Cantidad de Citas
					PRINT '*************** Por Cantidad de Citas ***************'

					SELECT @IDSEDE_PARAMETRO = IDSEDE 
						,@VIRTUAL = VIRTUAL
						,@IDPLAN = IDPLAN
						,@DISPONIBILIDAD = DISPONIBILIDAD
						,@MPLAN = MPLAN
						,@WEB = COALESCE(WEB, 0)
						,@ESPROGRAMAS = COALESCE(ESPROGRAMAS,0)
						,@MODELOS = MODELOS
						,@RCAMBIO = RCAMBIO
					FROM MAGP 
					WHERE CONSECUTIVO=@CONSECUTIVO

					DECLARE MAGPD_CURSOR CURSOR FOR   
						SELECT FECHAINI
						FROM MAGPD 
						WHERE CONSECUTIVO=@CONSECUTIVO
						ORDER BY ITEM
  
					OPEN MAGPD_CURSOR  
					FETCH NEXT FROM MAGPD_CURSOR INTO @FECHA_ACTUAL  
  
					WHILE @@FETCH_STATUS = 0  
					BEGIN  

						SELECT @CONSECUTIVOCIT = NULL
						WHILE @CONSECUTIVOCIT IS NULL OR EXISTS(SELECT 1 FROM CIT WHERE CONSECUTIVO=@CONSECUTIVOCIT)
						BEGIN
							EXEC SPK_GENCONSECUTIVO @COMPANIA, @IDSEDE_PARAMETRO, '@CIT',  @CONSECUTIVOCIT OUTPUT  
							SELECT @CONSECUTIVOCIT = @IDSEDE_PARAMETRO + REPLACE(SPACE(10 - LEN(@CONSECUTIVOCIT))+LTRIM(RTRIM(@CONSECUTIVOCIT)),SPACE(1),0)
						END


						INSERT INTO @CIT(CONSECUTIVO,FECHA,VIRTUAL,TIPOCITA,IDPLAN,DISPONIBILIDAD,MPLAN,WEB,ESPROGRAMAS,MODELOS, RCAMBIO,TIPO_ATEN)
						SELECT @CONSECUTIVOCIT,@FECHA_ACTUAL, @VIRTUAL, TIPOCITA = 'Cita', @IDPLAN, @DISPONIBILIDAD
						, @MPLAN, @WEB,@ESPROGRAMAS, @MODELOS,@RCAMBIO,@TIPO_ATEN
							WHERE NOT EXISTS (SELECT  1 FROM @CIT WHERE FECHA=@FECHA_ACTUAL)

						SELECT @FECHA_ACTUAL = DATEADD(MINUTE,@INTERVALO,@FECHA_ACTUAL)
  
						FETCH NEXT FROM MAGPD_CURSOR INTO @FECHA_ACTUAL  
						END  
  
					CLOSE MAGPD_CURSOR  
					DEALLOCATE MAGPD_CURSOR  

					UPDATE MAGP SET GENERADA = 1, BORRADA = 0
					WHERE CONSECUTIVO = @CONSECUTIVO

				END
				
			END
			INSERT INTO CIT(FECHA,CONSECUTIVO,MODALIDAD,CLASECONTRATO,TIPOCITA,CLASEORDEN,TIPOSOLICITUD,ATENCION
				,IDSEDE,IDMEDICO,IDPLAN,TIPODTO,TIPOCOPAGO,DISPONIBILIDAD,FACTURADA,VFACTURAS,FACTURABLE,IDEMEDICA
				,AQUIENCOBRO,MPLAN,IDPLANDISP,WEB,ESPROGRAMAS,MODELOS,CANTIDADC,QXCONSECUTIVO,RCAMBIO,CONSECUTIVOMAGP
						
				,PVEZ,URGENCIA,VALORTOTAL,VALOREXEDENTE,VALORTOTALCOS,VALORCOPAGOCOSTO
				,IMPRESO,CUMPLIDA,GENEROCAJA,SPD,GENPRESTACION,MARCAFAC,ENPAQUETE,SOAT,COPAGOPROPIO
				,VALORPROV,REASIGNADA,NOCOBRAR,CCONTRATANTE,CONTABILIZADA,MARCACONT,PVEZANO,DURACION
				,MVARIAS,NROCITAS,PREGUNTAPOR,IDAUTSE,COVID
			)
			SELECT 
				FECHA
				,CONSECUTIVO
				,MODALIDAD			= IIF(VIRTUAL=0,'Presencial','Virtual')
				,CLASECONTRATO		= 'C'
				,TIPOCITA
				,CLASEORDEN			= 'Normal'
				,TIPOSOLICITUD		= 'Personal'
				,ATENCION			= COALESCE(TIPO_ATEN,'Ambulatoria')
				,IDSEDE				= @IDSEDE_PARAMETRO
				,IDMEDICO			= @IDMEDICO
				,IDPLAN
				,TIPODT				= 'P'
				,TIPOCOPAGO			= 'N'
				,DISPONIBILIDAD		
				,FACTURADA			= 0
				,VFACTURAS			= 0
				,FACTURABLE			= 1
				,IDEMEDICA			= @IDEMEDICA
				,AQUIENCOBRO		= 'N'
				,MPLAN		
				,IDPLANDISP			= IDPLAN
				,WEB				= @WEB  --tipo 1 tome el check Permitir a Pacientes Agendar vía Web
				,ESPROGRAMAS		= @ESPROGRAMAS 
				,MODELOS			= MODELOS	
				,CANTIDADC			= 1
				,QXCONSECUTIVO		= 0
				,RCAMBIO
				,CONSECUTIVOMAGP	= @CONSECUTIVO
				,PVEZ				= 0
				,URGENCIA			= 0
				,VALORTOTAL			= 0
				,VALOREXEDENTE		= 0
				,VALORTOTALCOS		= 0
				,VALORCOPAGOCOSTO	= 0
				,IMPRESO			= 0
				,CUMPLIDA			= 0
				,GENEROCAJA			= 0
				,SPD				= 0
				,GENPRESTACION		= 0
				,MARCAFAC			= 0
				,ENPAQUETE			= 0
				,SOAT				= 0
				,COPAGOPROPIO		= 0
				,VALORPROV			= 0
				,REASIGNADA			= 0
				,NOCOBRAR			= 0
				,CCONTRATANTE		= 0
				,CONTABILIZADA		= 0
				,MARCACONT			= 0
				,PVEZANO			= 0
				,DURACION			= @INTERVALO
				,MVARIAS			= 0
				,NROCITAS			= 0
				,PREGUNTAPOR		= 0
				,IDAUTSE			= 0
				,COVID				= 0
			FROM @CIT AS _CIT
			WHERE NOT EXISTS( SELECT 1 FROM CIT WHERE IDMEDICO = @IDMEDICO AND FECHA = _CIT.FECHA AND _CIT.FECHA IS NOT NULL )
			ORDER BY FECHA
				
			BEGIN -- USLOG
				SELECT @COMPANIA = COALESCE(@COMPANIA, '01')
				EXEC SPK_GENCONSECUTIVO @COMPANIA, @IDSEDE, '@LOG',  @CNSLOG OUTPUT  
				SELECT @CNSLOG = @IDSEDE + REPLACE(SPACE(10 - LEN(@CNSLOG))+LTRIM(RTRIM(@CNSLOG)),SPACE(1),0)

				INSERT INTO USLOG (CNSLOG ,COMPANIA ,NOADMISION ,PROCESO ,REQUEST ,REFERENCIA ,USUARIO ,FECHA ,SYS_ComputerName ,TABLA)
				SELECT	 CNSLOG=@CNSLOG		,COMPANIA=@COMPANIA		,NOADMISION=@CONSECUTIVO	,PROCESO='GENERA PROGRAMACION' 
						,REQUEST='GENERA'	,REFERENCIA = 'CNS PROGRAMACION = '+@CONSECUTIVO	,USUARIO = @USUARIO 
						,FECHA = DBO.FNK_GETDATE()		,SYS_ComputerName = @SYS_COMPUTERNAME	,TABLA='MAGP'

				INSERT INTO USLOGH (CNSLOG ,ITEM ,CAMPO ,VALORANT ,VALORNVO )   
				SELECT @CNSLOG,1,'GENERADA' , '', 1
			END
			
		END TRY
		BEGIN CATCH
			INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE()          
		END CATCH

		IF(SELECT COUNT(*) FROM @TBLERRORES) >0
		BEGIN
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END

		SELECT 'OK' OK, @CONSECUTIVO CONSECUTIVO
		RETURN
	END

	IF @METODO = 'CLONAR_MAGP'
	BEGIN
		DECLARE @CONSECUTIVOCLONAR VARCHAR(20)
		SELECT @CONSECUTIVOCLONAR = JSON_VALUE(@PARAMETROS, '$.CONSECUTIVO')
		BEGIN TRY			
			EXEC SPK_GENCONSECUTIVO @COMPANIA, @IDSEDE, '@MAGP',  @CONSECUTIVO OUTPUT  
			SELECT @CONSECUTIVO = @IDSEDE + REPLACE(SPACE(8 - LEN(@CONSECUTIVO))+LTRIM(RTRIM(@CONSECUTIVO)),SPACE(1),0)

			INSERT INTO MAGP (CONSECUTIVO ,IDMEDICO ,FECHAINICIAL ,FECHAFINAL ,USARMODELO ,INTERVALO ,DISPONIBILIDAD ,MPLAN 
				,IDPLAN ,FESTIVOS ,GENERADA ,BORRADA ,TIPO ,NOCITAS ,USUARIO ,SYS_COMPUTERNAME 
				,FECHA ,MODELOS ,IDSEDE ,RCAMBIO ,VIRTUAL, WEB )
			SELECT @CONSECUTIVO ,IDMEDICO ,FECHAINICIAL ,FECHAFINAL ,USARMODELO ,INTERVALO ,DISPONIBILIDAD ,MPLAN 
				,IDPLAN ,FESTIVOS ,GENERADA=0,BORRADA=0 ,TIPO ,NOCITAS ,@USUARIO ,@SYS_COMPUTERNAME 
				,FECHA ,MODELOS ,IDSEDE ,RCAMBIO ,VIRTUAL, WEB
			FROM MAGP
			WHERE CONSECUTIVO = @CONSECUTIVOCLONAR

		END TRY
		BEGIN CATCH
			INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE()          
		END CATCH

		IF(SELECT COUNT(*) FROM @TBLERRORES) >0
		BEGIN
			SELECT 'KO' OK, '' CONSECUTIVO
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END

		SELECT 'OK' AS OK, @CONSECUTIVO AS CONSECUTIVO
		RETURN
	END
END




