CREATE OR ALTER PROCEDURE DBO.SPQ_CIT_COL_3
@JSON  NVARCHAR(MAX)
WITH
ENCRYPTION
AS
DECLARE	 @PARAMETROS	NVARCHAR(MAX)	,@METODO    VARCHAR(100)		,@USUARIO   VARCHAR(20)
		,@GRUPO			VARCHAR(8)		,@SYS_COMPUTERNAME VARCHAR(254) ,@SEDE      VARCHAR(5)		
		,@IDAFILIADO	VARCHAR(20)		,@CODIGO	VARCHAR(20)			,@MODELO VARCHAR(100)

		,@EMAIL			VARCHAR(100)	,@ESTADO	VARCHAR(20)			,@IDPLAN	VARCHAR(20)
		,@IDAREA		VARCHAR(20)		,@IDTERCERO VARCHAR(20)
		,@CONSECUTIVO	VARCHAR(20)		,@IDSERVICIO VARCHAR(20)		,@IDSEDE	VARCHAR(20)
		,@IDCAUSAL		VARCHAR(5)		,@CELULAR	VARCHAR(50)			,@MENSAJE	VARCHAR(MAX)
		,@CNSNOCIT		VARCHAR(20)		,@CONSECUTIVOS NVARCHAR(MAX)	,@IDMEDICO_1 VARCHAR(20)	
		,@IDMEDICO_2	VARCHAR(20)		,@FECHA        VARCHAR(10)		,@NOAUTORIZACION VARCHAR(30)
		,@PROCEDENCIA	VARCHAR(20)		,@CONTINUA		INT            ,@SEXO  VARCHAR(20)	
		,@USAHORA		BIT				,@HORA		VARCHAR(5)		,@FECHAI    VARCHAR(10)
DECLARE @FAUX DATETIME	, @INTERVALO INT
DECLARE @IDMEDICOAUX VARCHAR(20)	, @FECHA_CITA DATETIME
DECLARE @CONT INT, @PARTICULAR BIT, @FECHAINCIO   DATETIME, @FECHAFINAL   DATETIME
	, @NORECIBOCAJA VARCHAR(20) 
	, @TIPOCAJA     VARCHAR(10)
	, @CUMPLIDA     SMALLINT 
	, @PARTICULAR_TIME   DECIMAL(14,2)
DECLARE @TBLERRORES TABLE(ERROR VARCHAR(MAX));
DECLARE @UNIDAD_ATENCION VARCHAR(6), @PERIODO SMALLINT, @ANOMES VARCHAR(6)
DECLARE @AUTORIZACIONES NVARCHAR(MAX)
DECLARE @LEFT VARCHAR(2048), @INNER VARCHAR(2048), @COLUMNAS VARCHAR(4096), @WHERE VARCHAR(1024), @CMD NVARCHAR(MAX), @TABLA VARCHAR(20)


DECLARE @DURACION_AUX INT = 0
DECLARE @CONSECUTIVO_AUX VARCHAR(20)
DECLARE @IDAFILIADO_AUX VARCHAR(20)
DECLARE @FINI DATETIME
DECLARE @FFIN DATETIME
			DECLARE @HDESDE TIME, @HHASTA TIME


				DECLARE @FDESDE DATETIME 
				DECLARE @FHASTA DATETIME 
				DECLARE @DURACION_TOTAL_CITA INT
                
			DECLARE @ITEMS INT
			DECLARE @LIMITE INT
			DECLARE @CONSECUTIVO_1 VARCHAR(20)	,@CONSECUTIVO_2 VARCHAR(20)
        DECLARE @FECHAAUTORIZACION DATETIME, @FVENCEAUTORIZACION DATETIME
            DECLARE @ANT_NOAUT VARCHAR(45), @ANT_FVENCEAUT DATETIME, @ANT_FAUT DATETIME

			-- Extraer filtros del JSON
			DECLARE 
			@FECHA_STR NVARCHAR(30), 
			@TIPOCITA VARCHAR(30),
			@ESPECIALIDAD VARCHAR(45),
			@IDROL VARCHAR(12)
        DECLARE @TABLA_ERROR TABLE (ERROR VARCHAR(200), DOCIDAFILIADO VARCHAR(20), NOMBREAFI VARCHAR(100), NOAUTORIZACION VARCHAR(45))


BEGIN
	SET DATEFORMAT dmy
	SET LANGUAGE Spanish; 
	SELECT *
	INTO #JSON
	FROM OPENJSON (@json)
	WITH (
		MODELO         VARCHAR(100)     '$.MODELO',
		METODO         VARCHAR(100)     '$.METODO',
		USUARIO        VARCHAR(20)      '$.USUARIO',
		PARAMETROS     NVARCHAR(MAX)  AS JSON
	)

	SELECT @METODO = METODO , @PARAMETROS = PARAMETROS, @USUARIO = USUARIO
	FROM #JSON
	SELECT @GRUPO = DBO.FNK_DESCIFRAR(GRUPO) FROM USUSU WHERE USUARIO = @USUARIO
	SELECT @SYS_COMPUTERNAME = SYS_COMPUTERNAME FROM USUSU WHERE USUARIO = @USUARIO
	
	IF COALESCE(@SYS_COMPUTERNAME, '') = ''
		SELECT @SYS_COMPUTERNAME = SYS_COMPUTERNAME FROM UBEQ WHERE SYS_COMPUTERNAME = @@SERVERNAME
	
	SELECT @SEDE = IDSEDE, @IDSEDE = IDSEDE FROM UBEQ WHERE SYS_ComputerName = @SYS_COMPUTERNAME


	IF @METODO = 'IDENTIFICAR_PACIENTE'
	BEGIN

		IF 1=2
		BEGIN
			IF (SELECT COUNT(1) FROM AFI WHERE COALESCE(EMAIL,'') = JSON_VALUE(@PARAMETROS,'$.EMAIL'))<=0
			BEGIN
				SELECT OK = 'KO'
				SELECT 'Lamentamos mucho que no estes habilitado para acceder desde aquí a tus citas, por favor comunícate con nuestro call center para configurar tu usuario.' AS ERROR
				RETURN
			END

			IF (SELECT COUNT(1) FROM AFI WHERE COALESCE(EMAIL,'') = JSON_VALUE(@PARAMETROS,'$.EMAIL'))>1
			BEGIN
				SELECT OK = 'KO'
				SELECT 'Lamentamos mucho que existan inconsistencias con tu usuario, hay mas de una persona que tiene tu misma dirección de correo electrónico, por favor comunícate con nuestro call center para corregirlo.' AS ERROR
				RETURN
			END
		END

		SELECT TOP 1 @IDAFILIADO = IDAFILIADO 
			,@EMAIL = EMAIL
			,@ESTADO = ESTADO
			,@CELULAR = DBO.FNK_PrimerMovilTercero(AFI.IDAFILIADO)
			,@MENSAJE = '¡Hola '+DBO.FNK_LIMPIATEXTO(AFI.PNOMBRE,'A-Z ')+'! Tu código de acceso web es: '
		FROM AFI 
		WHERE TIPO_DOC = JSON_VALUE(@PARAMETROS,'$.TIPODOC')
		AND DOCIDAFILIADO = JSON_VALUE(@PARAMETROS,'$.DOCIDAFILIADO')

		IF COALESCE(@IDAFILIADO, '') = ''
		BEGIN
			SELECT OK = 'KO'
			SELECT 'Lamentamos mucho que no estes habilitado para acceder desde aquí a tus citas, por favor comunícate con nuestro call center para configurar tu usuario.' AS ERROR
			RETURN
		END

		IF COALESCE(@EMAIL, '') = ''
		BEGIN
			SELECT OK = 'KO'
			SELECT 'Lamentamos mucho que existan inconsistencias con tu usuario, no tienes un correo electrónico vinculado a tu ficha de usuario. Por favor comunícate con nuestro call center para corregirlo.' AS ERROR
			RETURN
		END
		

		IF @ESTADO<>'Activo'
		BEGIN
			SELECT OK = 'KO'
			SELECT 'Lamentamos mucho que existan inconsistencias con tu usuario, te encuentras inactivo en nuestro sistema, por favor comunícate con nuestro call center para corregirlo.' AS ERROR
			RETURN
		END
	  
		SELECT 'OK' AS OK, EMAIL = @EMAIL

		SELECT @CODIGO = LEFT(SUBSTRING(RTRIM(RAND()) + SUBSTRING(RTRIM(RAND()), 3, 11), 3, 11), 6)

		DELETE FROM TGEN WHERE TABLA='CIT' AND CAMPO='LOGIN_WEB' AND CODIGO=@IDAFILIADO
		INSERT INTO TGEN(TABLA,CAMPO,CODIGO,DATO1)
		SELECT 'CIT','LOGIN_WEB',@IDAFILIADO,@CODIGO

		SELECT @MENSAJE += @CODIGO + '. Utilizalo para ingresar a nuestra intranet.'
		EXEC SPK_SENDSMS @NUMERO=@CELULAR, @MENSAJE = @MENSAJE

		SELECT TOP 1 
		IDAFILIADO,NOMBREAFI,AFI.PNOMBRE,AFI.SNOMBRE,AFI.PAPELLIDO,AFI.SAPELLIDO
		,TELEFONOLAB,TELEFONORES,CELULAR,EMAIL=LOWER(AFI.EMAIL) 
		,CODIGO=@CODIGO
		,CLINICA = TER.RAZONSOCIAL
		FROM AFI 
		LEFT JOIN TER ON TER.IDTERCERO=DBO.FNK_VALORVARIABLE('IDTERCEROINSTALADO')
		WHERE IDAFILIADO=@IDAFILIADO

		RETURN
	END
	IF @METODO = 'AUTORIZAR_ACCESO'
	BEGIN
		
		SELECT @CODIGO=JSON_VALUE(@PARAMETROS,'$.CODIGO')


		SELECT @IDAFILIADO=CODIGO FROM TGEN WHERE TABLA='CIT' AND CAMPO='LOGIN_WEB' AND DATO1=@CODIGO

		INSERT INTO @TBLERRORES(ERROR)
		SELECT 'Código de acceso incorrecto, intentalo nuevamente'
		WHERE NOT EXISTS(
			SELECT * FROM TGEN
			WHERE TABLA	=	'CIT'
			AND CAMPO	=	'LOGIN_WEB'
			AND CODIGO	=	@IDAFILIADO
			AND DATO1	=	@CODIGO
		)

		IF(SELECT COUNT(*) FROM @TBLERRORES) >0
		BEGIN
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END

		SELECT OK='OK', IDAFILIADO=@IDAFILIADO

		SELECT AFI.IDAFILIADO ,AFI.NOMBREAFI	,AFI.PNOMBRE
			,AFI.SNOMBRE	,AFI.PAPELLIDO		,AFI.SAPELLIDO	
			,AFI.EDAD		,AFI.SEXO			,AFI.CELULAR
			,AFI.DIRECCION	,LOWER(AFI.EMAIL) EMAIL
			,AFI.IDADMINISTRADORA				,AFI.IDSEDE		
			,AFI.TIPO_DOC	,AFI.DOCIDAFILIADO	,TER.RAZONSOCIAL AS ADMINISTRADORA
			,EDAD_ANIOS = CAST(DATEDIFF(DAY, AFI.FNACIMIENTO, current_timestamp) / (365.23076923074) AS INT)
		FROM AFI
		LEFT JOIN TER ON TER.IDTERCERO=AFI.IDADMINISTRADORA
		WHERE IDAFILIADO=@IDAFILIADO
	END
	IF @METODO = 'LISTAR_AFILIADOS'
	BEGIN
		SELECT @IDAFILIADO = RIGHT(@USUARIO,LEN(@USUARIO)-4)

		SELECT OK = 'OK', IDAFILIADO=@IDAFILIADO

		SELECT IDAFILIADO, NOMBREAFI
		FROM AFI
		WHERE IDAFILIADO=@IDAFILIADO
      UNION ALL
      SELECT AFIPLANES.IDTERCERO , AFI.NOMBREAFI
      FROM   AFIPLANES INNER JOIN AFI ON AFIPLANES.IDTERCERO = AFI.IDAFILIADO
      WHERE  AFIPLANES.IDAFILIADO = @IDAFILIADO
      AND    AFIPLANES.TIPO = 'familiares'
		
	END
	IF @METODO = 'LISTAR_ESPECIALIDADES'
	BEGIN
		SELECT OK = 'OK'
		/* STORRES -- SE MEJORA VELOCIDAD DE CONSULTA Y SE AJUSTA CONSULTA
		SELECT IDEMEDICA,DBO.FNK_CAPITALIZAR_TEXTO(LTRIM(RTRIM(DESCRIPCION))) AS DESCRIPCION
		FROM (
			SELECT DISTINCT MES.IDEMEDICA, MES.DESCRIPCION
			FROM MEDS
			INNER JOIN MES ON MES.IDEMEDICA=MEDS.IDEMEDICA
			INNER JOIN CIT ON CIT.IDEMEDICA=MES.IDEMEDICA
			WHERE COALESCE(MES.CCOSTO_WEB, '') IN (SELECT CCOSTO FROM CEN)
			--AND COALESCE(CIT.WEB, 0)=1
			--AND	CIT.FECHA > GETDATE()
			--AND COALESCE(CIT.IDAFILIADO, '')=''
		) AS #T
		ORDER BY DESCRIPCION
      */
      SELECT IDEMEDICA,DBO.FNK_CAPITALIZAR_TEXTO(LTRIM(RTRIM(DESCRIPCION))) AS DESCRIPCION
		FROM (
         SELECT  DISTINCT MES.IDEMEDICA, MES.DESCRIPCION
         FROM MES 
         WHERE COALESCE(MES.CCOSTO_WEB, '') IN (SELECT CCOSTO FROM CEN)
           AND EXISTS (SELECT COUNT(1) FROM MEDS WHERE MES.IDEMEDICA = MEDS.IDEMEDICA)
        	) AS #T
		ORDER BY DESCRIPCION

	END
	IF @METODO = 'LISTAR_MEDICOS'
	BEGIN
		SELECT OK = 'OK'

		SELECT DISTINCT MED.IDMEDICO, MED.NOMBRE
		FROM MEDS
		INNER JOIN CIT ON CIT.IDMEDICO=MEDS.IDMEDICO
		INNER JOIN MED ON MED.IDMEDICO=MEDS.IDMEDICO
		WHERE	COALESCE(CIT.WEB, 0)=1
		AND    CIT.FECHA>GETDATE()
		AND COALESCE(CIT.IDAFILIADO, '')=''
		AND MEDS.IDEMEDICA = JSON_VALUE(@PARAMETROS,'$.IDEMEDICA')
		ORDER BY MED.NOMBRE
	END
	IF @METODO = 'LISTAR_MEDICOS_LISTA_ESPERA'
	BEGIN
		SELECT OK = 'OK'

		SELECT DISTINCT MED.IDMEDICO, MED.NOMBRE
		FROM MEDS
		INNER JOIN MED ON MED.IDMEDICO=MEDS.IDMEDICO
		WHERE MEDS.IDEMEDICA = JSON_VALUE(@PARAMETROS,'$.IDEMEDICA')
		ORDER BY MED.NOMBRE
	END
	IF @METODO = 'LISTAR_SEDES'
	BEGIN
		SELECT OK = 'OK'

		SELECT DISTINCT SED.IDSEDE, SED.DESCRIPCION
		FROM MEDS
		INNER JOIN CIT ON CIT.IDSEDE=MEDS.IDSEDE
		INNER JOIN SED ON SED.IDSEDE=MEDS.IDSEDE
		WHERE	COALESCE(CIT.WEB, 0)=1
		AND    CIT.FECHA>GETDATE()
		AND COALESCE(CIT.IDAFILIADO, '')=''
		AND MEDS.IDEMEDICA = JSON_VALUE(@PARAMETROS,'$.IDEMEDICA')
		AND MEDS.IDMEDICO = JSON_VALUE(@PARAMETROS,'$.IDMEDICO')
		ORDER BY SED.DESCRIPCION
	END
	IF @METODO = 'LISTAR_CITAS'
	BEGIN
		DECLARE @MINUTOS_DURACION INT = JSON_VALUE(@PARAMETROS,'$.DURACIONCITA')
		DECLARE @IDEMEDICA VARCHAR(20) = JSON_VALUE(@PARAMETROS,'$.IDEMEDICA')
		DECLARE @IDMEDICO VARCHAR(20) = JSON_VALUE(@PARAMETROS,'$.IDMEDICO')

		SELECT @IDSEDE = JSON_VALUE(@PARAMETROS,'$.IDSEDE')
		DECLARE @TBL AS TABLE(
		  ITEM INT IDENTITY(1,1),
		  CONSECUTIVO VARCHAR(20),
		  FECHA DATETIME,
		  IDMEDICO VARCHAR(20),
		  IDSEDE VARCHAR(20),
		  IDEMEDICA VARCHAR(20),
		  FDESCRITA VARCHAR(MAX)
		)

		INSERT INTO @TBL(CONSECUTIVO, FECHA, IDMEDICO, IDSEDE, IDEMEDICA, FDESCRITA)
		SELECT CIT.CONSECUTIVO, CIT.FECHA,CIT.IDMEDICO, CIT.IDSEDE, CIT.IDEMEDICA
			, FDESCRITA=CONCAT(LEFT(DATENAME(dw, cit.FECHA),3),' ',DATEPART(DAY,CIT.FECHA),' ', LEFT(DATENAME(m,CIT.FECHA),3), ', ', LEFT(CONVERT(VARCHAR,CIT.FECHA,108),5))
		FROM MEDS
		INNER JOIN CIT ON CIT.IDMEDICO=MEDS.IDMEDICO
		LEFT JOIN MAGPRP R ON CIT.IDMEDICO = R.IDMEDICO AND CIT.FECHA  BETWEEN R.FECHAINICIAL AND R.FECHAFINAL
		WHERE COALESCE(CIT.WEB, 0)=1
		AND CIT.FECHA>GETDATE()
		AND COALESCE(CIT.IDAFILIADO, '')=''
		AND CIT.IDEMEDICA = @IDEMEDICA
		AND CIT.IDMEDICO = @IDMEDICO
		AND CIT.IDSEDE = COALESCE(@IDSEDE, CIT.IDSEDE)
		AND CAST(CIT.FECHA AS DATE) = CAST(COALESCE(JSON_VALUE(@PARAMETROS,'$.FECHA'), CIT.FECHA) AS DATE)
		AND R.IDMEDICO IS NULL
		ORDER BY CIT.FECHA
		

		DECLARE _cursor CURSOR FOR   
		    SELECT CONSECUTIVO
			FROM @TBL
		OPEN _cursor  
		FETCH NEXT FROM _cursor INTO @CONSECUTIVO
		  
		WHILE @@FETCH_STATUS = 0  
		BEGIN  

			PRINT @CONSECUTIVO

			SELECT @FINI = CIT.FECHA, @FFIN = DATEADD([MINUTE],@MINUTOS_DURACION, CIT.FECHA) FROM CIT WHERE  CONSECUTIVO = @CONSECUTIVO

			IF (SELECT COUNT(1) FROM CIT WHERE IDMEDICO = @IDMEDICO AND CONVERT(DATE, CIT.FECHA) = CONVERT(DATE, @FINI)
				AND CIT.FECHA > CONVERT(DATETIME, @FINI) AND CIT.FECHA < CONVERT(DATETIME, @FFIN) AND CIT.IDAFILIADO IS NOT NULL) > 0
			BEGIN
				DELETE FROM @TBL WHERE CONSECUTIVO=@CONSECUTIVO
			END

		  
		    FETCH NEXT FROM _cursor INTO @CONSECUTIVO
		    END  
		  
		CLOSE _cursor  
		DEALLOCATE _cursor  


		BEGIN -- RESTRICCION POR HORAS (CONTROL DE HORAS EN SERVICIOS)
			SELECT @HDESDE= MIN(HDESDE), @HHASTA = MAX(HHASTA)
			FROM SER WHERE IDSERVICIO IN (SELECT VALUE FROM string_split(JSON_VALUE(@PARAMETROS,'$.SERVICIOS'),','))
			AND COALESCE(HORARIO, 0)=1
			AND HHASTA IS NOT NULL
			AND HDESDE IS NOT NULL

			--IF @HDESDE IS NOT NULL AND @HHASTA IS NOT NULL
			--BEGIN
			--	DELETE FROM @TBL 
			--	WHERE CAST(FECHA AS TIME) BETWEEN @HDESDE AND @HHASTA
			--END
			
		END

		SELECT OK = 'OK', @MINUTOS_DURACION MINUTOS, @HDESDE HDESDE, @HHASTA HHASTA


		--UPDATE SER SET HORARIO=1,HDESDE='08:00',HHASTA='14:00' WHERE IDSERVICIO='839600'

		SELECT CONSECUTIVO,FECHA,IDMEDICO,IDSEDE,IDEMEDICA,FDESCRITA
			--,LEAD(FECHA, 1) OVER (ORDER BY FECHA) AS ProximaCita1
			--,LEAD(CONSECUTIVO, 1) OVER (ORDER BY FECHA) AS CNSProximaCita1
			--,LEAD(FECHA, 2) OVER (ORDER BY FECHA) AS ProximaCita2
			--,LEAD(CONSECUTIVO, 2) OVER (ORDER BY FECHA) AS CNSProximaCita2
		FROM @TBL
		WHERE (@HDESDE IS NULL OR CAST(FECHA AS TIME) >= @HDESDE)
		AND (@HHASTA IS NULL OR CAST(FECHA AS TIME) <= @HHASTA)
		ORDER BY ITEM
	END
	IF @METODO = 'LISTAR_SERVICIOS'
	BEGIN
	
		SELECT @IDAFILIADO = RIGHT(@USUARIO,LEN(@USUARIO)-4)

		SELECT 
			  @IDTERCERO = COALESCE(JSON_VALUE(@PARAMETROS,'$.IDTERCERO'), IDADMINISTRADORA)
			, @IDPLAN = COALESCE(JSON_VALUE(@PARAMETROS,'$.IDPLAN'), IDPLAN)
         , @SEXO = SEXO
		FROM AFI 
		WHERE IDAFILIADO = @IDAFILIADO


		SELECT @IDAREA = IDAREA
		FROM CEN INNER JOIN MES ON CEN.CCOSTO = MES.CCOSTO_WEB
		WHERE MES.IDEMEDICA = JSON_VALUE(@PARAMETROS, '$.IDEMEDICA') 


		--SELECT @IDTERCERO AS IDTERCERO
		--	,@IDPLAN AS IDPLAN
		--	,@IDAREA AS IDAREA
		--	,JSON_VALUE(@PARAMETROS, '$.IDEMEDICA')  AS IDEMEDICA

		SELECT OK = 'OK', IDAFILIADO = @IDAFILIADO
		
		SELECT DISTINCT SER.IDSERVICIO, SER.DESCSERVICIO--, SER.PREFIJO, SER.NIVELATENCION
			,COALESCE(SER.DURACIONCITA,0) DURACIONCITA
			,PRECIO_PART = CAST(COALESCE((SELECT TOP 1 VLRSERVICIO  FROM SERTOT1 WHERE IDSERVICIO=SER.IDSERVICIO AND CURRENT_TIMESTAMP BETWEEN FECHAINI AND FECHAFIN AND IDPLAN IN (SELECT DATO FROM USVGS WHERE IDVARIABLE IN ('IDPLANPART', 'IDPLANPART2', 'IDPLANPART3', 'IDPLANPART4', 'IDPLANPART5'))
			AND IDTERCERO=DBO.FNK_VALORVARIABLE('IDTERCEROPARTICULAR')),0) AS DECIMAL(14,2))
		FROM MESS INNER JOIN SER ON MESS.IDSERVICIO = SER.IDSERVICIO
		WHERE SER.ESTADO='Activo'
		AND SER.SEXO IN ('Ambos', @SEXO)
		AND MESS.IDEMEDICA = JSON_VALUE(@PARAMETROS, '$.IDEMEDICA') 
		AND (
			EXISTS
			(
				SELECT 1 FROM CPPAF
				WHERE MESS.IDSERVICIO = CPPAF.IDSERVICIO 
				AND CPPAF.IDPLAN = @IDPLAN  
				AND CPPAF.IDAREA = CASE WHEN DBO.FNK_VALORVARIABLE('MANCCOSTO_CITAS_WEB')<>'NO' THEN @IDAREA ELSE CPPAF.IDAREA END
				AND  COALESCE(CPPAF.IDTERCEROCA,'') = 
					CASE WHEN COALESCE(COBRARA,'') = 'O' THEN  COALESCE(CPPAF.IDTERCEROCA,'') ELSE @IDTERCERO END
			) 
			OR JSON_VALUE(@PARAMETROS, '$.SINCONTRATO') = 1 
		)
	END
	IF @METODO = 'AGENDAR_CITA'
	BEGIN
		BEGIN TRY
		
			--SELECT 'KO' OK
			--SELECT ERROR = 'PROCESO EN DESARROLLO'
			
			SELECT TOP 1 @IDSERVICIO = [value] from string_split(JSON_VALUE(@PARAMETROS, '$.IDSERVICIOS'),',')


			INSERT INTO @TBLERRORES(ERROR)
			SELECT 'Debe elegir al menos un servicio'
			WHERE COALESCE(@IDSERVICIO, '') = ''

			SELECT	 @CONSECUTIVO	= JSON_VALUE(@PARAMETROS, '$.CONSECUTIVO')
					,@IDAFILIADO	= JSON_VALUE(@PARAMETROS, '$.IDAFILIADO')
			SELECT @IDTERCERO = IDADMINISTRADORA, @IDPLAN = IDPLAN
				,@EMAIL = AFI.EMAIL
				,@USUARIO = AFI.IDAFILIADO
			FROM AFI 
			WHERE IDAFILIADO = @IDAFILIADO


			INSERT INTO @TBLERRORES(ERROR)
			SELECT 'Otra persona ya tomó esta cita, por favor selecciona otra hora' ERROR
			FROM CIT
			WHERE CIT.CONSECUTIVO = @CONSECUTIVO
			AND COALESCE(CIT.IDAFILIADO, '') <> ''

         DECLARE @CCOSTO VARCHAR(20)

         IF DBO.FNK_VALORVARIABLE('MANCCOSTO_CITAS_WEB')='NO'
         BEGIN
		      SELECT TOP 1 @IDAREA = IDAREA
		      FROM MES INNER JOIN MESS ON MES.IDEMEDICA=MESS.IDEMEDICA
                     LEFT  JOIN CPPAF ON MESS.IDSERVICIO=CPPAF.IDSERVICIO AND IDPLAN=@IDPLAN AND IDTERCEROCA=CASE WHEN COALESCE(CPPAF.COBRARA,'O')='C' THEN @IDTERCERO ELSE IDTERCEROCA END
		      WHERE MES.IDEMEDICA = JSON_VALUE(@PARAMETROS, '$.IDEMEDICA') 
            AND MESS.IDSERVICIO=@IDSERVICIO
            
             SELECT  TOP 1 @CCOSTO=CEN.CCOSTO  FROM CEN WHERE IDAREA=@IDAREA
             AND IDSEDE=CASE WHEN DBO.FNK_VALORVARIABLE('FILTRA_CCOSTOXSEDE')='SI' THEN  JSON_VALUE(@PARAMETROS, '$.IDSEDE')  ELSE IDSEDE END
             ORDER BY CCOSTO ASC

         END


			IF NOT EXISTS(SELECT 1 FROM @TBLERRORES)
			BEGIN
				UPDATE CIT
				SET 
					IDAFILIADO = AFI.IDAFILIADO
					-- ,TIPOCITA  = B.TIPOCITA
					,IDPLAN = @IDPLAN
					,IDCONTRATANTE = @IDTERCERO
					,IDTERCEROCA = @IDTERCERO
					,TIPOSOLICITUD = 'Web'
					,ATENCION = 'Otras'
					,URGENCIA = 0
					,PREGUNTAPOR = 0 -- CASE WHEN B.EMBARAZO = 'Si' THEN 1 ELSE 0 END
					-- ,CLASEORDEN = (
					-- 	CASE 
					-- 		WHEN B.CLASEORDEN = 'Normal'
					-- 			THEN 'Normal'
					-- 		WHEN B.CLASEORDEN = 'PyP'
					-- 			THEN 'PyP'
					-- 		ELSE 'Modelo'
					-- 		END
					-- 	)
					-- ,CODUNG = B.UNIDNEGO
					,ALTOCOSTO = 0 
					,FECHASOL = DBO.FNK_GETDATE()
					,IDSERVICIO = @IDSERVICIO
					,USUARIO = @USUARIO
					,IDAREA =  (SELECT IDAREA FROM CEN WHERE CCOSTO = CASE WHEN DBO.FNK_VALORVARIABLE('MANCCOSTO_CITAS_WEB')='NO' THEN @CCOSTO ELSE MES.CCOSTO_WEB END) 
					,CCOSTO = CASE WHEN DBO.FNK_VALORVARIABLE('MANCCOSTO_CITAS_WEB')='NO' THEN @CCOSTO ELSE MES.CCOSTO_WEB END
					,TELEFONOAVISO = DBO.FNK_PrimerMovilTercero(AFI.IDAFILIADO)
					,NOMBREACOMPA = AFI.URG_NOMBRE
					,TELEFONOACOMPA = AFI.URG_TELE
					,PARENTESCOACOMPA = AFI.URG_VINCULO
					,NOMBRERESPO = AFI.URG_NOMBRE
					,TELEFONORESPO = AFI.URG_TELE
					,PARENTESCORESPO = AFI.URG_VINCULO
					-- ,IDPESPECIAL = CASE WHEN B.CLASEORDEN  = 'PyP' THEN B.PROGRAMA_POSIBLE ELSE  B.PROGRAMA END 
					-- ,IDIPSSOLICITA = B.IDIPSSOLICITA
					-- ,IDMEDICOSOLICITA = B.IDMEDICOSOLICITA
					,FECHAAUTORIZACION = DBO.FNK_GETDATE()
					,CCONTRATANTE = 0
					,AQUIENCOBRO = 'N'
					-- ,NOAUTORIZACION = B.NOAUTORIZACION
					,COPAGOPROPIO = PPT.COPAGOIND
					,VALORCOPAGO = 0
					-- ,TIPOCOPAGO = B.TIPOCOPAGO
					,VALORTOTAL = 0
					,NOCOBRAR = 0
					-- ,OBSERVACIONES = B.OBSERVACIONES
					,ESTADO = 'Activo'
					,IDSEDEORIGEN = CIT.IDSEDE
					-- ,SYS_COMPUTERNAME = @SYS_COMPUTERNAME
					,F_REQUERIDA = DBO.FNK_GETDATE()
					,MODALIDAD = 'Presencial' 
					,NUMCARNET = AFI.DOCIDAFILIADO 
					,TIPOAFILIADO = AFI.TIPOAFILIADO
					-- ,RAZONMEDDIF = CASE @MEDTRATANTEDIFERENTE WHEN 1 THEN @RAZONMEDDIFERENTE ELSE NULL END
					-- ,IDAUTSES = B.IDAUTSES
					-- ,RES_ONCO = B.RESPONSABLE
					-- ,CNSHACTRAN = B.CNSHACTRAN
				FROM CIT INNER JOIN MES ON MES.IDEMEDICA = CIT.IDEMEDICA
				INNER JOIN AFI ON AFI.IDAFILIADO = @IDAFILIADO
				LEFT JOIN PPT ON PPT.IDTERCERO=AFI.IDADMINISTRADORA AND PPT.IDPLAN=AFI.IDPLAN
				WHERE CONSECUTIVO=@CONSECUTIVO

				SELECT @IDAFILIADO         = IDAFILIADO 
					,@IDSERVICIO         = IDSERVICIO
					,@IDSEDE             = IDSEDE
					,@IDAREA = (SELECT IDAREA FROM CEN INNER JOIN MES ON CEN.CCOSTO =  MES.CCOSTO_WEB WHERE MES.IDEMEDICA = CIT.IDEMEDICA) 
				FROM CIT 
				WHERE  CONSECUTIVO = @CONSECUTIVO

				EXEC SPK_COPAGO_AUT_CEHOSP @IDAFILIADO
					,@CONSECUTIVO
					,0 -- @NO_ITEM
					,@IDSERVICIO  
					,0 -- @PYP
					,0 -- @ALTOCOSTO
					,0 --@VALORAUTD
					,'CI' -- @PROCEDENCIA
					,@SYS_COMPUTERNAME
					,'01' -- @COMPANIA
					,@IDSEDE
					,@USUARIO  
					,NULL --@IDPROVEEDOR
					,@IDAREA
					,NULL --@FECHAAUT 
					,0 --@COPAGOPROPIO  
					,0 -- @SOAT
				
				UPDATE CIT 
				SET VALORTOTAL = CASE WHEN VALORTOTAL IS  NULL THEN 0 ELSE VALORTOTAL END 
				WHERE CONSECUTIVO = @CONSECUTIVO


				--SELECT CIT.CONSECUTIVO
				--	,CIT.FECHASOL
				--	,CIT.FECHA
				--	,AFI = (SELECT AFI.TIPO_DOC,AFI.DOCIDAFILIADO,AFI.NOMBREAFI,AFI.EMAIL, AFI.IDAFILIADO, AFI.SEXO, AFI.EDAD, CIT.TELEFONOAVISO FOR JSON PATH)
				--	,SER = (SELECT SER.IDSERVICIO,SER.DESCSERVICIO FOR JSON PATH)
				--	,MES = (SELECT MES.IDEMEDICA, MES.DESCRIPCION FOR JSON PATH)
				--	,MED = (SELECT MED.IDMEDICO, MED.NOMBRE FOR JSON PATH)
				--	,SED = (SELECT SED.IDSEDE, SED.DESCRIPCION FOR JSON PATH)
				--FROM CIT INNER JOIN AFI ON AFI.IDAFILIADO = CIT.IDAFILIADO
				--INNER JOIN MED ON MED.IDMEDICO=CIT.IDMEDICO
				--INNER JOIN MES ON MES.IDEMEDICA=CIT.IDEMEDICA
				--INNER JOIN SER ON SER.IDSERVICIO=CIT.IDSERVICIO
				--INNER JOIN SED ON SED.IDSEDE=CIT.IDSEDE
				--WHERE CONSECUTIVO = @CONSECUTIVO

				INSERT INTO CITSER(CONSECUTIVO_CIT, IDSERVICIO, CANTIDAD, FECHA, USUARIO, ESTADO)
				SELECT @CONSECUTIVO, [value], 1, CURRENT_TIMESTAMP, @USUARIO, 'Activo'
				FROM string_split(JSON_VALUE(@PARAMETROS, '$.IDSERVICIOS'),',')

				SELECT @FDESDE = FECHA FROM CIT WHERE CONSECUTIVO=@CONSECUTIVO
				SELECT @DURACION_TOTAL_CITA = SUM(COALESCE(SER.DURACIONCITA, 0))
				FROM string_split(JSON_VALUE(@PARAMETROS, '$.IDSERVICIOS'),',') AS S INNER JOIN SER ON SER.IDSERVICIO=S.[value]
				SELECT @FHASTA = DATEADD(MINUTE, @DURACION_TOTAL_CITA, @FDESDE)

				SELECT @IDMEDICO=IDMEDICO FROM CIT WHERE CONSECUTIVO=@CONSECUTIVO

				INSERT INTO CIT_EXTRA (CONSECUTIVO, IDMEDICO, IDEMEDICA, FECHA, TIPOCITA, TIPOSOLICITUD, ATENCION, IDSEDE, DISPONIBILIDAD, CLASEORDEN, WEB,USUGENAGENDA,FGENERACION ,ESPROGRAMAS,MODELOS,MODALIDAD,CONSECUTIVO_RES,USUARIO_RES,FECHA_RES   )
				SELECT CONSECUTIVO, IDMEDICO, IDEMEDICA, FECHA, TIPOCITA, TIPOSOLICITUD, ATENCION, IDSEDE, DISPONIBILIDAD, CLASEORDEN, WEB,USUGENAGENDA,FGENERACION ,ESPROGRAMAS,MODELOS,MODALIDAD, @CONSECUTIVO, @USUARIO, GETDATE()
				FROM CIT 
				WHERE IDMEDICO = @IDMEDICO 
				AND CONVERT(DATE,  CIT.FECHA) =CONVERT(DATE, @FDESDE)
				AND CIT.FECHA > CONVERT(DATETIME,@FDESDE)
				AND CIT.FECHA < CONVERT(DATETIME,@FHASTA) 
				AND CIT.IDAFILIADO IS NULL
				AND CIT.CONSECUTIVO<>@CONSECUTIVO

				DELETE FROM CIT 
				--SELECT * FROM CIT
				WHERE  IDMEDICO = @IDMEDICO AND CONVERT(DATE,  CIT.FECHA) =CONVERT(DATE, @FDESDE)
				AND CIT.FECHA > CONVERT(DATETIME,@FDESDE) 
				AND CIT.FECHA < CONVERT(DATETIME,@FHASTA)
				AND CIT.IDAFILIADO IS NULL
				AND CIT.CONSECUTIVO<>@CONSECUTIVO


				IF(SELECT COUNT(1) FROM string_split(JSON_VALUE(@PARAMETROS, '$.IDSERVICIOS'),','))>1
				BEGIN
					UPDATE CIT SET
						DURACION = IIF(COALESCE(DURACION, 0)=0,(SELECT INTERVALO FROM CIT INNER JOIN MAGP ON MAGP.CONSECUTIVO=CIT.CONSECUTIVOMAGP WHERE CIT.CONSECUTIVO=@CONSECUTIVO),DURACION)
						,EXTRA = 1
						,TIME_EXTRA = @DURACION_TOTAL_CITA - IIF(COALESCE(DURACION, 0)=0,(SELECT INTERVALO FROM CIT INNER JOIN MAGP ON MAGP.CONSECUTIVO=CIT.CONSECUTIVOMAGP WHERE CIT.CONSECUTIVO=@CONSECUTIVO),DURACION)
					WHERE CONSECUTIVO = @CONSECUTIVO
				END

			END

		END TRY  
		BEGIN CATCH 
			INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE() ;  
		END CATCH
		IF (SELECT COUNT(*) FROM @TBLERRORES)> 0
		BEGIN
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END	

		--SELECT 'KO'OK
		--SELECT 'Reestructurando el desarrollo de agendamiento' AS ERROR

		SELECT OK='OK', EMAIL=@EMAIL, CONSECUTIVO=@CONSECUTIVO

	END
	IF @METODO = 'CITAS_PACIENTE'
	BEGIN
		
		SELECT @IDAFILIADO = RIGHT(@USUARIO,LEN(@USUARIO)-4)

		SELECT OK = 'OK', IDAFILIADO = @IDAFILIADO

		SELECT CIT.CONSECUTIVO
				,CIT.FECHA
				,CASE WHEN COALESCE(CIT.CUMPLIDA,0) = 0 THEN 
					IIF(CAST(FECHA AS DATE)>=CAST(GETDATE() AS DATE), 'Pendiente','Incumplida')
				   WHEN COALESCE(CIT.CUMPLIDA,0) = 1 THEN 'Atendido'
				   WHEN COALESCE(CIT.CUMPLIDA,0) = 2 THEN 'No Asistió'
				   WHEN COALESCE(CIT.CUMPLIDA,0) = 3 THEN 'En Consultorio'
				   END CUMPLIDA
				,FDESCRITA=CONCAT(DATENAME(dw, cit.FECHA),' ',DATEPART(DAY,CIT.FECHA),' de ', DATENAME(m,CIT.FECHA), ' a las ', LEFT(CONVERT(VARCHAR,CIT.FECHA,108),5))
				,SER = (SELECT SER.IDSERVICIO,SER.DESCSERVICIO FOR JSON PATH)
				,MES = (SELECT MES.IDEMEDICA, MES.DESCRIPCION FOR JSON PATH)
				,MED = (SELECT MED.IDMEDICO, MED.NOMBRE FOR JSON PATH)
				,SED = (SELECT SED.IDSEDE, SED.DESCRIPCION FOR JSON PATH)
				,AFI = (SELECT AFI.IDAFILIADO, AFI.DOCIDAFILIADO, AFI.TIPO_DOC, AFI.NOMBREAFI, AFI.EMAIL FOR JSON PATH)
				,SERVICIOS = (SELECT CITSER.IDSERVICIO,DESCSERVICIO FROM CITSER INNER JOIN SER ON SER.IDSERVICIO=CITSER.IDSERVICIO WHERE CONSECUTIVO_CIT=CIT.CONSECUTIVO FOR JSON PATH)
			FROM CIT 
			INNER JOIN MED ON CIT.IDMEDICO = MED.IDMEDICO
			INNER JOIN MES ON CIT.IDEMEDICA = MES.IDEMEDICA
			INNER JOIN SER ON SER.IDSERVICIO = CIT.IDSERVICIO
			INNER JOIN SED ON SED.IDSEDE=CIT.IDSEDE
			INNER JOIN AFI ON AFI.IDAFILIADO = CIT.IDAFILIADO
		WHERE CIT.IDAFILIADO = @IDAFILIADO 
		AND CAST(CIT.FECHA AS DATE) >= CAST(GETDATE() AS DATE)
		AND COALESCE(CIT.CUMPLIDA,0)=0

		SELECT CIT.CONSECUTIVO
				, CIT.FECHA
				,FDESCRITA=CONCAT(DATENAME(dw, cit.FECHA),' ',DATEPART(DAY,CIT.FECHA),' de ', DATENAME(m,CIT.FECHA), ' a las ', LEFT(CONVERT(VARCHAR,CIT.FECHA,108),5))
				,CASE WHEN COALESCE(CIT.CUMPLIDA,0) = 0 THEN 
					IIF(CAST(FECHA AS DATE)>=CAST(GETDATE() AS DATE), 'Pendiente','Incumplida')
				   WHEN COALESCE(CIT.CUMPLIDA,0) = 1 THEN 'Atendido'
				   WHEN COALESCE(CIT.CUMPLIDA,0) = 2 THEN 'No Asistió'
				   WHEN COALESCE(CIT.CUMPLIDA,0) = 3 THEN 'En Consultorio'
				   END CUMPLIDA
				,SER = (SELECT SER.IDSERVICIO,SER.DESCSERVICIO FOR JSON PATH)
				,MES = (SELECT MES.IDEMEDICA, MES.DESCRIPCION FOR JSON PATH)
				,MED = (SELECT MED.IDMEDICO, MED.NOMBRE FOR JSON PATH)
				,SED = (SELECT SED.IDSEDE, SED.DESCRIPCION FOR JSON PATH)
				,AFI = (SELECT AFI.IDAFILIADO, AFI.DOCIDAFILIADO, AFI.TIPO_DOC, AFI.NOMBREAFI, AFI.EMAIL FOR JSON PATH)
				,SERVICIOS = (SELECT CITSER.IDSERVICIO,DESCSERVICIO FROM CITSER INNER JOIN SER ON SER.IDSERVICIO=CITSER.IDSERVICIO WHERE CONSECUTIVO_CIT=CIT.CONSECUTIVO FOR JSON PATH)
		FROM CIT 
			INNER JOIN MED ON CIT.IDMEDICO = MED.IDMEDICO
			INNER JOIN MES ON CIT.IDEMEDICA = MES.IDEMEDICA
			INNER JOIN SER ON SER.IDSERVICIO = CIT.IDSERVICIO
			INNER JOIN SED ON SED.IDSEDE=CIT.IDSEDE
			INNER JOIN AFI ON AFI.IDAFILIADO = CIT.IDAFILIADO
		WHERE CIT.IDAFILIADO = @IDAFILIADO 
		AND ((CAST(CIT.FECHA AS DATE) < CAST(GETDATE() AS DATE)
			AND COALESCE(CIT.CUMPLIDA,0)=0) OR COALESCE(CIT.CUMPLIDA, 0)<>0) 
	END
	IF @METODO = 'CANCELAR_CITA'
	BEGIN
		BEGIN TRY
			SELECT @IDCAUSAL = DBO.FNK_VALORVARIABLE('IDCAU_PACIENTE_CANCE')
				,@CONSECUTIVO = JSON_VALUE(@PARAMETROS,'$.CONSECUTIVO')

			SELECT @IDAFILIADO = IDAFILIADO FROM CIT WHERE CONSECUTIVO=@CONSECUTIVO

			IF COALESCE(@IDCAUSAL, '')=''
			BEGIN
				SELECT TOP 1 @IDCAUSAL=IDCAUSAL
				FROM CAU
				WHERE IDCLASE='CITCAU'
				AND DESCCAUSAL LIKE '%PACIENTE%'
			END

			DECLARE @JSON2 NVARCHAR(MAX)
			SELECT @JSON2 = '{"MODELO":"CIT_COL","METODO":"CANCELAR_CITAS","PARAMETROS":{"CONSECUTIVO":"'+@CONSECUTIVO+'","IDCAUSAL":"'+COALESCE(@IDCAUSAL, '')+'"},"USUARIO":"'+@USUARIO+'"}'

			EXEC SPQ_JSON @JSON2
			

		END TRY  
		BEGIN CATCH 
			INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE() ;  
		END CATCH

		IF (SELECT COUNT(*) FROM @TBLERRORES)> 0
		BEGIN
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END	
		
		SELECT 'OK' OK
	END
	IF @METODO = 'LISTAR_PLANES'
	BEGIN
        SELECT 'OK' AS OK
        SELECT	TER.IDTERCERO, TER.RAZONSOCIAL, PPT.IDPLAN, PLN.DESCPLAN
			        , CAST(IIF(AFI.IDAFILIADO IS NULL, 0, 1) AS BIT) AS [CHECKED]
                , PARTICULAR = CAST(IIF(PLN.IDPLAN IN (SELECT DATO FROM USVGS WHERE IDVARIABLE IN ('IDPLANPART', 'IDPLANPART2', 'IDPLANPART3', 'IDPLANPART4', 'IDPLANPART5')), 1, 0) AS BIT)
        FROM		TER 
	        INNER JOIN	TEXCA	ON TEXCA.IDTERCERO  =TER.IDTERCERO
	        INNER JOIN	PPT		ON PPT.IDTERCERO    =TEXCA.IDTERCERO
	        INNER JOIN	PLN		ON PLN.IDPLAN       =PPT.IDPLAN
	        INNER JOIN   AFI   ON AFI.IDADMINISTRADORA = TER.IDTERCERO AND IDAFILIADO = JSON_VALUE(@PARAMETROS, '$.IDAFILIADO')
        WHERE    TER.ESTADO			= 'Activo'
        AND		PPT.ESTADO			= 'Activo'
        AND		TEXCA.IDCATEGORIA	= 'CON'  
        UNION ALL
        SELECT	TER.IDTERCERO, TER.RAZONSOCIAL, PPT.IDPLAN, PLN.DESCPLAN
		            , CAST(IIF(AFI.IDAFILIADO IS NULL, 0, 1) AS BIT) AS [CHECKED]
		            , PARTICULAR = CAST(IIF(PLN.IDPLAN IN (SELECT DATO FROM USVGS WHERE IDVARIABLE IN ('IDPLANPART', 'IDPLANPART2', 'IDPLANPART3', 'IDPLANPART4', 'IDPLANPART5')), 1, 0) AS BIT)
        FROM		TER INNER JOIN	TEXCA	ON TEXCA.IDTERCERO  =   TER.IDTERCERO
		                INNER JOIN	PPT	ON PPT.IDTERCERO    =   TEXCA.IDTERCERO
		                INNER JOIN	PLN	ON PLN.IDPLAN       =   PPT.IDPLAN
                        INNER JOIN   AFI ON  IDAFILIADO      =   JSON_VALUE(@PARAMETROS, '$.IDAFILIADO')
        WHERE    TER.ESTADO			= 'Activo'
        AND		PPT.ESTADO			= 'Activo'
        AND		TEXCA.IDCATEGORIA	= 'CON'
        AND		TER.IDTERCERO = DBO.FNK_VALORVARIABLE('IDTERCEROPARTICULAR')

        UNION ALL
        SELECT AFIPLANES.IDTERCERO, TER.RAZONSOCIAL, AFIPLANES.IDPLAN, PLN.DESCPLAN ,1  [CHECKED] 
            ,PARTICULAR = CAST(IIF(PLN.IDPLAN IN (SELECT DATO FROM USVGS WHERE IDVARIABLE IN ('IDPLANPART', 'IDPLANPART2', 'IDPLANPART3', 'IDPLANPART4', 'IDPLANPART5')), 1, 0) AS BIT)
        FROM   AFIPLANES INNER JOIN TER ON AFIPLANES.IDTERCERO = TER.IDTERCERO
                        INNER JOIN PLN ON AFIPLANES.IDPLAN    = PLN.IDPLAN
        WHERE  AFIPLANES.IDAFILIADO = JSON_VALUE(@PARAMETROS, '$.IDAFILIADO')
	END
	IF @METODO = 'LISTAR_PLANES_LISTA_ESPERA'
	BEGIN
		SELECT 'OK' AS OK
		SELECT	TER.IDTERCERO, TER.RAZONSOCIAL, PPT.IDPLAN, PLN.DESCPLAN
				,CAST(IIF(AFI.IDAFILIADO IS NULL, 0, 1) AS BIT) AS [CHECKED]
				,PARTICULAR = CAST(IIF(PLN.IDPLAN IN (SELECT DATO FROM USVGS WHERE IDVARIABLE IN ('IDPLANPART', 'IDPLANPART2', 'IDPLANPART3', 'IDPLANPART4', 'IDPLANPART5')), 1, 0) AS BIT)
		FROM		TER 
		INNER JOIN	TEXCA	ON TEXCA.IDTERCERO  =TER.IDTERCERO
		INNER JOIN	PPT		ON PPT.IDTERCERO    =TEXCA.IDTERCERO
		INNER JOIN	PLN		ON PLN.IDPLAN       =PPT.IDPLAN
		LEFT JOIN   AFI		ON IDAFILIADO = JSON_VALUE(@PARAMETROS, '$.IDAFILIADO')
		WHERE TER.ESTADO			= 'Activo'
		AND		PPT.ESTADO			= 'Activo'
		AND		TEXCA.IDCATEGORIA	= 'CON'
		AND	  (AFI.IDADMINISTRADORA IS NULL OR AFI.IDADMINISTRADORA=TER.IDTERCERO)
		ORDER BY DESCPLAN
	END
	IF @METODO = 'AGREGAR_LISTA_ESPERA'
	BEGIN
		BEGIN TRY
			SELECT @IDSEDE = COALESCE(@IDSEDE, '01')
			SELECT @IDAFILIADO = RIGHT(@USUARIO,LEN(@USUARIO)-4)

			EXEC SPK_GENCONSECUTIVO '01',@IDSEDE, '@NOCIT', @CNSNOCIT OUTPUT  
			SELECT  @CNSNOCIT = @IDSEDE + REPLACE(SPACE(8 - LEN(@CNSNOCIT))+LTRIM(RTRIM(@CNSNOCIT)),SPACE(1),0)
		

			INSERT INTO NOCIT(CNSNOCIT, FECHA, IDAFILIADO, MMEDICO, IDMEDICO, F_REQUERIDA, USUARIO, SYS_COMPUTERNAME, IDEMEDICA, OBSERVACION, ATENDIDO)
			SELECT @CNSNOCIT
				,CURRENT_TIMESTAMP
				,@IDAFILIADO
				,IIF(COALESCE(JSON_VALUE(@PARAMETROS,'$.IDMEDICO'),'')<>'', 1, 0)
				,JSON_VALUE(@PARAMETROS,'$.IDMEDICO')
				,JSON_VALUE(@PARAMETROS,'$.FECHAREQ')
				,NULL
				,@SYS_COMPUTERNAME
				,JSON_VALUE(@PARAMETROS,'$.IDEMEDICA')
				,JSON_VALUE(@PARAMETROS,'$.OBSERVACION')
				,0

			INSERT INTO DBO.NOCITS(CNSNOCIT,IDSERVICIO)
			SELECT @CNSNOCIT,VALUE FROM string_split(JSON_VALUE(@PARAMETROS,'$.SERVICIOS'),',')

			END TRY
		BEGIN CATCH            
			INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE()
		END CATCH

		IF (SELECT COUNT(*) FROM @TBLERRORES)> 0
		BEGIN
			SELECT 'KO' OK, '' CONSECUTIVO
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END
		SELECT 'OK' OK
	END
	IF @METODO = 'ELIMINAR_LISTA_ESPERA'
	BEGIN
		BEGIN TRY

			SELECT @CNSNOCIT = JSON_VALUE(@PARAMETROS,'$.CNSNOCIT')

			UPDATE NOCIT SET ANULADA = 1, FANULADA = CURRENT_TIMESTAMP
			WHERE CNSNOCIT = @CNSNOCIT

			END TRY
		BEGIN CATCH            
			INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE()
		END CATCH

		IF (SELECT COUNT(*) FROM @TBLERRORES)> 0
		BEGIN
			SELECT 'KO' OK, '' CONSECUTIVO
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END
		SELECT 'OK' OK, CNSNOCIT = @CNSNOCIT
	END
	IF @METODO = 'CITAS_EN_LISTA_ESPERA'
	BEGIN
		SELECT @IDAFILIADO = RIGHT(@USUARIO,LEN(@USUARIO)-4)
		SELECT OK = 'OK', IDAFILIADO = @IDAFILIADO
		SELECT NOCIT.* 
			,MED.NOMBRE AS PROFESIONAL
			,MES.DESCRIPCION AS ESPECIALIDAD
			,FREQ_DESCRITA=CONCAT(LEFT(DATENAME(dw, NOCIT.F_REQUERIDA),3),' ',DATEPART(DAY,NOCIT.F_REQUERIDA),' ', LEFT(DATENAME(m,NOCIT.F_REQUERIDA),3), ', ', LEFT(CONVERT(VARCHAR,NOCIT.F_REQUERIDA,108),5))
			,SERVICIOS = (
				SELECT SER.IDSERVICIO,DESCSERVICIO
				FROM SER INNER JOIN NOCITS ON NOCITS.IDSERVICIO=SER.IDSERVICIO
				WHERE NOCITS.CNSNOCIT=NOCIT.CNSNOCIT
				ORDER BY SER.DESCSERVICIO
				FOR JSON PATH
			)
		FROM NOCIT 
		LEFT JOIN MES ON MES.IDEMEDICA=NOCIT.IDEMEDICA
		LEFT JOIN MED ON MED.IDMEDICO=NOCIT.IDMEDICO
		WHERE IDAFILIADO=@IDAFILIADO
		AND COALESCE(NOCIT.ATENDIDO, 0) = 0
		AND COALESCE(NOCIT.ANULADA, 0) = 0
	END
	IF @METODO = 'TRASPASAR_AGENDA'
	BEGIN
		SELECT @CONSECUTIVOS =  CONSECUTIVOS, @IDMEDICO_1 = IDMEDICO_1, @IDMEDICO_2 = IDMEDICO_2, @FECHA = FECHA, @USAHORA = USAHORA, @HORA = HORA, @INTERVALO = INTERVALO
	   FROM OPENJSON (@PARAMETROS)
	   WITH		 (
		CONSECUTIVOS		NVARCHAR(MAX) AS JSON				,IDMEDICO_1			VARCHAR(20)			'$.IDMEDICO_1' ,INTERVALO		INT		'$.INTERVALO'
		,IDMEDICO_2			VARCHAR(20)		'$.IDMEDICO_2'		,FECHA				DATE				'$.FECHA'
		,USAHORA			BIT				'$.USAHORA'			,HORA				VARCHAR(5)			'$.HORA')

		SELECT ROW_NUMBER()OVER(ORDER BY  FECHA  ASC) FILA, * INTO #TABLA_RESULT
		FROM OPENJSON (@CONSECUTIVOS)
		WITH (
			CONSECUTIVO		VARCHAR(20)  '$.CONSECUTIVO'
			,IDSERVICIO		VARCHAR(20)  '$.IDSERVICIO'
			,CLASEORDEN		VARCHAR(20)  '$.CLASEORDEN'
			,IDMEDICO		VARCHAR(20)  '$.IDMEDICO'
			,IDEMEDICA		VARCHAR(20)  '$.IDEMEDICA'
			,FECHA			DATETIME  '$.FECHA'
		)

		IF EXISTS (SELECT   * FROM FES WHERE CONVERT(DATE,FES.FECHA) = CONVERT(DATE,@FECHA))
		BEGIN
			SELECT @MENSAJE = 'La fecha '+@FECHA + ' es Feriado.'
			INSERT INTO @TBLERRORES(ERROR) SELECT @MENSAJE
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END
		BEGIN TRY

			SELECT @ITEMS = 1,@LIMITE = 0
			SELECT @LIMITE=COUNT(*) FROM  #TABLA_RESULT
			WHILE @ITEMS<=@LIMITE
			BEGIN
					/* CITA ACTUAL - CITA A CAMBIAR: */
					SELECT @CONSECUTIVO_1 = CIT.CONSECUTIVO, @FECHA_CITA = (SELECT DATEADD(HOUR,(datepart(hh, CIT.FECHA)),DATEADD(minute,(datepart(mi, CIT.FECHA)),DATEADD(SECOND,(datepart(ss, CIT.FECHA)),REPLACE(@FECHA,'-','')))))
					FROM #TABLA_RESULT, CIT WHERE #TABLA_RESULT.FILA = @ITEMS AND CIT.CONSECUTIVO = #TABLA_RESULT.CONSECUTIVO
					SELECT @CONTINUA = 0
					SELECT @CONSECUTIVO_2 = NULL

					IF @USAHORA = 1
					BEGIN
						SELECT  @FECHAI = REPLACE(@FECHA,'-','')
						--SELECT DBO.FNK_GETDATE()
						SELECT @FECHA_CITA = DATEADD(MINUTE, (@INTERVALO*@ITEMS) -@INTERVALO, CONVERT(DATETIME,CONCAT(@FECHAI,' ',@HORA)))
					END


					IF NOT EXISTS (SELECT * FROM CIT WHERE CIT.IDMEDICO = @IDMEDICO_2 AND CIT.FECHA = @FECHA_CITA ) AND @CONTINUA = 0
					BEGIN
						PRINT '111111'
						SELECT @FECHA_CITA = @FECHA_CITA
						EXEC SPK_GENCONSECUTIVO '01',@IDSEDE,'@CIT', @CONSECUTIVO_2 OUTPUT  
						SELECT @CONSECUTIVO_2 = @IDSEDE + REPLACE(SPACE(10 - LEN(@CONSECUTIVO_2))+LTRIM(RTRIM(@CONSECUTIVO_2)),SPACE(1),0) 
						INSERT INTO CIT(CONSECUTIVO, IDMEDICO, IDEMEDICA, FECHA, TIPOCITA, TIPOSOLICITUD, ATENCION, IDSEDE, DISPONIBILIDAD, CLASEORDEN, WEB,USUGENAGENDA,FGENERACION
							,ESPROGRAMAS,MODELOS,MODALIDAD)
						SELECT @CONSECUTIVO_2, @IDMEDICO_2, #TABLA_RESULT.IDEMEDICA, @FECHA_CITA, CIT.TIPOCITA, CIT.TIPOSOLICITUD, CIT.ATENCION, CIT.IDSEDE, CIT.DISPONIBILIDAD, CIT.CLASEORDEN, CIT.WEB,@USUARIO,DBO.FNK_GETDATE()
							,CIT.ESPROGRAMAS,CIT.MODELOS,CIT.MODALIDAD
						FROM #TABLA_RESULT, CIT WHERE #TABLA_RESULT.FILA = @ITEMS AND CIT.CONSECUTIVO = #TABLA_RESULT.CONSECUTIVO 
						SELECT @CONTINUA = 1
					END
					IF EXISTS (SELECT * FROM CIT WHERE CIT.IDMEDICO = @IDMEDICO_2 AND CIT.FECHA = @FECHA_CITA AND COALESCE(CIT.IDAFILIADO,'') = '') AND @CONTINUA = 0
					BEGIN
						PRINT '22222'
						SELECT @FECHA_CITA = @FECHA_CITA
						SELECT @CONSECUTIVO_2 = CIT.CONSECUTIVO FROM CIT WHERE CIT.IDMEDICO = @IDMEDICO_2 AND CIT.FECHA = @FECHA_CITA AND COALESCE(CIT.IDAFILIADO,'') = ''
						SELECT @CONTINUA = 1
					END
					IF NOT EXISTS (SELECT * FROM CIT WHERE CIT.IDMEDICO = @IDMEDICO_2 AND CIT.FECHA = DATEADD(MINUTE,1,@FECHA_CITA) ) AND @CONTINUA = 0
					BEGIN
						PRINT '3333333'
						SELECT @FECHA_CITA = DATEADD(MINUTE,1,@FECHA_CITA) 
						EXEC SPK_GENCONSECUTIVO '01',@IDSEDE,'@CIT', @CONSECUTIVO_2 OUTPUT  
						SELECT @CONSECUTIVO_2 = @IDSEDE + REPLACE(SPACE(10 - LEN(@CONSECUTIVO_2))+LTRIM(RTRIM(@CONSECUTIVO_2)),SPACE(1),0) 
						INSERT INTO CIT(CONSECUTIVO, IDMEDICO, IDEMEDICA, FECHA, TIPOCITA, TIPOSOLICITUD, ATENCION, IDSEDE, DISPONIBILIDAD, CLASEORDEN, WEB,USUGENAGENDA,FGENERACION
							,ESPROGRAMAS,MODELOS,MODALIDAD)
						SELECT @CONSECUTIVO_2, @IDMEDICO_2, #TABLA_RESULT.IDEMEDICA, @FECHA_CITA, CIT.TIPOCITA, CIT.TIPOSOLICITUD, CIT.ATENCION, CIT.IDSEDE, CIT.DISPONIBILIDAD, CIT.CLASEORDEN, CIT.WEB,@USUARIO,DBO.FNK_GETDATE()
							,CIT.ESPROGRAMAS,CIT.MODELOS,CIT.MODALIDAD
						FROM #TABLA_RESULT, CIT WHERE #TABLA_RESULT.FILA = @ITEMS AND CIT.CONSECUTIVO = #TABLA_RESULT.CONSECUTIVO 
						SELECT @CONTINUA = 1
					END
					IF EXISTS (SELECT * FROM CIT WHERE CIT.IDMEDICO = @IDMEDICO_2 AND CIT.FECHA =  DATEADD(MINUTE,1,@FECHA_CITA) AND COALESCE(CIT.IDAFILIADO,'') = '') AND @CONTINUA = 0
					BEGIN
						PRINT '444444'
						SELECT @FECHA_CITA = DATEADD(MINUTE,1,@FECHA_CITA) 
						SELECT @CONSECUTIVO_2 = CIT.CONSECUTIVO FROM CIT WHERE CIT.IDMEDICO = @IDMEDICO_2 AND CIT.FECHA = @FECHA_CITA AND COALESCE(CIT.IDAFILIADO,'') = ''
						SELECT @CONTINUA = 1
					END

					IF EXISTS (SELECT * FROM CIT WHERE CIT.IDMEDICO = @IDMEDICO_2 AND CIT.FECHA =  DATEADD(MINUTE,2,@FECHA_CITA) AND COALESCE(CIT.IDAFILIADO,'') = '') AND @CONTINUA = 0
					BEGIN
						PRINT '55555'
						SELECT @FECHA_CITA = DATEADD(MINUTE,2,@FECHA_CITA) 
						EXEC SPK_GENCONSECUTIVO '01',@IDSEDE,'@CIT', @CONSECUTIVO_2 OUTPUT  
						SELECT @CONSECUTIVO_2 = @IDSEDE + REPLACE(SPACE(10 - LEN(@CONSECUTIVO_2))+LTRIM(RTRIM(@CONSECUTIVO_2)),SPACE(1),0) 
						INSERT INTO CIT(CONSECUTIVO, IDMEDICO, IDEMEDICA, FECHA, TIPOCITA, TIPOSOLICITUD, ATENCION, IDSEDE, DISPONIBILIDAD, CLASEORDEN, WEB,USUGENAGENDA,FGENERACION
							,ESPROGRAMAS,MODELOS,MODALIDAD)
						SELECT @CONSECUTIVO_2, @IDMEDICO_2, #TABLA_RESULT.IDEMEDICA, @FECHA_CITA, CIT.TIPOCITA, CIT.TIPOSOLICITUD, CIT.ATENCION, CIT.IDSEDE, CIT.DISPONIBILIDAD, CIT.CLASEORDEN, CIT.WEB,@USUARIO,DBO.FNK_GETDATE()
							,CIT.ESPROGRAMAS,CIT.MODELOS,CIT.MODALIDAD
						FROM #TABLA_RESULT, CIT WHERE #TABLA_RESULT.FILA = @ITEMS AND CIT.CONSECUTIVO = #TABLA_RESULT.CONSECUTIVO 
						SELECT @CONTINUA = 1
					END
					IF EXISTS (SELECT * FROM CIT WHERE CIT.IDMEDICO = @IDMEDICO_2 AND CIT.FECHA =  DATEADD(MINUTE,2,@FECHA_CITA) AND COALESCE(CIT.IDAFILIADO,'') = '') AND @CONTINUA = 0
					BEGIN
						PRINT '66666'
						SELECT @FECHA_CITA = DATEADD(MINUTE,2,@FECHA_CITA) 
						SELECT @CONSECUTIVO_2 = CIT.CONSECUTIVO FROM CIT WHERE CIT.IDMEDICO = @IDMEDICO_2 AND CIT.FECHA = @FECHA_CITA AND COALESCE(CIT.IDAFILIADO,'') = ''
						SELECT @CONTINUA = 1
					END

					IF EXISTS (SELECT * FROM CIT WHERE CIT.IDMEDICO = @IDMEDICO_2 AND CIT.FECHA =  DATEADD(MINUTE,3,@FECHA_CITA) AND COALESCE(CIT.IDAFILIADO,'') = '') AND @CONTINUA = 0
					BEGIN
						PRINT '777777'
						SELECT @FECHA_CITA = DATEADD(MINUTE,3,@FECHA_CITA) 
						EXEC SPK_GENCONSECUTIVO '01',@IDSEDE,'@CIT', @CONSECUTIVO_2 OUTPUT  
						SELECT @CONSECUTIVO_2 = @IDSEDE + REPLACE(SPACE(10 - LEN(@CONSECUTIVO_2))+LTRIM(RTRIM(@CONSECUTIVO_2)),SPACE(1),0) 
						INSERT INTO CIT(CONSECUTIVO, IDMEDICO, IDEMEDICA, FECHA, TIPOCITA, TIPOSOLICITUD, ATENCION, IDSEDE, DISPONIBILIDAD, CLASEORDEN, WEB,USUGENAGENDA,FGENERACION
							,ESPROGRAMAS,MODELOS,MODALIDAD)
						SELECT @CONSECUTIVO_2, @IDMEDICO_2, #TABLA_RESULT.IDEMEDICA, @FECHA_CITA, CIT.TIPOCITA, CIT.TIPOSOLICITUD, CIT.ATENCION, CIT.IDSEDE, CIT.DISPONIBILIDAD, CIT.CLASEORDEN, CIT.WEB,@USUARIO,DBO.FNK_GETDATE()
							,CIT.ESPROGRAMAS,CIT.MODELOS,CIT.MODALIDAD
						FROM #TABLA_RESULT, CIT WHERE #TABLA_RESULT.FILA = @ITEMS AND CIT.CONSECUTIVO = #TABLA_RESULT.CONSECUTIVO 
						SELECT @CONTINUA = 1
					END
					IF EXISTS (SELECT * FROM CIT WHERE CIT.IDMEDICO = @IDMEDICO_2 AND CIT.FECHA =  DATEADD(MINUTE,3,@FECHA_CITA) AND COALESCE(CIT.IDAFILIADO,'') = '') AND @CONTINUA = 0
					BEGIN
						PRINT '888888'
						SELECT @FECHA_CITA = DATEADD(MINUTE,3,@FECHA_CITA) 
						SELECT @CONSECUTIVO_2 = CIT.CONSECUTIVO FROM CIT WHERE CIT.IDMEDICO = @IDMEDICO_2 AND CIT.FECHA = @FECHA_CITA AND COALESCE(CIT.IDAFILIADO,'') = ''
						SELECT @CONTINUA = 1
					END

					

					SELECT IDAFILIADO,  CONSECUTIVO,FECHA, IDMEDICO,MES.IDEMEDICA  , IDSERVICIO, ATENCION, IDCONTRATANTE, IDPLAN, TELEFONOAVISO, DISPONIBILIDAD, OBSERVACIONES, NOAUTORIZACION
						, IDIPSSOLICITA, IDMEDICOSOLICITA, FECHAAUTORIZACION, TIPOCOPAGO, IDAREA, ALTOCOSTO, IDTERCEROCA, AQUIENCOBRO, IDCONTRATO, IDSEDE,TIPOCITA,MODALIDAD, CONSECUTIVOMAGP
					INTO #DATOANTERIOR
					FROM CIT INNER JOIN MES ON CIT.IDEMEDICA = MES.IDEMEDICA WHERE  CIT.CONSECUTIVO = @CONSECUTIVO_1

					SELECT IDAFILIADO, CONSECUTIVO,  FECHA,  NUMCARNET, TIPOCITA, MODALIDAD, TIPOSOLICITUD, IDSERVICIO, ATENCION, PVEZ, IDCONTRATANTE, IDSEDE, IDMEDICO, IDPLAN, URGENCIA, VALORTOTAL
						, CIT.ESTADO, TELEFONOAVISO, DISPONIBILIDAD, CLASEORDEN, @USUARIO USUARIO, OBSERVACIONES, IDSEDEORIGEN, FECHAAUTORIZACION, TIPOCOPAGO, IDAREA, CCOSTO, ALTOCOSTO
						, MES.IDEMEDICA, IDTERCEROCA, IDCONTRATO,  CNSORIGINAL, DURACION, EXTRA, TIME_EXTRA,IDAUTSES, CONSECUTIVOMAGP
					INTO #DATONUEVO
					FROM CIT  INNER JOIN MES ON CIT.IDEMEDICA = MES.IDEMEDICA WHERE  CIT.CONSECUTIVO = @CONSECUTIVO_2

					--SELECT @TIPOCITA_ANT = TIPOCITA, @MODALIDAD_ANT = MODALIDAD FROM #DATOANTERIOR
					--SELECT @TIPOCITA_NUE = TIPOCITA, @MODALIDAD_NUE = MODALIDAD FROM #DATONUEVO
		   
					SELECT @PARTICULAR = EXTRA, @PARTICULAR_TIME = TIME_EXTRA, @CUMPLIDA = CUMPLIDA,@TIPOCAJA=TIPOCAJA,@NORECIBOCAJA=NORECIBOCAJA,@IDAFILIADO=IDAFILIADO,@IDSERVICIO=IDSERVICIO FROM CIT 
					WHERE CONSECUTIVO=@CONSECUTIVO_1
					SELECT @FECHAINCIO = CIT.FECHA, @FECHAFINAL = DATEADD([MINUTE],@PARTICULAR_TIME, CIT.FECHA), @IDMEDICO = IDMEDICO FROM CIT WHERE  CONSECUTIVO = @CONSECUTIVO_2


					SELECT @FAUX = FECHA, @IDMEDICOAUX = IDMEDICO, @IDAFILIADO = IDAFILIADO 
					FROM CIT WHERE CONSECUTIVO = @CONSECUTIVO_1
		   
					WHILE(EXISTS(SELECT 1 FROM CIT WHERE FECHA = @FAUX AND IDMEDICO=@IDMEDICO))
					SELECT @FAUX = DATEADD(MINUTE,1,@FAUX)

					UPDATE CIT SET IDMEDICO =  NULL, FECHA =  @FAUX, IDEMEDICA =  NULL WHERE  CONSECUTIVO = @CONSECUTIVO_1

					IF (SELECT COUNT(*) FROM CITSE WHERE CONSECUTIVO = @CONSECUTIVO_1) = 0 
						SET @CONT = 1
					ELSE 
						SELECT @CONT = (SELECT COUNT(1) FROM CITSE WHERE CONSECUTIVO = @CONSECUTIVO_1) + 1
		--QUERY 2
		--QUERY 2
					INSERT INTO CITSE (CONSECUTIVO, ITEM, USUARIO, SYS_COMPUTERNAME, OBSERVACION, PROCEDENCIA, FECHA, IDAFILIADO, CONSECUTIVO_NUEVO, TIPO)
					SELECT @CONSECUTIVO_1, @CONT,@USUARIO,@SYS_COMPUTERNAME
				   , 'Reprogramado - '+  ' -Para la Fecha '+ (SELECT CAST( CONVERT(DATE,CIT.FECHA) AS VARCHAR(20)) FROM CIT WHERE CONSECUTIVO = @CONSECUTIVO_2 ) + ' con el medico  ' + (SELECT MED.NOMBRE FROM CIT INNER JOIN MED ON CIT.IDMEDICO = MED.IDMEDICO WHERE CONSECUTIVO = @CONSECUTIVO_2)
				   , 'AGENDA_MED', DBO.FNK_GETDATE() , @IDAFILIADO,@CONSECUTIVO_2, 'REPROGRAMADO' 

					UPDATE CIT SET
					--SE QEUDA SIN IDAFILIADO - SE JALA LA FECHA DE LA ANTERIOR CITA Y EL IDMEDICO Y DEMAS REGISTROS
					--TIPOCITA      =       #DATOANTERIOR.TIPOCITA,
					FECHASOL		=		NULL,
					--MODALIDAD      =      #DATOANTERIOR.MODALIDAD,
					--ATENCION      =      #DATOANTERIOR.ATENCION,
					IDMEDICO      =       #DATOANTERIOR.IDMEDICO,
					IDEMEDICA    =        #DATOANTERIOR.IDEMEDICA,
					FECHA        =        DBO.FNK_FECHA_SIN_MLS(#DATOANTERIOR.FECHA),
					IDSEDE       =        #DATOANTERIOR.IDSEDE,
					CONSECUTIVOMAGP       =        #DATOANTERIOR.CONSECUTIVOMAGP
					FROM  #DATOANTERIOR 
					WHERE CIT.CONSECUTIVO = @CONSECUTIVO_2

					UPDATE CIT SET
					--IDAFILIADO SE QUEDA - SE TRAE EL MEDICO Y FECHA DEL OTRO CONSECUTIVO
					--TIPOCITA			= #DATONUEVO.TIPOCITA,
					--MODALIDAD			= #DATONUEVO.MODALIDAD,
					--ATENCION			= #DATONUEVO.ATENCION,
					IDMEDICO			= #DATONUEVO.IDMEDICO,
					FECHA				= DBO.FNK_FECHA_SIN_MLS(#DATONUEVO.FECHA),
					IDSEDE				= #DATONUEVO.IDSEDE,
					CONSECUTIVOMAGP		= #DATONUEVO.CONSECUTIVOMAGP,
					IDEMEDICA			= #DATONUEVO.IDEMEDICA,
					CONFIRMADA			= 0,
					FECHACONFIRMA		= NULL,
					USUARIO			= @USUARIO
					FROM  #DATONUEVO 
					WHERE CIT.CONSECUTIVO = @CONSECUTIVO_1

					IF @PARTICULAR = 1
					BEGIN
						DELETE FROM CIT 
						WHERE  IDMEDICO = @IDMEDICO AND CONVERT(DATE,  CIT.FECHA) =CONVERT(DATE, @FECHAINCIO)
						AND CIT.FECHA > CONVERT(DATETIME,@FECHAINCIO) AND CIT.FECHA < CONVERT(DATETIME,@FECHAFINAL) AND CIT.IDAFILIADO IS NULL
					END
					EXEC SPK_CANCELA_CITA_SMS 'REPROGRAMA',@IDAFILIADO,@CONSECUTIVO_1, @IDSERVICIO
					DROP TABLE #DATONUEVO
					DROP TABLE #DATOANTERIOR
					SELECT @ITEMS = @ITEMS + 1 
				END

		END TRY
		BEGIN CATCH
			INSERT INTO @TBLERRORES(ERROR)
			SELECT ERROR_MESSAGE()
		END CATCH

		IF EXISTS(SELECT 1 FROM @TBLERRORES)
		BEGIN
			SELECT 'KO' AS OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END
		SELECT 'OK' AS OK
		RETURN
	END
	IF @METODO = 'GEN_AUOTIRZACION_SITEDS'
	BEGIN
		SELECT @CONSECUTIVO =  CONSECUTIVO, @PROCEDENCIA = PROCEDENCIA
	   FROM OPENJSON (@PARAMETROS)
	   WITH		 (
		CONSECUTIVO			VARCHAR(20)		'$.CONSECUTIVO'
		,PROCEDENCIA		VARCHAR(20)		'$.PROCEDENCIA'
		)

		IF  EXISTS (SELECT   * FROM CITSITEDS WHERE CITSITEDS.CONSECUTIVO = @CONSECUTIVO AND COALESCE(ID_COPAGOCONSULTA_DESC,'')='')
		BEGIN
			INSERT INTO @TBLERRORES(ERROR) SELECT 'El registro no tiene Beneficio registrado'
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END

		IF @PROCEDENCIA = 'CIT' AND EXISTS (SELECT * FROM CIT WHERE CIT.CONSECUTIVO = @CONSECUTIVO AND COALESCE(NOAUTORIZACION,'')<>'')
		BEGIN
			INSERT INTO @TBLERRORES(ERROR) SELECT 'La cita ya cuenta con un numero de Autorizacion'
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END
		IF @PROCEDENCIA = 'MAD' AND EXISTS (SELECT * FROM MAD WHERE MAD.ID = @CONSECUTIVO AND COALESCE(NOAUTORIZACION,'')<>'')
		BEGIN
			INSERT INTO @TBLERRORES(ERROR) SELECT 'el registro ya cuenta con un numero de Autorizacion'
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END
	DECLARE
		 @CODIPRESS					VARCHAR(100),			
		 @rucIPRESS					VARCHAR(100),			
		 @codiIAFAS					VARCHAR(100),			
		 @codiAse 					VARCHAR(100),			
		 @codiProducto 				VARCHAR(100),			
		 @apPaternoAse 				VARCHAR(100),			
		 @apMaternoAse 				VARCHAR(100),			
		 @nombreAse 				VARCHAR(100),			
		 @fecNacimientoAse 			VARCHAR(100),			
		 @codiGeneroAse				VARCHAR(100),			
		 @codiEstadoMaritalAse		VARCHAR(100),			
		 @codiParentescoAse 		VARCHAR(100),			
		 @codiTipoDocAse 			VARCHAR(100),		
		 @nroTipoDocAse 			VARCHAR(100),			
		 @codiEstAse 				VARCHAR(100),		
		 @nroPlanAse 				VARCHAR(100),		
		 @codiTipoPlanSaludAse		VARCHAR(100),			
		 @nroTipoDocContratante		VARCHAR(100),
		 @contratoAse				VARCHAR(100),		
		 @polizaAse					VARCHAR(100),			
		 @codiTipoAfiliacionAse		VARCHAR(100),
		 @fecIniVigenciaAse 		VARCHAR(100),			
		 @fecFinVigenciaAse 		VARCHAR(100),			
		 @codiTipoDocContratante	VARCHAR(100),
		 @apPaternoContratante		VARCHAR(100),			
		 @apMaternoContratante 		VARCHAR(100),			
		 @nombreContratante 		VARCHAR(100),			
		 @codiTitular 				VARCHAR(100),			
		 @codiTipoDocTitular 		VARCHAR(100),		
		 @nroTipoDocTitular 		VARCHAR(100),			
		 @apPaternoTitular 			VARCHAR(100),			
		 @apMaternoTitular 			VARCHAR(100),			
		 @nombreTitular 			VARCHAR(100),			
		 @fecAfiliacionTitular 		VARCHAR(100),			
		 @codiTipCobertura 			VARCHAR(100),			
		 @codiSubTipCobertura		VARCHAR(100),		
		 @coCalServicio 			VARCHAR(100),			
		 @copagoFijo 				VARCHAR(100),		
		 @copagoVariable 			VARCHAR(100),
		@JSON_STR					VARCHAR(MAX)										
		BEGIN TRY
		--SELECT 'OK' AS OK
			IF @PROCEDENCIA = 'CIT'
			BEGIN
				SELECT  @CODIPRESS		= CONSSITEDS.CODIPRESS, @codiIAFAS= CONSSITEDS.codiIAFAS, @codiAse = CONSSITEDS.codiAse,@codiProducto = CONSSITEDS.codiProducto
						,@apPaternoAse= AFIapPaternoAse,@apMaternoAse= AFIapMaternoAse,@nombreAse= AFInombreAse,@fecNacimientoAse= AFIfecNacimientoAse,@codiGeneroAse= AFIcodiGeneroAse,@codiEstadoMaritalAse= AFIcodiEstadoMaritalAse
						,@codiParentescoAse= AFIcodiParentescoAse,@codiTipoDocAse= AFIcodiTipoDocAse,@nroTipoDocAse= AFInroTipoDocAse,@codiEstAse= AFIcodiEstAse,@nroPlanAse= AFInroPlanAse,@codiTipoPlanSaludAse= AFIcodiTipoPlanSaludAse
						,@nroTipoDocContratante= AFInroTipoDocContratante,@contratoAse= AFIcontratoAse,@polizaAse= AFIpolizaAse,@codiTipoAfiliacionAse= AFIcodiTipoAfiliacionAse,@fecIniVigenciaAse= AFIfecIniVigenciaAse
						,@fecFinVigenciaAse= COALESCE(AFIfecFinVigenciaAse,''),@codiTipoDocContratante= AFIcodiTipoDocContratante,@apPaternoContratante= AFIapPaternoContratante,@apMaternoContratante= AFIapMaternoContratante
						,@nombreContratante= AFInombreContratante,@codiTitular= AFIcodiTitular,@codiTipoDocTitular= AFIcodiTipoDocTitular,@nroTipoDocTitular= AFInroTipoDocTitular,@apPaternoTitular= AFIapPaternoTitular,@apMaternoTitular= AFIapMaternoTitular
						,@nombreTitular= AFInombreTitular,@fecAfiliacionTitular= AFIfecAfiliacionTitular,@codiTipCobertura= CITSITEDS.ID_TIPO_COBERTURA,@codiSubTipCobertura= CITSITEDS.ID_COPAGOCONSULTA_DESC,@coCalServicio= CONSSITEDSD.coCalServicio
						,@copagoFijo= CITSITEDS.COPAGOCONSULTA,@copagoVariable= CITSITEDS.COPAGOVARIABLECONSULTA
				FROM CIT 
				LEFT JOIN CITSITEDS ON CIT.CONSECUTIVO = CITSITEDS.CONSECUTIVO
				LEFT JOIN TER TSITEDS ON CITSITEDS.IDTERCERO_SITEDS = TSITEDS.IDTERCERO
				LEFT JOIN CONSSITEDS ON CIT.CONSECUTIVO = CONSSITEDS.CONSECUTIVO AND CONSSITEDS.PROCEDENCIA = 'CIT'
				LEFT JOIN CONSSITEDSD ON CITSITEDS.CONSECUTIVO = CONSSITEDSD.CONSECUTIVO AND CITSITEDS.ID_COPAGOCONSULTA_DESC = CONSSITEDSD.codiSubTipCobertura AND  CITSITEDS.COPAGOCONSULTA_DESC = CONSSITEDSD.descSubTipCobertura
				WHERE  CIT.CONSECUTIVO = @CONSECUTIVO
				SELECT @codiIAFAS = COALESCE(TER.IDALTERNA2,@codiIAFAS) FROM CONSSITEDS, TER WHERE CONSSITEDS.CONSECUTIVO = @CONSECUTIVO AND TER.IDTERCERO = CONSSITEDS.IDTERCERO AND CONSSITEDS.PROCEDENCIA = 'CIT'

			END
			IF @PROCEDENCIA = 'HADM'
			BEGIN
				SELECT  @CODIPRESS		= CONSSITEDS.CODIPRESS, @codiIAFAS= CONSSITEDS.codiIAFAS, @codiAse = CONSSITEDS.codiAse,@codiProducto = CONSSITEDS.codiProducto
						,@apPaternoAse= AFIapPaternoAse,@apMaternoAse= AFIapMaternoAse,@nombreAse= AFInombreAse,@fecNacimientoAse= AFIfecNacimientoAse,@codiGeneroAse= AFIcodiGeneroAse,@codiEstadoMaritalAse= AFIcodiEstadoMaritalAse
						,@codiParentescoAse= AFIcodiParentescoAse,@codiTipoDocAse= AFIcodiTipoDocAse,@nroTipoDocAse= AFInroTipoDocAse,@codiEstAse= AFIcodiEstAse,@nroPlanAse= AFInroPlanAse,@codiTipoPlanSaludAse= AFIcodiTipoPlanSaludAse
						,@nroTipoDocContratante= AFInroTipoDocContratante,@contratoAse= AFIcontratoAse,@polizaAse= AFIpolizaAse,@codiTipoAfiliacionAse= AFIcodiTipoAfiliacionAse,@fecIniVigenciaAse= AFIfecIniVigenciaAse
						,@fecFinVigenciaAse= COALESCE(AFIfecFinVigenciaAse,''),@codiTipoDocContratante= AFIcodiTipoDocContratante,@apPaternoContratante= AFIapPaternoContratante,@apMaternoContratante= AFIapMaternoContratante
						,@nombreContratante= AFInombreContratante,@codiTitular= AFIcodiTitular,@codiTipoDocTitular= AFIcodiTipoDocTitular,@nroTipoDocTitular= AFInroTipoDocTitular,@apPaternoTitular= AFIapPaternoTitular,@apMaternoTitular= AFIapMaternoTitular
						,@nombreTitular= AFInombreTitular,@fecAfiliacionTitular= AFIfecAfiliacionTitular,@codiTipCobertura= CITSITEDS.ID_TIPO_COBERTURA,@codiSubTipCobertura= CITSITEDS.ID_COPAGOCONSULTA_DESC,@coCalServicio= CONSSITEDSD.coCalServicio
						,@copagoFijo= CITSITEDS.COPAGOCONSULTA,@copagoVariable= CITSITEDS.COPAGOVARIABLECONSULTA
				FROM HADM 
				LEFT JOIN CITSITEDS ON HADM.NOADMISION = CITSITEDS.CONSECUTIVO
				LEFT JOIN TER TSITEDS ON CITSITEDS.IDTERCERO_SITEDS = TSITEDS.IDTERCERO
				LEFT JOIN CONSSITEDS ON HADM.NOADMISION = CONSSITEDS.NOADMISION AND CONSSITEDS.PROCEDENCIA = 'HADM'
				LEFT JOIN CONSSITEDSD ON CITSITEDS.CONSECUTIVO = CONSSITEDSD.CONSECUTIVO AND CITSITEDS.ID_COPAGOCONSULTA_DESC = CONSSITEDSD.codiSubTipCobertura AND  CITSITEDS.COPAGOCONSULTA_DESC = CONSSITEDSD.descSubTipCobertura
				WHERE  HADM.NOADMISION = @CONSECUTIVO
				SELECT @codiIAFAS = COALESCE(TER.IDALTERNA2,@codiIAFAS) FROM CONSSITEDS, TER WHERE CONSSITEDS.NOADMISION = @CONSECUTIVO AND TER.IDTERCERO = CONSSITEDS.IDTERCERO AND CONSSITEDS.PROCEDENCIA = 'HADM'
				--SELECT @codiIAFAS
			END
			IF @PROCEDENCIA = 'MAD'
			BEGIN
				SELECT  @CODIPRESS		= CONSSITEDS.CODIPRESS, @codiIAFAS= CONSSITEDS.codiIAFAS, @codiAse = CONSSITEDS.codiAse,@codiProducto = CONSSITEDS.codiProducto
						,@apPaternoAse= AFIapPaternoAse,@apMaternoAse= AFIapMaternoAse,@nombreAse= AFInombreAse,@fecNacimientoAse= AFIfecNacimientoAse,@codiGeneroAse= AFIcodiGeneroAse,@codiEstadoMaritalAse= AFIcodiEstadoMaritalAse
						,@codiParentescoAse= AFIcodiParentescoAse,@codiTipoDocAse= AFIcodiTipoDocAse,@nroTipoDocAse= AFInroTipoDocAse,@codiEstAse= AFIcodiEstAse,@nroPlanAse= AFInroPlanAse,@codiTipoPlanSaludAse= AFIcodiTipoPlanSaludAse
						,@nroTipoDocContratante= AFInroTipoDocContratante,@contratoAse= AFIcontratoAse,@polizaAse= AFIpolizaAse,@codiTipoAfiliacionAse= AFIcodiTipoAfiliacionAse,@fecIniVigenciaAse= AFIfecIniVigenciaAse
						,@fecFinVigenciaAse= COALESCE(AFIfecFinVigenciaAse,''),@codiTipoDocContratante= AFIcodiTipoDocContratante,@apPaternoContratante= AFIapPaternoContratante,@apMaternoContratante= AFIapMaternoContratante
						,@nombreContratante= AFInombreContratante,@codiTitular= AFIcodiTitular,@codiTipoDocTitular= AFIcodiTipoDocTitular,@nroTipoDocTitular= AFInroTipoDocTitular,@apPaternoTitular= AFIapPaternoTitular,@apMaternoTitular= AFIapMaternoTitular
						,@nombreTitular= AFInombreTitular,@fecAfiliacionTitular= AFIfecAfiliacionTitular,@codiTipCobertura= CITSITEDS.ID_TIPO_COBERTURA,@codiSubTipCobertura= CITSITEDS.ID_COPAGOCONSULTA_DESC,@coCalServicio= CONSSITEDSD.coCalServicio
						,@copagoFijo= CITSITEDS.COPAGOCONSULTA,@copagoVariable= CITSITEDS.COPAGOVARIABLECONSULTA
				FROM MAD 
				LEFT JOIN CITSITEDS ON MAD.ID = CITSITEDS.CONSECUTIVO  
				LEFT JOIN TER TSITEDS ON CITSITEDS.IDTERCERO_SITEDS = TSITEDS.IDTERCERO
				LEFT JOIN CONSSITEDS ON MAD.ID = CONSSITEDS.CONSECUTIVO AND CONSSITEDS.PROCEDENCIA = 'MAD'
				LEFT JOIN CONSSITEDSD ON CITSITEDS.CONSECUTIVO = CONSSITEDSD.CONSECUTIVO AND CITSITEDS.ID_COPAGOCONSULTA_DESC = CONSSITEDSD.codiSubTipCobertura AND CITSITEDS.ID_TIPO_COBERTURA = CONSSITEDSD.codiTipCobertura
				WHERE  MAD.ID = @CONSECUTIVO
				SELECT @codiIAFAS = COALESCE(TER.IDALTERNA2,@codiIAFAS) FROM CONSSITEDS, TER WHERE CONSSITEDS.CONSECUTIVO = @CONSECUTIVO AND TER.IDTERCERO = CONSSITEDS.IDTERCERO AND CONSSITEDS.PROCEDENCIA = 'MAD'

			END
			
			
			SELECT @JSON_STR = '
			{
				"MODELO": "SITEDS",
				"METODO": "MetodoSolAutorizacion",
				"PARAMETROS": {
					"CODIPRESS": "'+@CODIPRESS+'",							
					"codiIAFAS": "'+@codiIAFAS+'",							
					"codiAse": "'+@codiAse+'",								
					"codiProducto": "'+@codiProducto+'",					
					"apPaternoAse": "'+@apPaternoAse+'",					
					"apMaternoAse": "'+@apMaternoAse+'",					
					"nombreAse": "'+ @nombreAse+'",							
					"fecNacimientoAse": "'+@fecNacimientoAse+'",			
					"codiGeneroAse": "'+@codiGeneroAse+'",					
					"codiEstadoMaritalAse": "'+@codiEstadoMaritalAse+'",	
					"codiParentescoAse": "'+@codiParentescoAse+'",			
					"codiTipoDocAse": "'+@codiTipoDocAse+'",				
					"nroTipoDocAse": "'+@nroTipoDocAse+'",					
					"codiEstAse": "'+@codiEstAse+'",						
					"nroPlanAse": "'+@nroPlanAse+'",						
					"codiTipoPlanSaludAse": "'+@codiTipoPlanSaludAse+'",	
					"contratoAse": "'+@contratoAse+'",						
					"polizaAse": "'+@polizaAse+'",							
					"codiTipoAfiliacionAse": "'+@codiTipoAfiliacionAse+'",	
					"fecIniVigenciaAse": "'+@fecIniVigenciaAse+'",			
					"fecFinVigenciaAse": "'+@fecFinVigenciaAse+'",			
					"codiTipoDocContratante": "'+@codiTipoDocContratante+'",
					"nroTipoDocContratante": "'+@nroTipoDocContratante+'",	
					"apPaternoContratante": "'+@apPaternoContratante+'",	
					"apMaternoContratante": "'+@apMaternoContratante+'",	
					"nombreContratante": "'+@nombreContratante+'",			
					"codiTitular": "'+@codiTitular+'",						
					"codiTipoDocTitular": "'+@codiTipoDocTitular+'",		
					"nroTipoDocTitular": "'+@nroTipoDocTitular+'",			
					"apPaternoTitular": "'+@apPaternoTitular+'",			
					"apMaternoTitular": "'+@apMaternoTitular+'",			
					"nombreTitular": "'+@nombreTitular+'",					
					"fecAfiliacionTitular": "'+@fecAfiliacionTitular+'",	
					"codiTipCobertura": "'+@codiTipCobertura+'",			
					"codiSubTipCobertura": "'+@codiSubTipCobertura+'",		
					"coCalServicio": "'+@coCalServicio+'",					
					"copagoFijo": "'+@copagoFijo+'",						
					"copagoVariable": "'+@copagoVariable+'"	}}	'

		--SELECT @JSON_STR
		
		EXEC SPQ_JSON @JSON_STR

		END TRY
		BEGIN CATCH
			INSERT INTO @TBLERRORES(ERROR)
			SELECT ERROR_MESSAGE()
		END CATCH

		IF EXISTS(SELECT 1 FROM @TBLERRORES)
		BEGIN
			SELECT 'KO' AS OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END
		SELECT 'OK' AS OK
		RETURN
	END
    IF @METODO = 'ACTU_NOAUTORIZACION' 
	BEGIN
      SELECT @CONSECUTIVO = CONSECUTIVO, @NOAUTORIZACION = NOAUTORIZACION, @PROCEDENCIA = PROCEDENCIA
      FROM OPENJSON(@PARAMETROS)WITH(
	               CONSECUTIVO			VARCHAR(13)    '$.CONSECUTIVO'
		           ,NOAUTORIZACION		VARCHAR(20)    '$.NOAUTORIZACION'
		           ,PROCEDENCIA			VARCHAR(20)    '$.PROCEDENCIA'
                  )
      BEGIN TRY
         IF @PROCEDENCIA IN ('CIT','MAD') AND (SELECT  COALESCE(CONSSITEDS.AFInautorizacion, '') FROM CONSSITEDS WHERE CONSSITEDS.CONSECUTIVO = @CONSECUTIVO  ) = ''
         BEGIN
			IF @PROCEDENCIA = 'CIT'
			BEGIN
				UPDATE CIT SET NOAUTORIZACION = @NOAUTORIZACION,FECHAAUTORIZACION = DBO.FNK_GETDATE() WHERE  CONSECUTIVO = @CONSECUTIVO
			END
			IF @PROCEDENCIA = 'MAD'
			BEGIN
				UPDATE MAD SET NOAUTORIZACION = @NOAUTORIZACION WHERE  ID = @CONSECUTIVO
			END
            UPDATE CONSSITEDS SET AFInautorizacion = @NOAUTORIZACION, USUARIO_AUTORIZA = @USUARIO,FECHA_AUTORIZA = DBO.FNK_GETDATE()  WHERE  CONSECUTIVO = @CONSECUTIVO
			UPDATE CITSITEDS SET NAUTORIZACION = @NOAUTORIZACION, AUTORIZADA = '1' WHERE CONSECUTIVO = @CONSECUTIVO
         END
		 IF @PROCEDENCIA IN ('HADM') AND (SELECT  COALESCE(CONSSITEDS.AFInautorizacion, '') FROM CONSSITEDS WHERE CONSSITEDS.NOADMISION = @CONSECUTIVO  ) = ''
         BEGIN
			IF @PROCEDENCIA = 'HADM'
			BEGIN
				PRINT 'ENTRA A HADM'
				UPDATE HADM SET NOAUTORIZACION = @NOAUTORIZACION,FECHAESEINST = DBO.FNK_GETDATE(), ESEINST = @USUARIO WHERE  NOADMISION = @CONSECUTIVO
			END
            UPDATE CONSSITEDS SET AFInautorizacion = @NOAUTORIZACION, USUARIO_AUTORIZA = @USUARIO,FECHA_AUTORIZA = DBO.FNK_GETDATE()  WHERE  NOADMISION = @CONSECUTIVO
			UPDATE CITSITEDS SET NAUTORIZACION = @NOAUTORIZACION, AUTORIZADA = '1' WHERE CONSECUTIVO = @CONSECUTIVO
         END
      END TRY
      BEGIN CATCH
         INSERT INTO @TBLERRORES(ERROR) 
         SELECT ERROR_MESSAGE()
      END CATCH
      IF(SELECT COUNT(*) FROM @TBLERRORES)>0
      BEGIN
         SELECT 'KO' OK 
         SELECT ERROR FROM @TBLERRORES
         RETURN
      END
         SELECT 'OK' OK
      RETURN
   END
    
    IF @METODO = 'AUDITAR_CIT' 
	BEGIN
        SELECT @CONSECUTIVO = CONSECUTIVO, @NOAUTORIZACION = NOAUTORIZACION, @PROCEDENCIA = PROCEDENCIA, @FECHAAUTORIZACION = TRY_CAST(IIF(FECHAAUTORIZACION='',null,FECHAAUTORIZACION)  AS DATE)
                ,@FVENCEAUTORIZACION = TRY_CAST(IIF(FVENCEAUTORIZACION='',null,FVENCEAUTORIZACION) AS DATE)
        FROM OPENJSON(@PARAMETROS)
        WITH (
	        CONSECUTIVO			VARCHAR(13)    '$.CONSECUTIVO'
		    ,NOAUTORIZACION		VARCHAR(50)    '$.NOAUTORIZACION'
		    ,FECHAAUTORIZACION	VARCHAR(20)    '$.FECHAAUTORIZACION'
		    ,FVENCEAUTORIZACION	VARCHAR(20)    '$.FVENCEAUTORIZACION'
		    ,PROCEDENCIA		VARCHAR(20)    '$.PROCEDENCIA'
        )
        IF 1=2
        BEGIN

            SELECT 'KO' OK
            SELECT @FVENCEAUTORIZACION ERROR
            RETURN
        END
        BEGIN TRY
            IF NOT EXISTS (SELECT 1 FROM CIT WHERE CONSECUTIVO=@CONSECUTIVO)
            BEGIN            
                INSERT INTO @TBLERRORES(ERROR) 
                SELECT 'Cita no encontrada por favor validar'
                RETURN
            END
            SELECT @ANT_NOAUT=NOAUTORIZACION, @ANT_FAUT=FECHAAUTORIZACION, @ANT_FVENCEAUT=FVENCEAUTORIZACION
                ,@IDTERCERO=IDTERCEROCA, @IDPLAN=IDPLAN
            FROM CIT WHERE CONSECUTIVO=@CONSECUTIVO
            
            IF DBO.FNK_VALORVARIABLE('SOLOUN_CODAUTORIZA')='SI' OR 1=1
            BEGIN
                IF EXISTS (SELECT 1 FROM CIT WHERE IDAFILIADO IS NOT NULL AND CONSECUTIVO<>@CONSECUTIVO AND IDTERCEROCA=@IDTERCERO 
                    AND NOAUTORIZACION=@NOAUTORIZACION AND (CUMPLIDA=1 OR FECHA>GETDATE()))
                BEGIN
                    SELECT 'KO' OK
                    SELECT ERROR = 'Nro de autorizacion ya existente en la siguiente Cita: ' union all
                    SELECT 'Paciente: '+coalesce(AFI.NOMBREAFI,'')+', Fecha: '+CONVERT(VARCHAR,CIT.FECHA,103)+', Medico: '+COALESCE(MED.NOMBRE,'')
                    FROM CIT
                    INNER JOIN AFI ON AFI.IDAFILIADO=CIT.IDAFILIADO
                    LEFT JOIN MED ON MED.IDMEDICO=CIT.IDMEDICO
                    WHERE CIT.IDAFILIADO IS NOT NULL AND CIT.CONSECUTIVO<>@CONSECUTIVO AND CIT.IDTERCEROCA=@IDTERCERO 
                    AND CIT.NOAUTORIZACION=@NOAUTORIZACION AND (CIT.CUMPLIDA=1 OR CIT.FECHA>GETDATE())
                    RETURN
                END
            END
            IF COALESCE(@ANT_NOAUT,'')<>COALESCE(@NOAUTORIZACION,'') OR @ANT_FAUT<>@FECHAAUTORIZACION OR @FVENCEAUTORIZACION<>@ANT_FVENCEAUT
            BEGIN
                INSERT INTO CITAUD (CONSECUTIVO ,NOAUT_ANT ,NOAUT_NUE ,FECHAAUT_ANT ,FECHAAUT_NUE ,FVENCEAUT_ANT ,FVENCEAUT_NUE ,FECHAAUDITORIA ,USUARIOAUDITA ) 
                SELECT @CONSECUTIVO, @ANT_NOAUT, @NOAUTORIZACION, @ANT_FAUT, @FECHAAUTORIZACION, @ANT_FVENCEAUT, @FVENCEAUTORIZACION, GETDATE(), @USUARIO
            END
            UPDATE CIT SET NOAUTORIZACION=@NOAUTORIZACION, FECHAAUTORIZACION=@FECHAAUTORIZACION, FVENCEAUTORIZACION=@FVENCEAUTORIZACION, AUTAUDITADO=1-COALESCE(AUTAUDITADO,0) WHERE CONSECUTIVO=@CONSECUTIVO
        END TRY
        BEGIN CATCH
            INSERT INTO @TBLERRORES(ERROR) 
            SELECT ERROR_MESSAGE()
        END CATCH
        IF(SELECT COUNT(1) FROM @TBLERRORES)>0
        BEGIN
            SELECT 'KO' OK 
            SELECT ERROR FROM @TBLERRORES
            RETURN
        END
            SELECT 'OK' OK
        RETURN
    END
    
	IF @METODO = 'ENVIAR_CONFIRMACION_CITAS'
	BEGIN
		SELECT @PARAMETROS = DATOS
        FROM OPENJSON(@PARAMETROS)
        WITH (
            DATOS NVARCHAR(MAX) AS JSON
        )

		SELECT CONSECUTIVO 
		INTO #CIT_CONF
		FROM OPENJSON(@PARAMETROS)
		WITH (
			CONSECUTIVO NVARCHAR(20) '$.CONSECUTIVO'
		)

		INSERT INTO NOTIFICACIONES_SMS (TIPOCNS, CONSECUTIVO, DESTINO, FECHA_REGISTRO, FECHA_PROGRAMADA, ESTADO, CANAL, PROCEDENCIA, MENSAJE)
		SELECT 'CIT', A.CONSECUTIVO, DBO.FNK_PrimerMovilTercero(CIT.IDAFILIADO),GETDATE(), GETDATE(),0,'WHATSAPP','CONFIRMACION',''
		FROM #CIT_CONF A
			INNER JOIN CIT ON CIT.CONSECUTIVO=A.CONSECUTIVO
			INNER JOIN AFI ON AFI.IDAFILIADO=CIT.IDAFILIADO

		SELECT 'OK' OK
		RETURN
	END
    
    IF @METODO = 'ENVIARAPROGRAMA'
	BEGIN
        
		SELECT @WHERE = CONDICION, @INNER = INNER_J, @LEFT=LEFT_J
        FROM OPENJSON(@PARAMETROS)
        WITH (
            INNER_J      VARCHAR(1000)  '$.INNER'
            ,LEFT_J      VARCHAR(1000)  '$.LEFT'
            ,CONDICION   VARCHAR(1000)  '$.WHERE'
        )
        
        SELECT @CMD='
		    INSERT INTO AUTPG (ANOMES ,IDAFILIADO ,IDTERCEROCA ,IDPLAN ,IDPESPECIAL , UNIDADATENCION, ESTADO, USUARIOGENERA, FECHAGENERA, IDDX, IDSEDE) 
            SELECT @ANOMES, CIT.IDAFILIADO, CIT.IDTERCEROCA, CIT.IDPLAN, CIT.IDPESPECIAL, MPE.IDROL, ''Generado'', '''+@USUARIO+''', GETDATE(), AFI.DXPE, CIT.IDSEDE
            FROM CIT
                INNER JOIN + '+@INNER+'
                INNER JOIN AFIPE ON AFIPE.IDAFILIADO=CIT.IDAFILIADO AND AFIPE.IDPESPECIAL=CIT.IDPESPECIAL AND AFIPE.ESTADO=''Activo''
                INNER JOIN MPE ON MPE.IDPESPECIAL=AFIPE.IDPESPECIAL
                LEFT JOIN + '+@LEFT+'
            WHERE '+@WHERE+' AND AFI.ESTADO=''Activo'' AND COALESCE(CIT.FACTURADA,0)=0 AND COALESCE(CIT.ENFACT,0)=0
                    AND NOT EXISTS (SELECT 1 FROM  AUTPG D WHERE D.ANOMES=@ANOMES AND A.IDAFILIADO=D.IDAFILIADO AND D.UNIDADATENCION=MPE.IDROL)
        '
        PRINT @CMD
		RETURN
	END
    
	IF @METODO = 'ENVIARA_FACT'
	BEGIN        
		SELECT @CONSECUTIVO = CONSECUTIVO
        FROM OPENJSON(@PARAMETROS)
        WITH (CONSECUTIVO      VARCHAR(20)  '$.ID')
        IF NOT EXISTS (SELECT 1 FROM CIT WHERE CONSECUTIVO=@CONSECUTIVO AND CIT.AUTAUDITADO=1 AND CIT.CUMPLIDA=1 AND COALESCE(CIT.NOAUTORIZACION,'')<>'')
        BEGIN
            SELECT 'KO' OK
            SELECT ERROR = 'Error al validar la autorizacion, no puede enviar a facturacion citas no atendidas, citas sin auditoria o citas sin autorizacion'
            RETURN
        END
        UPDATE CIT SET ENFACT=1-COALESCE(ENFACT,0), USUARIO_ENFACT=@USUARIO, FECHA_ENFACT=GETDATE() WHERE CONSECUTIVO=@CONSECUTIVO
        SELECT 'OK' OK
		RETURN
	END
    
	IF @METODO = 'GETCIT'
	BEGIN
        SELECT * 
		INTO #GETCIT
		FROM OPENJSON(@JSON)
		WITH (
			MODELO      VARCHAR(100)    '$.MODELO',
			METODO      VARCHAR(100)    '$.METODO',
			PARAMETROS  NVARCHAR(MAX)   AS JSON
		)

		SELECT @MODELO = MODELO, 
			   @METODO = METODO, 
			   @PARAMETROS = PARAMETROS
		FROM #JSON
			SELECT 'OK' OK

			SELECT @WHERE = JSON_VALUE(@PARAMETROS, '$.WHERE')


			-- Para depuración
			PRINT '@WHERE >'  + COALESCE(@WHERE,' SIN @WHERE')

			
			SELECT @CMD = '
				SELECT 
					CIT.CONSECUTIVO, 
					CIT.FECHA,
					TER.RAZONSOCIAL,
					AFI.TIPO_DOC,
					AFI.DOCIDAFILIADO,
					COALESCE(ROL.DESCRIPCION, '''') AS ATENCION,
					MPE.IDROL,
					AFI.NOMBREAFI,
					MED.IDMEDICO,
					MED.NOMBRE,
					MES.DESCRIPCION,
					SER.DESCSERVICIO,
					CIT.ESTADO,
					COALESCE(TGEN.DESCRIPCION, '''') AS TIPO_CITA,
					SED.DESCRIPCION SED_DESCRIPCION, 
					CIT.IDSEDE
				FROM CIT
				INNER JOIN AFI ON CIT.IDAFILIADO = AFI.IDAFILIADO
				INNER JOIN MED ON CIT.IDMEDICO = MED.IDMEDICO
				INNER JOIN SED ON CIT.IDSEDE = SED.IDSEDE
				LEFT JOIN TER ON TER.IDTERCERO = CIT.IDTERCEROCA
				LEFT JOIN SER ON CIT.IDSERVICIO = SER.IDSERVICIO
				LEFT JOIN MES ON CIT.IDEMEDICA = MES.IDEMEDICA
				LEFT JOIN MPE ON CIT.IDPESPECIAL = MPE.IDPESPECIAL
				LEFT JOIN ROL ON MPE.IDROL = ROL.IDROL
				LEFT JOIN TGEN ON TGEN.TABLA = ''CITAS'' AND TGEN.CAMPO = ''TIPOCITA'' AND TGEN.CODIGO = CIT.TIPOCITA
				WHERE '+@WHERE

				PRINT @CMD
				EXEC (@CMD)
        RETURN
    END


    /* OMAR  PARA PASAR A AUTPG*/
    IF @METODO = 'EXPORTAR_EXCEL_AUT'
    BEGIN
        SELECT @TABLA = JSON_VALUE(@PARAMETROS,'$.TABLA')
        SELECT @INNER = JSON_VALUE(@PARAMETROS,'$.INNER')
        SELECT @LEFT = JSON_VALUE(@PARAMETROS,'$.LEFT')
        SELECT @WHERE = JSON_VALUE(@PARAMETROS,'$.WHERE')        
        SELECT @PERIODO = JSON_VALUE(@PARAMETROS,'$.PERIODO')
        SELECT @IDTERCERO = JSON_VALUE(@PARAMETROS,'$.IDTERCERO')
        SELECT @UNIDAD_ATENCION = JSON_VALUE(@PARAMETROS,'$.UNIDAD_ATENCION')
        SELECT @ANOMES = ANOMES FROM PERIODOS WHERE ID=@PERIODO
        SELECT @COLUMNAS = JSON_VALUE(@PARAMETROS,'$.COLUMNAS')

        IF @TABLA='AUTPG'
        BEGIN
            SET @CMD='UPDATE AUTPG SET ESTADO=''Exportado'' FROM AUTPG '

            IF COALESCE(@INNER,'')<>''
                SET @CMD+=' INNER JOIN '+@INNER
            
            IF COALESCE(@LEFT,'')<>''
                SET @CMD+=' LEFT JOIN '+@LEFT

            IF COALESCE(@WHERE,'')<>''
                SET @CMD+=' WHERE '+@WHERE+' AND AUTPG.ESTADO=''Generado'''

            BEGIN TRY
                EXEC (@CMD)
            END TRY
            BEGIN CATCH
                SELECT 'KO' OK
                SELECT ERROR = 'Error al exportar los datos'
                RETURN
            END CATCH
            SELECT 'OK' OK
            SELECT AFI.TIPO_DOC, AFI.DOCIDAFILIADO, COALESCE(AFI.PAPELLIDO,'') PAPELLIDO, COALESCE(AFI.SAPELLIDO,'') SAPELLIDO, COALESCE(AFI.PNOMBRE,'') PNOMBRE
            , COALESCE(AFI.SNOMBRE,'') SNOMBRE, COALESCE(TGEN.DESCRIPCION,'') REGIMEN, COALESCE(AFI.CELULAR,'') CELULAR, COALESCE(AFI.TELEFONORES,'') TELEFONO, COALESCE(AFI.EMAIL,'') EMAIL, COALESCE(AFI.SEXO,'') SEXO
            , CONVERT(VARCHAR(20),AFIPE.FECHADX, 103) AS FECHA_INCLUSION, COALESCE(AFIPE.DXPE,'') AS IDDX, COALESCE(MDX.DESCRIPCION,'') AS DIAGNOSTICO
            , COALESCE(SED.DESCRIPCION,'') DESCSEDE, ROL.DESCRIPCION AS UNIDADATENCION, MPE.DESCESPECIAL AS PROGRAMA, AUTPG.ESTADO, '' Fecha_ultima_Atencion, '' Fecha_ultima_Actividad, '' Fecha_proxima_Medica_Presencial, '' Fecha_proxima_actividad, '' Entrega_medicamentos
            , COALESCE(ESP.IDSERVICIO,'') IDSERVICIO, COALESCE(SER.DESCSERVICIO,'') DESCSERVICIO, COALESCE(ESP.VALOR,0) VALOR
            FROM AUTPG
                INNER JOIN AFI ON AFI.IDAFILIADO=AUTPG.IDAFILIADO
                INNER JOIN AFIPE ON AFIPE.IDAFILIADO=AUTPG.IDAFILIADO AND AFIPE.IDPESPECIAL=AUTPG.IDPESPECIAL
                INNER JOIN MPE ON MPE.IDPESPECIAL=AFIPE.IDPESPECIAL
                LEFT JOIN PLN ON PLN.IDPLAN=AUTPG.IDPLAN AND PLN.ESPAQUETE=1
                LEFT JOIN ESP ON ESP.IDPLAN=AUTPG.IDPLAN AND ESP.IDPROVEEDOR=AUTPG.IDTERCEROCA AND PLN.ESPAQUETE=1 AND ESP.IDSERVICIO=PLN.IDSERVICIO
                LEFT JOIN SER ON SER.IDSERVICIO=PLN.IDSERVICIO
                LEFT JOIN TGEN ON TGEN.TABLA='AFI' AND TGEN.CAMPO='TIPO_USUARIO' AND TGEN.CODIGO=AFI.TIPOUSUARIO
                LEFT JOIN SED ON SED.IDSEDE=AUTPG.IDSEDE
                LEFT JOIN ROL ON ROL.IDROL=AUTPG.UNIDADATENCION
                LEFT JOIN MDX ON MDX.IDDX=AFIPE.DXPE
            WHERE AUTPG.ANOMES=@ANOMES AND AUTPG.IDTERCEROCA=@IDTERCERO AND AUTPG.UNIDADATENCION=@UNIDAD_ATENCION
            RETURN
        END
        SELECT @CMD = 'SELECT '+COALESCE(@COLUMNAS,'')+' FROM '+@TABLA
        IF COALESCE(@INNER,'')<>''
            SET @CMD+=' INNER JOIN '+@INNER
            
        IF COALESCE(@LEFT,'')<>''
            SET @CMD+=' LEFT JOIN '+@LEFT

        IF COALESCE(@WHERE,'')<>''
            SET @CMD+=' WHERE '+@WHERE

        SELECT 'OK' OK
        PRINT @CMD
        EXEC (@CMD)
        RETURN
    END
    
    IF @METODO = 'HELPER_AUTPG' --1
    BEGIN
        SELECT 'OK' OK
        SELECT ID AS value, DATENAME(MONTH,CONVERT(VARCHAR,ANIO)+RIGHT('0'+CONVERT(VARCHAR,MES),2)+'01')+' '+CONVERT(VARCHAR,ANIO) label
            , ANIO, MES, ANOMES
        FROM PERIODOS

        SELECT CODIGO, DESCRIPCION
        FROM TGEN
        WHERE TABLA='AFI' AND CAMPO='TIPO_USUARIO'

        SELECT TER.NIT AS CODIGO, A.RAZONSOCIAL  AS DESCRIPCION, TER.IDTERCERO
        FROM VWK_TEXCA A
        INNER JOIN TER ON TER.IDTERCERO=A.IDTERCERO
        WHERE A.ESTADO='Activo' AND A.IDCATEGORIA='CON'
        
        SELECT IDROL AS CODIGO, DESCRIPCION
        FROM ROL
        WHERE EXISTS (SELECT 1 FROM MPE WHERE MPE.IDROL=ROL.IDROL)
        
        SELECT IDPESPECIAL AS CODIGO, DESCESPECIAL AS DESCRIPCION
        FROM MPE A
        WHERE A.ESTADO='Activo'

        SELECT IDSEDE AS CODIGO, DESCRIPCION
        FROM SED A

        SELECT IDCAUSAL AS CODIGO, DESCCAUSAL AS DESCRIPCION
        FROM CAU
        WHERE IDCLASE='CAU_NOAUT' AND ACTIVO=1

        SELECT PLN.IDPLAN AS CODIGO, PLN.DESCPLAN AS DESCRIPCION, PPT.IDTERCERO
        FROM PPT INNER JOIN PLN ON PLN.IDPLAN=PPT.IDPLAN

        
        RETURN
    END
    
    IF @METODO = 'VALIDAR_PERIODO_AUTPG' --2
    BEGIN
        SELECT @PERIODO = JSON_VALUE(@PARAMETROS,'$.PERIODO')
        SELECT @IDTERCERO = JSON_VALUE(@PARAMETROS,'$.IDTERCERO')
        SELECT @UNIDAD_ATENCION = JSON_VALUE(@PARAMETROS,'$.UNIDAD_ATENCION')
        SELECT @ANOMES = ANOMES FROM PERIODOS WHERE ID=@PERIODO

        IF EXISTS (SELECT 1 FROM AUTPG WHERE ANOMES=@ANOMES AND IDTERCEROCA=@IDTERCERO AND UNIDADATENCION=@UNIDAD_ATENCION )
            SELECT 'OK' OK, EXISTE = CAST(1 AS BIT)
        ELSE
            SELECT 'OK' OK, EXISTE = CAST(0 AS BIT)
    END

    IF @METODO = 'GENERAR_AUTPG' --3
    BEGIN
        SELECT @PERIODO = JSON_VALUE(@PARAMETROS,'$.PERIODO')
        SELECT @IDTERCERO = JSON_VALUE(@PARAMETROS,'$.IDTERCERO')
        SELECT @UNIDAD_ATENCION = JSON_VALUE(@PARAMETROS,'$.UNIDAD_ATENCION')
        SELECT @ANOMES = ANOMES FROM PERIODOS WHERE ID=@PERIODO
        IF NOT EXISTS(SELECT 1 FROM PERIODOS WHERE ID=@PERIODO)
        BEGIN
            SELECT 'KO' OK
            SELECT 'No existe periodo, por favor validar' ERROR
            RETURN
        END
        BEGIN TRY
            INSERT INTO AUTPG (ANOMES ,IDAFILIADO ,IDTERCEROCA ,IDPLAN ,IDPESPECIAL , UNIDADATENCION, ESTADO, USUARIOGENERA, FECHAGENERA, IDDX, IDSEDE) 
            SELECT @ANOMES, A.IDAFILIADO, B.IDADMINISTRADORA, B.IDPLAN, A.IDPESPECIAL, C.IDROL, 'Generado', @USUARIO, GETDATE(), A.DXPE, B.IDSEDE
            FROM AFIPE A
                INNER JOIN AFI B ON B.IDAFILIADO=A.IDAFILIADO
                INNER JOIN MPE C ON C.IDPESPECIAL=A.IDPESPECIAL
                INNER JOIN ROL R ON R.IDROL=C.IDROL
            WHERE B.IDADMINISTRADORA=@IDTERCERO AND C.IDROL=@UNIDAD_ATENCION AND A.ESTADO='Activo'
                    AND NOT EXISTS (SELECT 1 FROM  AUTPG D WHERE D.ANOMES=@ANOMES AND A.IDAFILIADO=D.IDAFILIADO AND D.UNIDADATENCION=C.IDROL)
        END TRY
        BEGIN CATCH
            SELECT 'KO' OK
            SELECT ERROR='Error al generar el periodo para esta entidad y programa'
            RETURN
        END CATCH
        SELECT 'OK' OK
        RETURN
    END
    
   IF @METODO = 'EXPORTAR_FORMATO_AUTPG' --4
   BEGIN
        SELECT @IDTERCERO = IDTERCERO, @ANOMES = ANOMES, @UNIDAD_ATENCION = UNIDAD_ATENCION
        FROM OPENJSON (@PARAMETROS)
        WITH(
            ANOMES              VARCHAR(6)   '$.ANOMES'
	        ,IDTERCERO          VARCHAR(20)  '$.IDTERCERO'
            ,UNIDAD_ATENCION    VARCHAR(6)   '$.UNIDAD_ATENCION'
        )
        
        SELECT 'OK' OK
        SELECT AUTPG.ANOMES AS PERIODO, AFI.TIPO_DOC, AFI.DOCIDAFILIADO, TGEN.DESCRIPCION AS REGIMEN, SED.DESCRIPCION AS SEDE, PLN.DESCPLAN AS CONTRATO, COALESCE(AUTPG.SOLICITADO,'No') AS SOLICITADO, COALESCE(AUTPG.NOAUTORIZACION,'') AUTORIZACION
            , COALESCE(AUTPG.ESTADO,'') ESTADO_AUTORIZACION, COALESCE(AUTPG.MOTIVORECHAZO,'') MOTIVO_NOAUTORIZADO, COALESCE(AUTPG.OBSRECHAZO,'') OBSERVACION
            , COALESCE(ESP.IDSERVICIO,'') IDSERVICIO, COALESCE(SER.DESCSERVICIO,'') DESCSERVICIO, COALESCE(ESP.VALOR,0) VALOR
        FROM AUTPG
            INNER JOIN AFI ON AFI.IDAFILIADO=AUTPG.IDAFILIADO
            LEFT JOIN PLN ON PLN.IDPLAN=AUTPG.IDPLAN
            LEFT JOIN ESP ON ESP.IDPLAN=AUTPG.IDPLAN AND ESP.IDPROVEEDOR=AUTPG.IDTERCEROCA AND PLN.ESPAQUETE=1 AND ESP.IDSERVICIO=PLN.IDSERVICIO
            LEFT JOIN SER ON SER.IDSERVICIO=PLN.IDSERVICIO
            LEFT JOIN TGEN ON TGEN.TABLA='AFI' AND TGEN.CAMPO='TIPO_USUARIO' AND TGEN.CODIGO=AFI.TIPOUSUARIO
            LEFT JOIN SED ON SED.IDSEDE=AUTPG.IDSEDE
        WHERE AUTPG.ANOMES = @ANOMES AND AUTPG.IDTERCEROCA = @IDTERCERO AND AUTPG.UNIDADATENCION = @UNIDAD_ATENCION
        RETURN
    END

    IF @METODO = 'LEER_DATOS_AUTPG' --5
    BEGIN

        SELECT @AUTORIZACIONES = DATOS
        FROM OPENJSON(@PARAMETROS)
        WITH (
            DATOS NVARCHAR(MAX) AS JSON
        )

        SELECT PERIODO, TIPO_DOC, DOCIDAFILIADO,REGIMEN, SEDE, CONTRATO, SOLICITADO,AUTORIZACION,ESTADO_AUTORIZACION, MOTIVO_NOAUTORIZADO,OBSERVACION
        INTO #EXCEL
        FROM OPENJSON(@AUTORIZACIONES)
        WITH (
            PERIODO             VARCHAR(4)      '$.PERIODO'
            ,TIPO_DOC           VARCHAR(3)      '$.TIPO_DOC'
            ,DOCIDAFILIADO      VARCHAR(20)     '$.DOCIDAFILIADO'
            ,REGIMEN            VARCHAR(100)    '$.REGIMEN'
            ,SEDE               VARCHAR(100)    '$.SEDE'
            ,CONTRATO           VARCHAR(256)    '$.CONTRATO'
            ,SOLICITADO         VARCHAR(3)      '$.SOLICITADO'
            ,AUTORIZACION       VARCHAR(20)     '$.AUTORIZACION'
            ,ESTADO_AUTORIZACION VARCHAR(256)    '$.ESTADO_AUTORIZACION'
            ,MOTIVO_NOAUTORIZADO VARCHAR(256)    '$.MOTIVO_NOAUTORIZADO'
            ,OBSERVACION        VARCHAR(512)    '$.OBSERVACION'
        )

        SELECT 'OK' OK
        SELECT A.PERIODO, A.TIPO_DOC, A.DOCIDAFILIADO, AFI.NOMBREAFI, A.REGIMEN, S.DESCRIPCION AS SEDE, A.CONTRATO, A.SOLICITADO, A.AUTORIZACION, A.ESTADO_AUTORIZACION, A.MOTIVO_NOAUTORIZADO, A.OBSERVACION
        FROM #EXCEL A
        INNER JOIN AFI ON AFI.DOCIDAFILIADO=A.DOCIDAFILIADO AND A.TIPO_DOC=AFI.TIPO_DOC
        LEFT JOIN TGEN T ON T.TABLA='AFI' AND T.CAMPO='TIPO_USUARIO' AND T.DESCRIPCION=A.REGIMEN
        LEFT JOIN SED S ON S.DESCRIPCION=A.SEDE
        RETURN
    END
    
    IF @METODO = 'IMPORTAR_AUTORIZACIONES_AUTPG' --6
    BEGIN
        SELECT @PERIODO = JSON_VALUE(@PARAMETROS,'$.PERIODO')
        SELECT @IDTERCERO = JSON_VALUE(@PARAMETROS,'$.IDTERCERO')
        SELECT @UNIDAD_ATENCION = JSON_VALUE(@PARAMETROS,'$.UNIDAD_ATENCION')        
        
        SELECT @AUTORIZACIONES = DATOS
        FROM OPENJSON(@PARAMETROS)
        WITH (
            DATOS NVARCHAR(MAX) AS JSON
        )

        SELECT TIPO_DOC, DOCIDAFILIADO, NOMBREAFI, REGIMEN, SEDE, CONTRATO, SOLICITADO, AUTORIZACION, ESTADO_AUTORIZACION, MOTIVO_NOAUTORIZADO, OBSERVACION
        INTO #AUTPG
        FROM OPENJSON(@AUTORIZACIONES)
        WITH (
            TIPO_DOC            VARCHAR(3)      '$.TIPO_DOC'
            ,DOCIDAFILIADO      VARCHAR(20)     '$.DOCIDAFILIADO'
            ,NOMBREAFI          VARCHAR(50)     '$.NOMBREAFI'
            ,REGIMEN            VARCHAR(30)     '$.REGIMEN'
            ,SEDE               VARCHAR(60)     '$.SEDE'
            ,CONTRATO           VARCHAR(256)    '$.CONTRATO'
            ,SOLICITADO         VARCHAR(3)      '$.SOLICITADO'
            ,AUTORIZACION       VARCHAR(45)     '$.AUTORIZACION'
            ,ESTADO_AUTORIZACION VARCHAR(20)    '$.ESTADO_AUTORIZACION'
            ,MOTIVO_NOAUTORIZADO VARCHAR(256)   '$.MOTIVO_NOAUTORIZADO'
            ,OBSERVACION        VARCHAR(512)    '$.OBSERVACION'
        )

        IF NOT EXISTS(SELECT 1 FROM PERIODOS WHERE ID=@PERIODO)
        BEGIN
            SELECT 'KO' OK
            SELECT 'No existe periodo, por favor validar' ERROR
            RETURN
        END
        SELECT @ANOMES=ANOMES FROM PERIODOS WHERE ID=@PERIODO
        
        INSERT INTO @TABLA_ERROR (ERROR, DOCIDAFILIADO, NOMBREAFI, NOAUTORIZACION)
        SELECT 'Paciente no existe en el registro general', A.DOCIDAFILIADO, A.NOMBREAFI, A.AUTORIZACION
        FROM #AUTPG A
        WHERE NOT EXISTS (SELECT 1 FROM AFI WHERE AFI.DOCIDAFILIADO=COALESCE(A.DOCIDAFILIADO,''))
        
        INSERT INTO @TABLA_ERROR (ERROR, DOCIDAFILIADO, NOMBREAFI, NOAUTORIZACION)
        SELECT 'Numero de autorizacion vacia', A.DOCIDAFILIADO, A.NOMBREAFI, A.AUTORIZACION
        FROM #AUTPG A
        WHERE COALESCE(TRIM(A.AUTORIZACION),'')='' AND A.ESTADO_AUTORIZACION='Autorizado'
        
        INSERT INTO @TABLA_ERROR (ERROR, DOCIDAFILIADO, NOMBREAFI, NOAUTORIZACION)
        SELECT 'Paciente no se encuentra pendiente de autorizacion este mes, en esta unidad de atencion', A.DOCIDAFILIADO, A.NOMBREAFI, A.AUTORIZACION
        FROM #AUTPG A
        WHERE NOT EXISTS (SELECT 1 FROM AUTPG INNER JOIN AFI ON AFI.IDAFILIADO=AUTPG.IDAFILIADO WHERE ANOMES=@ANOMES AND AFI.DOCIDAFILIADO=A.DOCIDAFILIADO AND AUTPG.UNIDADATENCION=@UNIDAD_ATENCION 
            --AND AUTPG.ESTADO IN ('Generado','Exportado') 
            )

        INSERT INTO @TABLA_ERROR (ERROR, DOCIDAFILIADO, NOMBREAFI, NOAUTORIZACION)
        SELECT 'Paciente ya existe en Facturacion', A.DOCIDAFILIADO, A.NOMBREAFI, A.AUTORIZACION
        FROM #AUTPG A
        WHERE EXISTS (SELECT 1 FROM AUTPG INNER JOIN AFI ON AFI.IDAFILIADO=AUTPG.IDAFILIADO WHERE ANOMES=@ANOMES AND AFI.DOCIDAFILIADO=A.DOCIDAFILIADO AND AUTPG.UNIDADATENCION=@UNIDAD_ATENCION AND COALESCE(AUTPG.ENFACT,0)<>0)

        INSERT INTO @TABLA_ERROR (ERROR, DOCIDAFILIADO, NOMBREAFI, NOAUTORIZACION)
        SELECT 'Autorizacion ya existente en la base de datos, para este periodo', A.DOCIDAFILIADO, A.NOMBREAFI, A.AUTORIZACION
        FROM #AUTPG A
        WHERE EXISTS (SELECT 1 FROM AUTPG WHERE ANOMES=@ANOMES AND NOAUTORIZACION=A.AUTORIZACION AND AUTPG.IDTERCEROCA=@IDTERCERO)

        DELETE #AUTPG 
        FROM #AUTPG A 
        WHERE EXISTS (SELECT 1 FROM @TABLA_ERROR B WHERE B.DOCIDAFILIADO=A.DOCIDAFILIADO)
            
        BEGIN TRY
            UPDATE AUTPG  SET NOAUTORIZACION=B.AUTORIZACION, ESTADO=dbo.FNK_CAPITALIZAR_TEXTO(B.ESTADO_AUTORIZACION), MOTIVORECHAZO=CAU.IDCAUSAL, OBSRECHAZO=B.OBSERVACION, IDSEDE=S.IDSEDE, SOLICITADO=B.SOLICITADO
                ,IDPLAN=COALESCE(PLN.IDPLAN, A.IDPLAN)
            FROM AUTPG A
                INNER JOIN AFI ON AFI.IDAFILIADO=A.IDAFILIADO
                INNER JOIN #AUTPG B ON B.DOCIDAFILIADO=AFI.DOCIDAFILIADO AND AFI.TIPO_DOC=B.TIPO_DOC
                LEFT JOIN SED S ON S.DESCRIPCION=B.SEDE
                LEFT JOIN CAU ON CAU.DESCCAUSAL=B.MOTIVO_NOAUTORIZADO
                LEFT JOIN PLN ON PLN.DESCPLAN=B.CONTRATO
            WHERE ANOMES=@ANOMES AND A.ESTADO IN ('Generado','Exportado','Rechazado','Rechazado Facturacion') AND COALESCE(A.ENFACT,0)=0 AND COALESCE(FACTURADO,0)=0

            UPDATE AFI  SET TIPOUSUARIO=T.CODIGO
            FROM AUTPG A
                INNER JOIN AFI ON AFI.IDAFILIADO=A.IDAFILIADO 
                INNER JOIN #AUTPG B ON B.DOCIDAFILIADO=AFI.DOCIDAFILIADO AND AFI.TIPO_DOC=B.TIPO_DOC
                LEFT JOIN TGEN T ON T.TABLA='AFI' AND T.CAMPO='TIPO_USUARIO' AND T.DESCRIPCION=B.REGIMEN
            WHERE ANOMES=@ANOMES AND A.ESTADO IN ('Generado','Exportado','Rechazado','Rechazado Facturacion') AND COALESCE(A.ENFACT,0)=0  AND COALESCE(FACTURADO,0)=0
        END TRY
        BEGIN CATCH
            SELECT 'KO' OK
            SELECT ERROR='Error al generar el periodo para esta entidad y programa'
            SELECT * FROM @TABLA_ERROR
            RETURN
        END CATCH
        IF (SELECT COUNT(1) FROM @TABLA_ERROR)>0
            SELECT 'KO' OK
        ELSE
            SELECT 'OK' OK
            
        SELECT ERROR = 'Errores al Importar Autorizaciones' /*DEBO MANDAR LOS ERRORES EN EL RECORD 2*/
        SELECT Error, DocIdAfiliado, Nombreafi AS NombreAfiliado, Noautorizacion
        FROM @TABLA_ERROR
        RETURN
    END

	IF @METODO = 'ENVIAR_TODO_AFACTURACION' --7
	BEGIN
        
		SELECT @WHERE = CONDICION, @INNER = INNER_J, @LEFT=LEFT_J
        FROM OPENJSON(@PARAMETROS)
        WITH (
            INNER_J      VARCHAR(1000)  '$.INNER'
            ,LEFT_J      VARCHAR(1000)  '$.LEFT'
            ,CONDICION   VARCHAR(1000)  '$.WHERE'
        )

        SELECT @CMD='
		    UPDATE CIT SET ENFACT=1, USUARIO_ENFACT='''+@USUARIO+''', FECHA_ENFACT=GETDATE()
            FROM CIT
                INNER JOIN '+@INNER+'
                LEFT JOIN '+@LEFT+'
            WHERE '+@WHERE+' AND CIT.ESTADO=''Activo'' AND COALESCE(CIT.FACTURADA,0)=0 AND COALESCE(CIT.ENFACT,0)=0 AND CIT.AUTAUDITADO=1 AND CIT.CUMPLIDA=1 AND COALESCE(CIT.NOAUTORIZACION,'''')<>''''
        '
        PRINT @CMD
        BEGIN TRY
            EXEC (@CMD)
		END TRY
        BEGIN CATCH
            SELECT 'KO' OK
            SELECT ERROR = 'Error al enviar a facturacion: '+ERROR_MESSAGE()
            RETURN
        END CATCH
        SELECT 'OK' OK
        RETURN
	END

    IF @METODO = 'EXPORTAR_EXCEL_CITAS_PROGRAMA' --8
    BEGIN
        SELECT @ANOMES = JSON_VALUE(@PARAMETROS,'$.PERIODO')
        SELECT @IDTERCERO = JSON_VALUE(@PARAMETROS,'$.IDTERCERO')
        SELECT @UNIDAD_ATENCION = JSON_VALUE(@PARAMETROS,'$.UNIDAD_ATENCION')        
        IF COALESCE(@ANOMES,'')='' OR COALESCE(@IDTERCERO,'')='' OR COALESCE(@UNIDAD_ATENCION,'')=''
        BEGIN
            SELECT 'KO' OK
            SELECT ERROR = 'Debe seleccionar el periodo, la aseguradora y unidad de atencion'
            RETURN
        END
        PRINT @ANOMES
        SELECT  'OK' OK
        SELECT CIT.CONSECUTIVO
            ,FECHA_CITA = CONVERT(VARCHAR(10), CIT.FECHA, 103)+' '+CONVERT(VARCHAR(10), CIT.FECHA, 108)
            ,CIT.NOAUTORIZACION
            ,FECHA_AUTORIZACION = CONVERT(VARCHAR(10), CIT.FECHAAUTORIZACION, 103)+' '+CONVERT(VARCHAR(10), CIT.FECHAAUTORIZACION, 108)
            ,FECHA_VENCIMIENTO = CONVERT(VARCHAR(10), CIT.FVENCEAUTORIZACION, 103)+' '+CONVERT(VARCHAR(10), CIT.FVENCEAUTORIZACION, 108)
            ,AFI.TIPO_DOC ,AFI.DOCIDAFILIADO,AFI.NOMBREAFI,AFI.SEXO ,AFI.TELEFONORES ,AFI.CELULAR ,AFI.EMAIL ,AFI.EDAD ,CIT.IDSERVICIO
            ,SER.DESCSERVICIO ,DBO.FNK_ESTADO_CITA(CIT.CONSECUTIVO) AS [ESTADO_CITA] ,TER.RAZONSOCIAL ,SED.DESCRIPCION AS DESCSEDE
            ,CIT.IDMEDICO, MED.NOMBRE AS NOMBREMED ,MES.DESCRIPCION AS NOMBREESP ,CIT.OBSERVACIONES
            ,CASE WHEN CIT.MODALIDAD='' THEN 'Presencial' ELSE COALESCE(CIT.MODALIDAD,'Presencial') END AS MODALIDAD
            ,CIT.TIPOSOLICITUD ,COALESCE(HCA.IDDX, CIT.IDDX,'') AS IDDX ,COALESCE(MDX.DESCRIPCION, '') AS NOMBREDX
            ,COALESCE(ROL.DESCRIPCION , '') AS UNIDAD_ATENCION, MPE.DESCESPECIAL AS PROGRAMA
            ,COALESCE(CIT.EXONERACION, 0) AS EXONERACION ,IIF(CIT.EXONERACION=1 AND COALESCE(CIT.IDESTADOE,'')<>'SI', 0, CIT.VALORCOPAGO_EXONERA) AS VALORCOPAGO_EXONERA
            ,COALESCE(TGEN.DESCRIPCION, '') AS TIPO_EXONERACION
            ,CONVERT(VARCHAR(6),CONCAT(YEAR(CIT.FECHA), RIGHT('00'+CONVERT(VARCHAR(2), MONTH(CIT.FECHA)),2)))
        FROM CIT INNER JOIN  AFI ON AFI.IDAFILIADO=CIT.IDAFILIADO
            INNER JOIN SER ON SER.IDSERVICIO=CIT.IDSERVICIO
            INNER JOIN MPE ON MPE.IDPESPECIAL=CIT.IDPESPECIAL
            INNER JOIN ROL ON ROL.IDROL=MPE.IDROL
            LEFT JOIN  TER ON TER.IDTERCERO=CIT.IDTERCEROCA
            LEFT JOIN  MED ON MED.IDMEDICO=CIT.IDMEDICO
            LEFT JOIN  MES ON MES.IDEMEDICA=COALESCE(CIT.IDEMEDICA, MED.IDEMEDICA)
            LEFT JOIN  SED ON SED.IDSEDE=CIT.IDSEDE
            LEFT JOIN (SELECT ID=ROW_NUMBER() OVER (PARTITION BY CONSECUTIVOCIT ORDER BY CONSECUTIVOCIT), IDAFILIADO, CONSECUTIVOCIT, IDDX
                    FROM HCA
                    WHERE IDDX IS NOT NULL
                    ) HCA ON HCA.CONSECUTIVOCIT=CIT.CONSECUTIVO AND HCA.ID=1
            LEFT JOIN MDX ON MDX.IDDX=COALESCE(HCA.IDDX, CIT.IDDX)
            LEFT JOIN TGEN ON TGEN.TABLA='CIT' AND TGEN.CAMPO='EXONERACION' AND TGEN.CODIGO=CIT.TIPO_EXONERACION
        WHERE  CIT.IDAFILIADO IS NOT NULL AND CLASEORDEN='Modelo' 
            AND CIT.ANOMES=@ANOMES 
            AND CIT.IDTERCEROCA=@IDTERCERO
            AND MPE.IDROL=@UNIDAD_ATENCION
        RETURN
    END
END

