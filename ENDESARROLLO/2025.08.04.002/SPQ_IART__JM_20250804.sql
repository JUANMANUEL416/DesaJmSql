CREATE OR ALTER PROCEDURE DBO.SPQ_IART
@JSON  NVARCHAR(MAX)
WITH   ENCRYPTION
AS
DECLARE  @PARAMETROS		NVARCHAR(MAX),	@MODELO				VARCHAR(100),	@METODO				VARCHAR(100),	@USUARIO			VARCHAR(20)   
DECLARE  @GRUPO				VARCHAR(8),		@IDVARIABLE			VARCHAR(20),	@IDARTICULO			VARCHAR(20),	@IDCLASE			VARCHAR(2)
DECLARE	 @IDSUBCLASE		VARCHAR(4),		@IDGRUPO			VARCHAR(4),		@DESCRIPCION		VARCHAR(900),	@IDPRINACTIVO		VARCHAR(10)
DECLARE	 @IDFORFARM			VARCHAR(3),		@IDCONCENTRA		VARCHAR(4),		@IDUNIDAD			VARCHAR(100),	@PCOSTO				DECIMAL(9)
DECLARE	 @EXISTOTAL			DECIMAL(9),		@STOCKMINIMO		DECIMAL(9),		@STOCKMAXIMO		DECIMAL(9),		@PUNTOREORDEN		DECIMAL(9)
DECLARE	 @IDITAR			VARCHAR(2),		@ESTRANSFORMABLE	BIT,			@ESTADO				VARCHAR(8),		@IDGENERICO			VARCHAR(20)
DECLARE	 @CUENTA			VARCHAR(16),	@IDFABRICANTE		VARCHAR(20),	@ESACTIVO			BIT,			@IDTIPOACTIVO		VARCHAR(20)
DECLARE	 @IDALTERNA			VARCHAR(20),	@REGINVIMA			VARCHAR(100),	@ALTO_COSTO			BIT,			@CONT_ESPECIAL		BIT
DECLARE	 @ENTREGA_TURNO		BIT,			@UTILIDAD			DECIMAL(9),		@DOSIFICADO			TINYINT,		@NDOSIS				BIT
DECLARE	 @CODCUM			VARCHAR(30),	@ESCALA_RIESGO		VARCHAR(20),	@IDSERVICIO			VARCHAR(20),	@PRINCIPAL			TINYINT
DECLARE	 @CLASERIESGO		VARCHAR(20),	@TESTABILIDAD		INT,			@CLASE				VARCHAR(10),	@MLOTEO				BIT
DECLARE	 @IDSERVICIOBASE	VARCHAR(20),	@CANTIDADBASE		DECIMAL(9),		@IDSERVICIOMEZCLA	VARCHAR(20),	@CANTIDADMEZCLA		DECIMAL(9)
DECLARE	 @CODIBASE			VARCHAR(20),	@CENTRAL			VARCHAR(4),		@IDSERVICIOCOBRO	DECIMAL(9),		@CTV				DECIMAL(9)
DECLARE	 @F_VIGENCIAINV		DATE,			@REGULADO			BIT,			@PRECOMERCIAL		VARCHAR(10),	@NOPOS				BIT
DECLARE	 @CONTADOR			INT,			@GRUPOI				VARCHAR(20),	@LABILIDAD			VARCHAR(20),	@HEMOCLASIFICACION	VARCHAR(10)
DECLARE	 @JUSTIFICACION		BIT,			@CODBARRA			VARCHAR(48),	@INSTITUCIONAL		BIT,			@TEMPERATURA		DECIMAL(14, 2)
DECLARE	 @ICBU				BIT,			@RMINSTOCK			BIT,			@STOCKMINREQ		SMALLINT,		@REQAUTCOMP			BIT
DECLARE	 @REQRECEP			BIT,			@REFERENCIA			VARCHAR(30),	@IUM				VARCHAR(16),	@IDSERVICIO_FAC		VARCHAR(20)
DECLARE	 @CESTE				BIT,			@MIVA				BIT,			@PROCEDIMIENTO		NVARCHAR(MAX),	@MCADFRIO			BIT
DECLARE	 @BIOLOGICO			BIT,			@UNIRS				BIT,			@ALERTA				VARCHAR(1024),	@TEMPERATURA_FIN	DECIMAL(14,2)
DECLARE  @PROCESO			VARCHAR(20)    ,@HUMEDAD_MIN		DECIMAL(14,2)	,@HUMEDAD_MAX		DECIMAL(14,2),  @IDBODEGA			VARCHAR(20)
DECLARE  @ESTANTE		    VARCHAR(20),	@ESAUTOMATICO		BIT,			@SEDE				VARCHAR(5),		@PRECNS				VARCHAR(10)
DECLARE  @IDARTICULO_ORI	VARCHAR(20), @IDARTICULO_DES	VARCHAR(20) , @UNID_VENTA INT
DECLARE @TBLERRORES TABLE (ERROR VARCHAR(MAX))

BEGIN

	IF ISJSON(@JSON) = 0 
	BEGIN
		RAISERROR('Json: Formato Erroneo',16,1)
		RETURN
	END

	SELECT  @MODELO = MODELO , @METODO = METODO , @USUARIO = USUARIO, @PARAMETROS=PARAMETROS
	FROM OPENJSON (@json)
	WITH (
		MODELO         VARCHAR(100)     '$.MODELO',
		METODO         VARCHAR(100)     '$.METODO',
		USUARIO        VARCHAR(12)      '$.USUARIO',
		PARAMETROS     NVARCHAR(MAX)  AS JSON
	)

	IF @METODO = 'IDITARUNIDOSIS'
	BEGIN
		SELECT IDITAR FROM ITAR INNER JOIN USVGS ON ITAR.IDITAR = USVGS.DATO
		WHERE IDVARIABLE='IDITARUNIDOSIS' 
		RETURN
	END

	IF @METODO = 'DETALLE_DOSIS'
	BEGIN
		SELECT @IDARTICULO = IDARTICULO
		  FROM   OPENJSON (@PARAMETROS)
		  WITH (IDARTICULO       VARCHAR(20)  '$.IDARTICULO')
		
		SELECT 
			IART.IDARTICULO, IART.DESCRIPCION, SER.PRESUNI, SER.EQUICC, IART.ESTADO, IART.PROCEDIMIENTO
			,IGEN.IDGENERICO, IGEN.DESCRIPCION GENERICO
			,IART.IDSERVICIOBASE, BASE.DESCRIPCION BS_DESCRIPCION, IART.CANTIDADBASE, BS.PRESUNI BS_PRESUNI, BS.EQUICC BS_EQUICC
			,IART.IDSERVICIOMEZCLA, MEZCLA.DESCRIPCION MC_DESCRIPCION, IART.CANTIDADMEZCLA, MC.PRESUNI MC_PRESUNI, MC.EQUICC MC_EQUICC
		FROM		IART 
		LEFT JOIN	IGEN ON IGEN.IDGENERICO = IART.IDGENERICO
		LEFT JOIN	IART BASE ON IART.IDSERVICIOBASE=BASE.IDARTICULO
		LEFT JOIN	IART MEZCLA ON IART.IDSERVICIOMEZCLA=MEZCLA.IDARTICULO
		LEFT JOIN   SER ON SER.IDARTICULO=IART.IDARTICULO
		LEFT JOIN   SER BS ON BASE.IDSERVICIO=BS.IDSERVICIO
		LEFT JOIN   SER MC ON MEZCLA.IDSERVICIO=MC.IDSERVICIO
		WHERE IART.IDARTICULO=@IDARTICULO

		SELECT ITXA.IDARTICULOTF IDARTICULO,IART.DESCRIPCION,ITXA.CANTIDADTF CANTIDAD 
		,SER.PRESUNI, SER.EQUICC
		FROM ITXA 
		INNER JOIN IART ON IART.IDARTICULO=ITXA.IDARTICULOTF
		LEFT JOIN SER ON SER.IDSERVICIO=IART.IDSERVICIO
		WHERE ITXA.IDARTICULO=@IDARTICULO

		RETURN
	END

	IF @METODO = 'SET_PROCEDIMIENTO'
	BEGIN
		DECLARE @PROCEDMIENTO NVARCHAR(MAX)
		SELECT @IDARTICULO = IDARTICULO, @PROCEDMIENTO=PROCEDIMIENTO
		FROM   OPENJSON (@PARAMETROS)
		WITH (
			IDARTICULO       VARCHAR(20)  '$.IDARTICULO',
			PROCEDIMIENTO    NVARCHAR(MAX)'$.PROCEDIMIENTO'
		)

		UPDATE IART SET PROCEDIMIENTO = @PROCEDMIENTO WHERE IDARTICULO = @IDARTICULO
		RETURN
	END

	IF @METODO = 'NUEVA_DOSIS'
	BEGIN
		  SELECT * INTO #IART
		  FROM   OPENJSON (@PARAMETROS)
		  WITH (   
			DESCRIPCION       VARCHAR(900)  '$.DESCRIPCION',
			HORASESTABILIDAD  INT			'$.HORASESTABILIDAD',
			IDARTICULOBASE	  VARCHAR(255)	'$.IDARTICULOBASE',
			CANTIDADBASE	  DECIMAL(14,2) '$.CANTBASE',
			IDARTICULOMEZCLA  VARCHAR(255)	'$.IDARTICULOMEZCLA',
			CANTIDADMEZCLA	  DECIMAL(14,2) '$.CANTMEZCLA'
		  )

		--INSERT INTO IART() 

		--SELECT * FROM IART
		--SELECT * FROM ITXA
		DECLARE @NVOCONSEC VARCHAR(20)
		--DECLARE @IDGENERICO VARCHAR(20)
		SELECT @NVOCONSEC = NULL 
        EXEC SPK_GENCONSECUTIVO '01', '01', '@UNIDOSIS',  @NVOCONSEC OUTPUT  
        SELECT @NVOCONSEC = 'UN' +  REPLACE(SPACE(8 - LEN(@NVOCONSEC))+LTRIM(RTRIM(@NVOCONSEC)),SPACE(1),0)

		SELECT @IDGENERICO = IGEN.IDGENERICO FROM IGEN INNER JOIN IART ON IART.IDGENERICO=IGEN.IDGENERICO
		INNER JOIN #IART ON #IART.IDARTICULOBASE=IART.IDARTICULO

		IF @IDGENERICO IS NULL
		BEGIN
			RAISERROR('El medicamento base no tiene configurado un genérico.',16,1)
			RETURN
		END

		INSERT INTO IART(IDARTICULO,IDITAR,DESCRIPCION,TESTABILIDAD,IDSERVICIOBASE,CANTIDADBASE,IDSERVICIOMEZCLA,CANTIDADMEZCLA,IDGENERICO,ESTADO, PCOSTO, EXISTOTAL, ESACTIVO)
		SELECT 
			@NVOCONSEC IDARTICULO
			,IDITAR = dbo.FNK_VALORVARIABLE('IDITARUNIDOSIS')
			,DESCRIPCION
			,HORASESTABILIDAD
			,IDARTICULOBASE
			,CANTIDADBASE
			,IDARTICULOMEZCLA
			,CANTIDADMEZCLA
			,@IDGENERICO IDGENERICO
			,'Activo'
         , 0
         , 0
         , 0
		FROM #IART

		--INSERT INTO ITXA(IDARTICULO,IDARTICULOTF)
		--SELECT IDARTICULOBASE, IDSERVICIOBASE FROM #IART
		--SELECT IDARTICULOMEZCLA, IDSERVICIOMEZCLA FROM #IART
	END

	IF @METODO = 'CAMBIAR_ESTADO'
	BEGIN
		SELECT @IDARTICULO = IDARTICULO
		  FROM   OPENJSON (@PARAMETROS)
		  WITH (IDARTICULO       VARCHAR(20)  '$.IDARTICULO')

		UPDATE IART SET ESTADO=CASE WHEN ESTADO='Inactivo' THEN 'Activo' ELSE 'Inactivo' END WHERE IDARTICULO=@IDARTICULO
		RETURN
	END

	IF @METODO = 'AGREGAR_INSUMO'
	BEGIN
		INSERT INTO ITXA(IDARTICULO,IDARTICULOTF,CANTIDADTF)
		SELECT IDARTICULO,IDARTICULOTF,CANTIDAD
		FROM   OPENJSON (@PARAMETROS)
		WITH (
			IDARTICULO     VARCHAR(20)  '$.IDARTICULO',
			CANTIDAD       DECIMAL(14,2)'$.CANTIDAD',
			IDARTICULOTF   VARCHAR(20)	'$.IDARTICULOTF'
		) AS #T
		WHERE NOT EXISTS(SELECT 1 FROM ITXA WHERE IDARTICULO=#T.IDARTICULO AND IDARTICULOTF=#T.IDARTICULOTF)
	END

	IF @METODO = 'DESCARTAR_INSUMO'
	BEGIN
		DECLARE @IDARTICULOTF VARCHAR(20)
		SELECT @IDARTICULO = IDARTICULO, @IDARTICULOTF = IDARTICULOTF
		FROM   OPENJSON (@PARAMETROS)
		WITH (
			IDARTICULO     VARCHAR(20)  '$.IDARTICULO',
			IDARTICULOTF   VARCHAR(20)	'$.IDARTICULOTF'
		) AS #T

		DELETE FROM ITXA WHERE IDARTICULO = @IDARTICULO AND IDARTICULOTF = @IDARTICULOTF
	END

	IF @METODO = 'CONTAR_HERMANOS'
	BEGIN
		SELECT 'OK' OK

		SELECT COUNT(*) HERMANOS FROM VWK_HERMANOS_INVENTARIO WHERE HERMANO_MAYOR=JSON_VALUE(@PARAMETROS, '$.IDSERVICIO')
		RETURN
	END

	IF @METODO = 'GET_ARTICULOS_X_FABRICANTE'
	BEGIN
		SELECT 'OK' OK

		SELECT @IDARTICULO = JSON_VALUE(@PARAMETROS, '$.IDARTICULO')
		SELECT @ESTADO = JSON_VALUE(@PARAMETROS, '$.ESTADO')
		DECLARE @IDITARUNIDOSIS VARCHAR(100) = DBO.FNK_VALORVARIABLE('IDITARUNIDOSIS')
		DECLARE @ESFARMACIA VARCHAR(100) = DBO.FNK_VALORVARIABLE('ESFARMACIA')
		DECLARE @FILTRO AS NVARCHAR(MAX)=' IART.PRINCIPAL = 0 '
		DECLARE @SELECT VARCHAR(MAX)='SELECT IART.IDARTICULO, IART.DESCRIPCION, IART.IDFABRICANTE, TER.RAZONSOCIAL AS FABRICANTE, IART.REGINVIMA, IART.CODCUM,
			IART.F_VIGENCIAINV, IART.IUM, ENTREGA_TURNO = CAST(COALESCE(IART.ENTREGA_TURNO,0) AS BIT), IART.UTILIDAD, MCADFRIO = CAST(COALESCE(IART.MCADFRIO,0) AS BIT),
			IART.TEMPERATURA, IART.TESTABILIDAD, IART.CONTADOR, IART.ESTADO, IART.UNID_VENTA FROM IART LEFT JOIN TER ON TER.IDTERCERO=IART.IDFABRICANTE '

		SELECT @IDSERVICIO = TRIM(IDSERVICIO) FROM IART WHERE IDARTICULO=@IDARTICULO

		IF DBO.FNK_VALORVARIABLE('DEINVNODESER') = @IDSERVICIO
			SELECT @FILTRO = TRIM(@FILTRO) + ' AND IDARTICULO='''+@IDARTICULO+''' AND IDITAR <> '''+@IDITARUNIDOSIS+''''

		IF @ESFARMACIA='SI'
		BEGIN
         IF DBO.FNK_VALORVARIABLE('INTERFAZ_INV') = 'INTER_SAP' -- CI. PERU
            SELECT @FILTRO = TRIM(@FILTRO) + ' AND IDARTICULO = '''+@IDARTICULO+''' AND IDITAR <> '''+@IDITARUNIDOSIS+''''
         ELSE
			   SELECT @FILTRO = TRIM(@FILTRO) + ' AND IDARTICULO LIKE '''+@IDARTICULO+'%'' AND IDITAR <> '''+@IDITARUNIDOSIS+''''
		END
		ELSE
		BEGIN
         IF DBO.FNK_VALORVARIABLE('INTERFAZ_INV') = 'INTER_SAP' -- CI. PERU
            SELECT @FILTRO = TRIM(@FILTRO) + ' AND IDSERVICIO = '''+@IDSERVICIO+''' AND IDITAR <> '''+@IDITARUNIDOSIS+''''
         ELSE
			   SELECT @FILTRO = TRIM(@FILTRO) + ' AND IDSERVICIO = '''+@IDSERVICIO+''' AND IDITAR <> '''+@IDITARUNIDOSIS+''''
		END

		IF @ESTADO <> 'Todos'
		   SELECT @FILTRO = TRIM(@FILTRO) + ' AND IART.ESTADO = '''+@ESTADO+''''

         PRINT @SELECT + ' WHERE ' + @FILTRO
		EXEC(@SELECT + ' WHERE ' + @FILTRO)
		RETURN
	END

	IF @METODO = 'VALIDA_SERVICIO'
	BEGIN
		SELECT 'OK' OK

		SELECT IDSERVICIO  FROM SER WHERE IDARTICULO = JSON_VALUE(@PARAMETROS, '$.IDARTICULO')

		SELECT @IDSERVICIO = IDSERVICIO FROM SER WHERE IDARTICULO = JSON_VALUE(@PARAMETROS, '$.IDARTICULO')
		IF NOT EXISTS (SELECT 1 FROM IART WHERE IDSERVICIO = @IDSERVICIO AND COALESCE(PRINCIPAL,0) = 0)
		BEGIN
			SELECT 'SI' CREAART_HIJO
		END
		ELSE
		BEGIN
			SELECT 'NO' CREAART_HIJO
		END
		RETURN
	END

	IF @METODO = 'GET_CONTADOR'
	BEGIN
		DECLARE @CONTADOR_HIJOS INT 
		SELECT @IDARTICULO = JSON_VALUE(@PARAMETROS, '$.IDARTICULO')
		SELECT @CONTADOR = CONTADOR FROM IART WHERE IDARTICULO = @IDARTICULO AND PRINCIPAL=1
		SELECT @CONTADOR_HIJOS=COUNT(1) FROM IART WHERE IDSERVICIO = @IDARTICULO AND PRINCIPAL=0

		IF COALESCE(@CONTADOR, -1)=-1 OR @CONTADOR < @CONTADOR_HIJOS
		BEGIN
			SELECT @CONTADOR=@CONTADOR_HIJOS
		END
		
		SELECT 'OK' OK
		SELECT @CONTADOR CONTADOR
		RETURN
	END

	IF @METODO = 'GET_CODIGOS_BARRAS'
	BEGIN
		SELECT 'OK' OK

		SELECT TGEN.DATO1, IART.DESCRIPCION, CODIGO, TGEN.IDTGEN FROM TGEN INNER JOIN IART ON IART.IDARTICULO = TGEN.DATO1 
		WHERE TGEN.TABLA = 'IART' AND TGEN.CAMPO = 'CODEBAR' AND TGEN.DATO1 = JSON_VALUE(@PARAMETROS, '$.IDARTICULO')
		RETURN
	END

	IF @METODO = 'GUARDAR'
	BEGIN
		SELECT  @IDARTICULO = IDARTICULO, @IDCLASE = IDCLASE, @IDSUBCLASE = IDSUBCLASE, @IDGRUPO = IDGRUPO, @DESCRIPCION = DESCRIPCION,
		@IDPRINACTIVO = IDPRINACTIVO,	@IDFORFARM = IDFORFARM,@IDCONCENTRA = IDCONCENTRA, @IDUNIDAD = IDUNIDAD, @STOCKMINIMO = STOCKMINIMO ,
		@STOCKMAXIMO = STOCKMAXIMO ,@PUNTOREORDEN = PUNTOREORDEN ,@IDITAR =IDITAR ,@ESTRANSFORMABLE =ESTRANSFORMABLE ,
		@ESTADO = ESTADO ,@IDGENERICO =IDGENERICO, @IDFABRICANTE = IDFABRICANTE, @ESACTIVO=ESACTIVO, @IDTIPOACTIVO=IDTIPOACTIVO,
		@IDALTERNA=IDALTERNA, @REGINVIMA=REGINVIMA,@ALTO_COSTO=ALTO_COSTO ,@CONT_ESPECIAL =CONT_ESPECIAL ,@ENTREGA_TURNO =ENTREGA_TURNO ,
		@UTILIDAD =UTILIDAD ,@CODCUM=CODCUM, @IDSERVICIO =IDSERVICIO , @PRINCIPAL=PRINCIPAL ,@CLASERIESGO =CLASERIESGO, @TESTABILIDAD = TESTABILIDAD,
		@CTV=CTV,@F_VIGENCIAINV=F_VIGENCIAINV,@REGULADO=REGULADO,@PRECOMERCIAL=PRECOMERCIAL ,@NOPOS =NOPOS ,
		@CONTADOR=CONTADOR ,@HEMOCLASIFICACION=HEMOCLASIFICACION,@JUSTIFICACION=JUSTIFICACION,@INSTITUCIONAL=INSTITUCIONAL,@TEMPERATURA=TEMPERATURA,
		@ICBU=ICBU, @RMINSTOCK =RMINSTOCK,@STOCKMINREQ =STOCKMINREQ ,@REQAUTCOMP = REQAUTCOMP ,@REQRECEP =REQRECEP ,@REFERENCIA =REFERENCIA ,@CESTE=CESTE,
		@BIOLOGICO=BIOLOGICO ,@UNIRS =UNIRS ,@ALERTA=ALERTA, @ESAUTOMATICO = ESAUTOMATICO, @SEDE = SEDE, @PRECNS= PRECNS, @PROCESO = PROCESO
		,@TEMPERATURA_FIN = TEMPERATURA_FIN	,@HUMEDAD_MIN = HUMEDAD_MIN	,@HUMEDAD_MAX = HUMEDAD_MAX, @MIVA=MIVA, @UNID_VENTA = UNID_VENTA
		FROM	OPENJSON (@PARAMETROS) 
		WITH	(
			IDARTICULO			VARCHAR(20) '$.IDARTICULO',			IDCLASE			VARCHAR(2)		'$.IDCLASE',			IDSUBCLASE		VARCHAR(4)		'$.IDSUBCLASE', 
			IDGRUPO				VARCHAR(4)  '$.IDGRUPO',			DESCRIPCION		VARCHAR(900)	'$.DESCRIPCION',		IDPRINACTIVO	VARCHAR(10)		'$.IDPRINACTIVO',
			IDFORFARM			VARCHAR(3)	'$.IDFORFARM',			IDCONCENTRA		VARCHAR(4)		'$.IDCONCENTRA',		IDUNIDAD		VARCHAR(100)	'$.IDUNIDAD',
			STOCKMINIMO			DECIMAL(9)	'$.STOCKMINIMO',		STOCKMAXIMO		DECIMAL(9)		'$.STOCKMAXIMO',		PUNTOREORDEN	DECIMAL(9)		'$.PUNTOREORDEN',
			IDITAR				VARCHAR(2)	'$.IDITAR',				ESTRANSFORMABLE	BIT				'$.ESTRANSFORMABLE',	ESTADO			VARCHAR(8)		'$.ESTADO',
			IDGENERICO			VARCHAR(20) '$.IDGENERICO',			IDFABRICANTE	VARCHAR(20)		'$.IDFABRICANTE',		ESACTIVO		BIT				'$.ESACTIVO',
			IDTIPOACTIVO		VARCHAR(20) '$.IDTIPOACTIVO',		IDALTERNA		VARCHAR(20)		'$.IDALTERNA',			REGINVIMA		VARCHAR(100)	'$.REGINVIMA',				
			ALTO_COSTO			BIT			'$.ALTO_COSTO',			CONT_ESPECIAL	BIT				'$.CONT_ESPECIAL',		ENTREGA_TURNO	BIT				'$.ENTREGA_TURNO',				
			UTILIDAD			DECIMAL(9)	'$.UTILIDAD',			CODCUM			VARCHAR(30)		'$.CODCUM',				IDSERVICIO		VARCHAR(20)		'$.IDSERVICIO',			
			PRINCIPAL			TINYINT		'$.PRINCIPAL',			CLASERIESGO		VARCHAR(20)		'$.CLASERIESGO',		TESTABILIDAD	INT				'$.TESTABILIDAD',
			CTV					DECIMAL(9)	'$.CTV',				F_VIGENCIAINV	DATE			'$.F_VIGENCIAINV',		REGULADO		BIT				'$.REGULADO',
			PRECOMERCIAL		VARCHAR(10)	'$.PRECOMERCIAL',		NOPOS			BIT				'$.NOPOS',				CONTADOR		INT				'$.CONTADOR',
			HEMOCLASIFICACION	VARCHAR(10) '$.HEMOCLASIFICACION',	JUSTIFICACION	BIT				'$.JUSTIFICACION',		INSTITUCIONAL	BIT				'$.INSTITUCIONAL',
			TEMPERATURA			DECIMAL(14,2)	'$.TEMPERATURA',		ICBU			BIT				'$.ICBU',				RMINSTOCK		BIT				'$.RMINSTOCK',
			STOCKMINREQ			SMALLINT	'$.STOCKMINREQ',		REQAUTCOMP		BIT				'$.REQAUTCOMP',			REQRECEP		BIT				'$.REQRECEP',
			REFERENCIA			VARCHAR(30) '$.REFERENCIA',			CESTE			BIT				'$.CESTE',				BIOLOGICO		BIT				'$.BIOLOGICO',
			UNIRS				BIT			'$.UNIRS',				ALERTA			VARCHAR(1024)	'$.ALERTA',				PROCESO			VARCHAR(20)		'$.PROCESO',
			ESAUTOMATICO		BIT			'$.ESAUTOMATICO',		SEDE			VARCHAR(5)		'$.SEDE',				PRECNS			VARCHAR(10)		'$.PRECNS'
			,TEMPERATURA_FIN	DECIMAL(14,2)
			,HUMEDAD_MIN		DECIMAL(14,2)
			,HUMEDAD_MAX		DECIMAL(14,2)				,		MIVA			BIT '$.MIVA', UNID_VENTA			INT		'$.UNID_VENTA'

		)

		
		IF UPPER(@PROCESO) = 'INSERTAR'
		BEGIN
			BEGIN TRY
				INSERT INTO @TBLERRORES(ERROR) 
				SELECT 'EL ARTICULO YA EXISTE'
				WHERE EXISTS (SELECT * FROM IART WHERE IDARTICULO = @IDARTICULO)
			
				IF(SELECT COUNT(*) FROM @TBLERRORES) <=0
				BEGIN
					IF @ESAUTOMATICO = 1
					BEGIN
						DECLARE @NUEVOCNS VARCHAR(20)
						DECLARE @LONGITUD  INT = COALESCE(TRY_CAST(DBO.FNK_VALORVARIABLE('NRO_ESPACIOS_ITARCNS') AS INT),4)
						DECLARE @PREFIJO VARCHAR(20) = CONCAT('@ITAR_',@PRECNS)

                        EXEC SPK_GENCONSECUTIVO '01', @SEDE, @PREFIJO, @NUEVOCNS OUTPUT
						SELECT @IDARTICULO = @PRECNS + REPLACE(SPACE(@LONGITUD - LEN(@NUEVOCNS)) + LTRIM(RTRIM(@NUEVOCNS)), SPACE(1), '0');
                    END

					INSERT INTO IART (IDARTICULO ,IDCLASE ,IDSUBCLASE ,IDGRUPO ,DESCRIPCION ,IDPRINACTIVO ,IDFORFARM ,IDCONCENTRA ,IDUNIDAD ,STOCKMINIMO ,
						STOCKMAXIMO ,PUNTOREORDEN ,IDITAR ,ESTRANSFORMABLE ,ESTADO ,IDGENERICO ,IDFABRICANTE ,ESACTIVO ,IDTIPOACTIVO ,         
						IDALTERNA ,REGINVIMA ,ALTO_COSTO ,CONT_ESPECIAL ,ENTREGA_TURNO ,UTILIDAD ,CODCUM ,IDSERVICIO , PRINCIPAL ,CLASERIESGO ,TESTABILIDAD,
						CTV ,F_VIGENCIAINV ,REGULADO ,PRECOMERCIAL ,NOPOS ,CONTADOR ,HEMOCLASIFICACION ,JUSTIFICACION , INSTITUCIONAL ,TEMPERATURA ,ICBU ,
						RMINSTOCK ,STOCKMINREQ ,REQAUTCOMP ,REQRECEP ,REFERENCIA , CESTE ,BIOLOGICO ,UNIRS ,ALERTA, TEMPERATURA_FIN, HUMEDAD_MIN, HUMEDAD_MAX , PCOSTO, EXISTOTAL, MIVA, UNID_VENTA)
					SELECT @IDARTICULO ,@IDCLASE ,@IDSUBCLASE ,@IDGRUPO ,@DESCRIPCION ,@IDPRINACTIVO ,@IDFORFARM ,@IDCONCENTRA ,@IDUNIDAD ,	@STOCKMINIMO ,
						@STOCKMAXIMO ,@PUNTOREORDEN ,@IDITAR ,@ESTRANSFORMABLE , COALESCE(@ESTADO,'Activo') ,@IDGENERICO ,@IDFABRICANTE ,@ESACTIVO ,@IDTIPOACTIVO ,
						@IDALTERNA ,@REGINVIMA ,@ALTO_COSTO ,@CONT_ESPECIAL ,@ENTREGA_TURNO ,@UTILIDAD ,@CODCUM ,@IDSERVICIO ,@PRINCIPAL ,@CLASERIESGO ,@TESTABILIDAD, 
						@CTV ,@F_VIGENCIAINV ,@REGULADO ,@PRECOMERCIAL ,@NOPOS ,@CONTADOR ,@HEMOCLASIFICACION ,@JUSTIFICACION ,@INSTITUCIONAL ,@TEMPERATURA ,@ICBU ,
						@RMINSTOCK ,@STOCKMINREQ ,@REQAUTCOMP ,@REQRECEP ,@REFERENCIA , @CESTE ,@BIOLOGICO ,@UNIRS ,@ALERTA, @TEMPERATURA_FIN, @HUMEDAD_MIN, @HUMEDAD_MAX , 0 , 0, COALESCE(@MIVA,0), @UNID_VENTA
				END
			 END TRY

			 BEGIN CATCH
				INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE()
			 END CATCH

			 IF (SELECT COUNT(*) FROM @TBLERRORES)> 0
			 BEGIN
				SELECT 'KO' OK
				SELECT ERROR FROM @TBLERRORES
				RETURN
			 END

			 SELECT 'OK' OK 
			 RETURN
		END
		ELSE IF UPPER(@PROCESO) = 'EDITAR'
		BEGIN
			BEGIN TRY

            IF DBO.FNK_VALORVARIABLE('INTERFAZ_INV') = 'INTER_SAP' AND @ESTADO = 'Inactivo' AND EXISTS(SELECT * FROM VWK_HERMANOS_INVENTARIO WHERE HERMANO_MAYOR = @IDARTICULO AND IDARTICULO <> @IDARTICULO)
			   BEGIN
				   SELECT 'KO' OK
				   SELECT 'EL ARTICULO TIENE ARTICULOS COMERCIALES ACTIVOS, NO SE PUEDE CONTINUAR.' ERROR
				   RETURN
			   END

				UPDATE IART SET IDCLASE = @IDCLASE, IDSUBCLASE = @IDSUBCLASE, IDGRUPO = @IDGRUPO, DESCRIPCION = @DESCRIPCION,
					IDPRINACTIVO = @IDPRINACTIVO,	IDFORFARM = @IDFORFARM,IDCONCENTRA = @IDCONCENTRA, IDUNIDAD = @IDUNIDAD, STOCKMINIMO = @STOCKMINIMO ,
					STOCKMAXIMO = @STOCKMAXIMO ,PUNTOREORDEN = @PUNTOREORDEN ,IDITAR =@IDITAR ,ESTRANSFORMABLE =@ESTRANSFORMABLE ,
					ESTADO = COALESCE(@ESTADO,'Activo') ,IDGENERICO =@IDGENERICO, IDFABRICANTE = @IDFABRICANTE, ESACTIVO=@ESACTIVO, IDTIPOACTIVO=@IDTIPOACTIVO,
					IDALTERNA=@IDALTERNA, REGINVIMA=@REGINVIMA,ALTO_COSTO=@ALTO_COSTO ,CONT_ESPECIAL =@CONT_ESPECIAL ,ENTREGA_TURNO =@ENTREGA_TURNO ,
					UTILIDAD =@UTILIDAD ,CODCUM=@CODCUM, IDSERVICIO =@IDSERVICIO , PRINCIPAL=@PRINCIPAL ,CLASERIESGO =@CLASERIESGO, TESTABILIDAD = @TESTABILIDAD,
					CTV=@CTV,F_VIGENCIAINV=@F_VIGENCIAINV,REGULADO=@REGULADO,PRECOMERCIAL=@PRECOMERCIAL ,NOPOS =@NOPOS ,
					CONTADOR=@CONTADOR ,HEMOCLASIFICACION=@HEMOCLASIFICACION,JUSTIFICACION=@JUSTIFICACION,INSTITUCIONAL=@INSTITUCIONAL,TEMPERATURA=@TEMPERATURA,
					ICBU=@ICBU, RMINSTOCK =@RMINSTOCK,STOCKMINREQ =@STOCKMINREQ ,REQAUTCOMP = @REQAUTCOMP ,REQRECEP =@REQRECEP ,REFERENCIA =@REFERENCIA ,CESTE=@CESTE,
					BIOLOGICO=@BIOLOGICO ,UNIRS =@UNIRS ,ALERTA=@ALERTA, TEMPERATURA_FIN = @TEMPERATURA_FIN, HUMEDAD_MIN = @HUMEDAD_MIN, HUMEDAD_MAX = @HUMEDAD_MAX,
					MIVA=@MIVA, UNID_VENTA = @UNID_VENTA
				WHERE IDARTICULO = @IDARTICULO

            IF DBO.FNK_VALORVARIABLE('INTERFAZ_INV') = 'INTER_SAP'
            BEGIN
               UPDATE SER SET ESTADO = COALESCE(@ESTADO,'Activo') WHERE IDSERVICIO = @IDARTICULO
            END
			END TRY

			BEGIN CATCH
				INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE()
			END CATCH

			IF (SELECT COUNT(*) FROM @TBLERRORES)> 0
			BEGIN
				SELECT 'KO' OK
				SELECT ERROR FROM @TBLERRORES
				RETURN
			END
			SELECT 'OK' OK 
			RETURN
		END
		ELSE IF UPPER(@PROCESO) = 'ASIGNAR_SERVICIO'
		BEGIN
			BEGIN TRY
				UPDATE IART SET IDSERVICIO = @IDSERVICIO WHERE IDARTICULO = @IDARTICULO
			END TRY

			BEGIN CATCH
				INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE()
			END CATCH

			IF (SELECT COUNT(*) FROM @TBLERRORES)> 0
			BEGIN
				SELECT 'KO' OK
				SELECT ERROR FROM @TBLERRORES
				RETURN
			END
			SELECT 'OK' OK 
			RETURN
		END
		ELSE IF UPPER(@PROCESO) = 'INSERTAR_HERMANO'
		BEGIN
			BEGIN TRY
				INSERT INTO @TBLERRORES(ERROR) 
				SELECT 'EL FABRICANTE YA ESTA RELACIONADO A ESTE ARTICULO'
				WHERE EXISTS (SELECT * FROM IART WHERE IDSERVICIO = @IDSERVICIO AND IDFABRICANTE = @IDFABRICANTE)
			
				IF(SELECT COUNT(*) FROM @TBLERRORES) <=0
				BEGIN
					INSERT INTO IART (IDARTICULO ,IDCLASE ,IDSUBCLASE ,IDGRUPO ,DESCRIPCION ,IDPRINACTIVO ,IDFORFARM ,IDCONCENTRA ,IDUNIDAD ,STOCKMINIMO ,
						STOCKMAXIMO ,PUNTOREORDEN ,IDITAR ,ESTRANSFORMABLE ,ESTADO ,IDGENERICO ,IDFABRICANTE ,ESACTIVO ,IDTIPOACTIVO ,         
						IDALTERNA ,REGINVIMA ,ALTO_COSTO ,CONT_ESPECIAL ,ENTREGA_TURNO ,UTILIDAD ,CODCUM ,IDSERVICIO , PRINCIPAL ,CLASERIESGO ,TESTABILIDAD,
						CTV ,F_VIGENCIAINV ,REGULADO ,PRECOMERCIAL ,NOPOS ,CONTADOR ,HEMOCLASIFICACION ,JUSTIFICACION , INSTITUCIONAL ,TEMPERATURA ,ICBU ,
						RMINSTOCK ,STOCKMINREQ ,REQAUTCOMP ,REQRECEP ,REFERENCIA , CESTE ,BIOLOGICO ,UNIRS ,ALERTA, IUM, MCADFRIO, TEMPERATURA_FIN ,HUMEDAD_MIN ,HUMEDAD_MAX, PCOSTO, EXISTOTAL, MIVA, UNID_VENTA)
					SELECT IDARTICULO = @IDARTICULO ,IDCLASE ,IDSUBCLASE ,IDGRUPO , DESCRIPCION = @DESCRIPCION ,IDPRINACTIVO ,IDFORFARM ,IDCONCENTRA ,IDUNIDAD , STOCKMINIMO ,
						STOCKMAXIMO ,PUNTOREORDEN ,IDITAR ,ESTRANSFORMABLE , ESTADO =  COALESCE(@ESTADO,'Activo') ,IDGENERICO ,IDFABRICANTE = @IDFABRICANTE ,ESACTIVO ,IDTIPOACTIVO ,
						IDALTERNA ,REGINVIMA = @REGINVIMA ,ALTO_COSTO ,CONT_ESPECIAL ,ENTREGA_TURNO=@ENTREGA_TURNO ,UTILIDAD=@UTILIDAD ,CODCUM=@CODCUM ,IDSERVICIO ,PRINCIPAL = 0, CLASERIESGO ,TESTABILIDAD=@TESTABILIDAD, 
						CTV ,F_VIGENCIAINV=@F_VIGENCIAINV ,REGULADO ,PRECOMERCIAL ,NOPOS ,CONTADOR=@CONTADOR ,HEMOCLASIFICACION ,JUSTIFICACION ,INSTITUCIONAL ,TEMPERATURA=@TEMPERATURA ,ICBU ,
						RMINSTOCK ,STOCKMINREQ ,REQAUTCOMP ,REQRECEP ,REFERENCIA , CESTE ,BIOLOGICO ,UNIRS ,ALERTA, IUM = @IUM, MCADFRIO = @MCADFRIO, TEMPERATURA_FIN, HUMEDAD_MIN, HUMEDAD_MAX , 0 , 0, COALESCE(@MIVA,0), @UNID_VENTA
					FROM IART WHERE IDARTICULO = JSON_VALUE(@PARAMETROS, '$.IDARTICULOPRIN')

					UPDATE IART SET CONTADOR += 1 WHERE IDARTICULO = JSON_VALUE(@PARAMETROS, '$.IDARTICULOPRIN')
				END
			 END TRY

			 BEGIN CATCH
				INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE()
			 END CATCH

			 IF (SELECT COUNT(*) FROM @TBLERRORES)> 0
			 BEGIN
				SELECT 'KO' OK
				SELECT ERROR FROM @TBLERRORES
				RETURN
			 END

			 SELECT 'OK' OK 
			 RETURN
		END
		ELSE IF UPPER(@PROCESO) = 'EDITAR_HERMANO'
		BEGIN
			BEGIN TRY
				UPDATE IART SET DESCRIPCION = @DESCRIPCION,	ESTADO = COALESCE(@ESTADO,'Activo') ,IDFABRICANTE = @IDFABRICANTE, REGINVIMA=@REGINVIMA,ENTREGA_TURNO =@ENTREGA_TURNO ,
					UTILIDAD =@UTILIDAD ,CODCUM=@CODCUM,TESTABILIDAD = @TESTABILIDAD,F_VIGENCIAINV=@F_VIGENCIAINV,TEMPERATURA=@TEMPERATURA, IUM = @IUM, MCADFRIO = @MCADFRIO, 	UNID_VENTA = @UNID_VENTA				
				WHERE IDARTICULO = @IDARTICULO
                --- STORRES - 20250507 -- SE AGREGA SOLUCION A LOS PROBLEMAS QUE EL CONTADOR ESTA EN NULL Y NO SE PUEDE INCREMENTAR AUTOMATICAMENTE EL ARTICULO
                IF (SELECT COALESCE(CONTADOR,0) FROM IART WHERE IDARTICULO = JSON_VALUE(@PARAMETROS, '$.IDARTICULOPRIN')) <= 0
                BEGIN
                    SELECT @IDITAR = IDITAR FROM IART WHERE  IDARTICULO = JSON_VALUE(@PARAMETROS, '$.IDARTICULOPRIN')
                    IF (SELECT COALESCE(MCNS,0)  FROM ITAR WHERE IDITAR = @IDITAR) = 1
                    BEGIN
                        UPDATE IART SET CONTADOR = COALESCE(CONTADOR, 0) + COALESCE(( SELECT MAX(CAST(LTRIM(RTRIM(SUBSTRING(IDARTICULO, CHARINDEX('-', IDARTICULO) + 1, LEN(IDARTICULO)))) AS INT))
                                                                                      FROM IART AS I2
                                                                                      WHERE I2.IDSERVICIO = JSON_VALUE(@PARAMETROS, '$.IDARTICULOPRIN')
                                                                                        AND CHARINDEX('-', I2.IDARTICULO) > 0
                                                                                        AND ISNUMERIC(LTRIM(RTRIM(SUBSTRING(IDARTICULO, CHARINDEX('-', IDARTICULO) + 1, LEN(IDARTICULO))))) = 1
                                                                                 ), 1)
                        WHERE IDARTICULO = JSON_VALUE(@PARAMETROS, '$.IDARTICULOPRIN')
                    END
                END
                --- STORRES - 20250507  -- SE AGREGA SOLUCION A LOS PROBLEMAS QUE EL CONTADOR ESTA EN NULL Y NO SE PUEDE INCREMENTAR AUTOMATICAMENTE EL ARTICULO
			END TRY

			BEGIN CATCH
				INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE()
			END CATCH

			IF (SELECT COUNT(*) FROM @TBLERRORES)> 0
			BEGIN
				SELECT 'KO' OK
				SELECT ERROR FROM @TBLERRORES
				RETURN
			END
			SELECT 'OK' OK 
			RETURN
		END
	END
	
	IF @METODO = 'ELIMINAR'
	BEGIN
		SELECT 'KO' OK
		SELECT 'NO ESTA PERMITIDO ELIMINAR ARTICULOS' AS ERROR
		RETURN
		BEGIN TRY
			SELECT @IDARTICULO = JSON_VALUE(@PARAMETROS, '$.IDARTICULO')

			INSERT INTO @TBLERRORES(ERROR) 
			SELECT 'EL ARTICULO SE ENCUENTRA EN BODEGAS (IDXB)'
			WHERE EXISTS (SELECT * FROM IDXB WHERE IDARTICULO = @IDARTICULO)

			IF(SELECT COUNT(*) FROM @TBLERRORES) <=0
			BEGIN
				DELETE FROM IART WHERE IDARTICULO = @IDARTICULO
			END		
		END TRY

		BEGIN CATCH
			INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE()
		END CATCH

		IF(SELECT COUNT(*) FROM @TBLERRORES) >0
		BEGIN
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END

		SELECT 'OK' OK
	END

	IF @METODO = 'ESTABLECER_ESTANTE'
	BEGIN
		SELECT	 @IDBODEGA = JSON_VALUE(@PARAMETROS,'$.IDBODEGA')
				,@IDARTICULO = JSON_VALUE(@PARAMETROS,'$.IDARTICULO')
				,@ESTANTE = JSON_VALUE(@PARAMETROS,'$.ESTANTE')

	
		INSERT INTO IARTE(IDBODEGA,IDARTICULO,ESTANTE)
		SELECT @IDBODEGA, @IDARTICULO, @ESTANTE
		WHERE NOT EXISTS(
			SELECT 1 FROM IARTE WHERE IDBODEGA=@IDBODEGA AND IDARTICULO=@IDARTICULO AND ESTANTE=@ESTANTE
		)

		UPDATE IARTE SET ESTANTE = @ESTANTE WHERE IDBODEGA=@IDBODEGA AND IDARTICULO=@IDARTICULO

		SELECT 'OK' AS OK

	END

	IF @METODO = 'GUARDAR_FABRICANTE'
	BEGIN
		BEGIN TRY
			DECLARE @IDTERCERO VARCHAR (20) = JSON_VALUE(@PARAMETROS, '$.IDTERCERO')
			DECLARE @TIPOREGIMEN VARCHAR (1) = JSON_VALUE(@PARAMETROS, '$.TIPOREGIMEN')
			DECLARE @RAZONSOCIAL VARCHAR (120) = JSON_VALUE(@PARAMETROS, '$.RAZONSOCIAL')
			DECLARE @TELEFONOS VARCHAR (35) = JSON_VALUE(@PARAMETROS, '$.TELEFONOS')
			DECLARE @DIRECCION VARCHAR (60) = JSON_VALUE(@PARAMETROS, '$.DIRECCION')
			SELECT @ESTADO = JSON_VALUE(@PARAMETROS, '$.ESTADO')

			INSERT INTO @TBLERRORES(ERROR) 
			SELECT 'EL TERCERO YA SE ENCUENTRA REGISTRADO'
			WHERE EXISTS (SELECT * FROM TER WHERE IDTERCERO = @IDTERCERO)

			IF(SELECT COUNT(*) FROM @TBLERRORES) <=0
			BEGIN
				INSERT INTO TER (IDTERCERO ,RAZONSOCIAL ,NIT, TIPOREGIMEN ,DIRECCION ,TELEFONOS , ESTADO )   
				SELECT @IDTERCERO, @RAZONSOCIAL,@IDTERCERO, @TIPOREGIMEN, @DIRECCION, @TELEFONOS, @ESTADO

				INSERT INTO TEXCA (IDTERCERO ,IDCATEGORIA ,ESTADO)   
				SELECT @IDTERCERO, DBO.FNK_VALORVARIABLE('TERCATFABRICANTE'),@ESTADO
			END		
		END TRY

		BEGIN CATCH
			INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE()
		END CATCH

		IF(SELECT COUNT(*) FROM @TBLERRORES) >0
		BEGIN
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END

		SELECT 'OK' OK
	END

   IF @METODO = 'TRANSFERIR_ARTICULO'
	BEGIN
		BEGIN TRY
			SELECT @IDARTICULO_ORI  = JSON_VALUE(@PARAMETROS, '$.IDARTICULO'), @IDARTICULO_DES = JSON_VALUE(@PARAMETROS, '$.IDARTICULO_DESTINO')

			IF COALESCE(@IDARTICULO_ORI, '') = ''
		   BEGIN
			   SELECT 'KO' OK
			   SELECT 'EL ARTICULO DE ORIGEN ES OBLIGATORIO' ERROR
			   RETURN
		   END

         IF COALESCE(@IDARTICULO_DES, '') = ''
		   BEGIN
			   SELECT 'KO' OK
			   SELECT 'EL ARTICULO DE DESTINO ES OBLIGATORIO' ERROR
			   RETURN
		   END

         UPDATE IART SET IDSERVICIO = @IDARTICULO_DES WHERE IDARTICULO = @IDARTICULO_ORI
         UPDATE SER SET IDREFERENCIA = @IDARTICULO_DES WHERE IDSERVICIO = @IDARTICULO_ORI
		END TRY

		BEGIN CATCH
			INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE()
		END CATCH

		IF(SELECT COUNT(*) FROM @TBLERRORES) >0
		BEGIN
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END

		SELECT 'OK' OK
	END
   IF @METODO='EXPORTAR'     
   BEGIN         
      SELECT @IDITAR = IDITAR, @ESTADO = ESTADO    
      FROM   OPENJSON (@PARAMETROS)
      WITH (           
      IDITAR  VARCHAR(20)   '$.IDITAR',
      ESTADO  VARCHAR(20)   '$.ESTADO'
      )
      SELECT 'OK' OK
      SELECT IART.IDARTICULO,IART.DESCRIPCION,IART.IDITAR,ITAR.DESCRIPCION,IART.IDCLASE,ICLA.DESCRIPCION AS DESCLASE,IART.IDSUBCLASE,ICLAH.DESCRIPCION AS DESCSUBCLASE,
      IART.IDGRUPO,IGRU.DESCRIPCION AS DESCGRUPO,IART.IDPRINACTIVO,IPAC.DESCRIPCION AS DESCPRINCIPIO,IART.IDFORFARM, IFFA.DESCRIPCION AS DESCFORMAFAR,IART.IDUNIDAD,
      IUNI.DESCRIPCION AS DESCUNIDAD,IART.PCOSTO,IART.IDGENERICO,IGEN.DESCRIPCION AS DESCGENERICO,IART.CODCUM,IART.REGINVIMA,IART.UNID_VENTA
      FROM IART  INNER JOIN ITAR ON IART.IDITAR=ITAR.IDITAR
                  LEFT JOIN ICLA ON IART.IDCLASE=ICLA.IDCLASE
                  LEFT JOIN ICLAH ON IART.IDSUBCLASE=ICLAH.IDSUBCLASE AND IART.IDCLASE=ICLAH.IDCLASE
                  LEFT JOIN IGRU  ON IART.IDGRUPO=IGRU.IDGRUPO
                  LEFT JOIN IPAC  ON IART.IDPRINACTIVO=IPAC.IDPRINACTIVO
                  LEFT JOIN IFFA  ON IART.IDFORFARM=IFFA.IDFORFARM
                  LEFT JOIN ICCN  ON IART.IDCONCENTRA=ICCN.IDCONCENTRA
                  LEFT JOIN IUNI  ON IART.IDUNIDAD=IUNI.IDUNIDAD
                  LEFT JOIN IGEN  ON IART.IDGENERICO=IGEN.IDGENERICO
      WHERE IART.IDITAR= CASE WHEN COALESCE(@IDITAR,'')<>'' THEN  @IDITAR ELSE IART.IDITAR END
      AND IART.ESTADO=CASE WHEN COALESCE(@ESTADO,'Todos')<>'Todos' THEN @ESTADO ELSE IART.ESTADO END
      RETURN
   END  
END






