CREATE OR ALTER PROCEDURE DBO.SPQ_IZSOL_2
@JSON  NVARCHAR(MAX) 
WITH
ENCRYPTION 
AS
DECLARE  @PARAMETROS      NVARCHAR(MAX)	,@MODELO           VARCHAR(100)    ,@METODO         VARCHAR(100)   ,@USUARIO         VARCHAR(12)
		  ,@GRUPO           VARCHAR(8)		,@SYS_COMPUTERNAME VARCHAR(254)    ,@IDSEDE         VARCHAR(5)     ,@USUNOMBRE       VARCHAR(100)
        ,@SEDE            VARCHAR(5)      ,@FECHA            VARCHAR(10)     ,@IDEMEDICA      VARCHAR(4)	    ,@FECHA1          DATETIME
        ,@SQL             VARCHAR(MAX)    ,@USUENTREGADO     VARCHAR(20)     ,@CODCAJERO	    VARCHAR(20)	 ,@COMPANIA	       VARCHAR(10)
        ,@IDAFILIADO      VARCHAR(20)	   ,@IDMEDICO	       VARCHAR(20)     ,@FECHAINI       DATE	          ,@CNSMOV          VARCHAR(20)
        ,@DATO            INT             ,@IDARTICULO	    VARCHAR(20)     ,@NOLOTE		    VARCHAR(20)	 ,@NOLOTEPEDIDO    VARCHAR(20)
        ,@IDBODEGA	     VARCHAR(20)     ,@CNSIZSOL	       VARCHAR(20)     ,@NODOCUMENTO    VARCHAR(20)	 ,@PVENTA          DECIMAL(14,2)	
        ,@dataNota        NVARCHAR(MAX)	,@PROCESO          VARCHAR(20)	  ,@NOITEM         INT            ,@ESTADO          VARCHAR(20)
        ,@IX              VARCHAR(20)     ,@NOADMISION       VARCHAR(20)     ,@IDTERCERO      VARCHAR(20)	 ,@CONSECUTIVOHC   VARCHAR(20)
        ,@CONSECUTIVOCIT  VARCHAR(20)	   ,@IDAUT            VARCHAR(20)	  ,@NOAUT          VARCHAR(20)	 ,@NOITEMS         INT	
        ,@VLR_TOTAL       DECIMAL(14,2)	,@IDPLAN           VARCHAR(20)	  ,@WHERE_DATA     VARCHAR(500)   ,@sqlCommand      Nvarchar(max)	
        ,@IDARTICULOREAL  VARCHAR(50)     ,@CANTIDAD_ENTREGADA INT           ,@CANTIDAD       INT            ,@CANTIDAD_SOL    INT
        ,@CANTIDAD_ANT    INT             ,@CNSIZSOLD        VARCHAR(50)     ,@FILTRO VARCHAR(MAX)           ,@DATOS           VARCHAR(MAX)
        DECLARE @TABLERRR		 TABLE (ERROR VARCHAR(200))
BEGIN 
	SET LANGUAGE Spanish;  
	SET DATEFORMAT dmy
	SELECT *
	INTO #JSON
	FROM OPENJSON (@json)
	WITH (
		MODELO         VARCHAR(100)     '$.MODELO',
		METODO         VARCHAR(100)     '$.METODO',
		USUARIO        VARCHAR(12)      '$.USUARIO',
		PARAMETROS     NVARCHAR(MAX)  AS JSON
	)

	SELECT @MODELO = MODELO , @METODO = METODO , @PARAMETROS = PARAMETROS, @USUARIO = USUARIO
	FROM #JSON
	--DEFINICION DE TABLA DE ERRORES
	DECLARE @TBLERRORES TABLE(ERROR VARCHAR(200));
	-- TOMA DEL GRUPO, SYS_COMPUTERNAME, SEDE   DE ACUERDO AL USUARIOpl,   --PRINT 'USUARIO:'+@USUARIO
	SELECT @GRUPO = DBO.FNK_DESCIFRAR(GRUPO), @USUNOMBRE = NOMBRE FROM USUSU WHERE USUARIO = @USUARIO
	SELECT @SYS_COMPUTERNAME = SYS_COMPUTERNAME, @COMPANIA = COMPANIA, @CODCAJERO= CODCAJERO FROM USUSU WHERE USUARIO = @USUARIO
	SELECT @IDSEDE = IDSEDE, @SEDE = IDSEDE FROM UBEQ WHERE SYS_ComputerName = @SYS_COMPUTERNAME
	PRINT '@USUARIO='+@USUARIO


	IF @METODO = 'AUTORIZAR'
	BEGIN
		SELECT @CNSMOV = CNSMOV, @IDARTICULO = IDARTICULO, @NOLOTE=NOLOTE, @NOLOTEPEDIDO = NOLOTEPEDIDO, @IDBODEGA = IDBODEGA, @DATO = DATO
		FROM OPENJSON(@PARAMETROS)
		WITH( CNSMOV		VARCHAR(20)		'$.CNSMOV'
		,IDARTICULO			VARCHAR(20)		'$.IDARTICULO'
		,NOLOTE				VARCHAR(20)		'$.NOLOTE'
		,NOLOTEPEDIDO		VARCHAR(20)		'$.NOLOTEPEDIDO'
		,IDBODEGA			VARCHAR(20)		'$.IDBODEGA'
		,DATO				INT				'$.DATO'
		)

		IF (SELECT COUNT(*) FROM @TBLERRORES)> 0
		BEGIN
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END
		ELSE
		BEGIN
			BEGIN TRY
				IF @DATO = 1
				BEGIN
					PRINT '1'
					UPDATE IMOVH SET IMOVH.AUTORIZADO = 1, IMOVH.USUAUTORIZA = @USUARIO WHERE IMOVH.CNSMOV = @CNSMOV AND IMOVH.NOLOTE = @NOLOTE AND IMOVH.NOLOTEPEDIDO = @NOLOTEPEDIDO
				END
				IF @DATO = 2
				BEGIN
					PRINT '2'
					UPDATE IMOVH SET IMOVH.AUTORIZADO = 1, IMOVH.USUAUTORIZA = @USUARIO WHERE IMOVH.CNSMOV = @CNSMOV AND COALESCE(IMOVH.AUTORIZADO,0) <> 1
				END
				IF @DATO = 3
				BEGIN
					PRINT '3'
					UPDATE IMOVH SET IMOVH.AUTORIZADO = 0, IMOVH.USUAUTORIZA = 'Sin Autorizardor' WHERE IMOVH.CNSMOV = @CNSMOV AND IMOVH.NOLOTE = @NOLOTE AND IMOVH.NOLOTEPEDIDO = @NOLOTEPEDIDO
				END
			
			END TRY  
			BEGIN CATCH 
				INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE() ;  
			END CATCH  
			IF (SELECT COUNT(*) FROM @TBLERRORES)> 0
			BEGIN
				SELECT 'KO' OK
				SELECT ERROR FROM @TBLERRORES
				RETURN
			END
			SELECT 'OK'OK
		END 
	END
	IF @METODO = 'TERMINAR_ENTREGA'
	BEGIN
		SELECT @CNSIZSOL = CNSIZSOL , @IDBODEGA = IDBODEGA
		FROM OPENJSON(@PARAMETROS)
		WITH( CNSIZSOL		VARCHAR(20)		 '$.CNSIZSOL'
				,IDBODEGA		VARCHAR(20)		 '$.IDBODEGA')
		SELECT @DATO =  COALESCE(PAUTO,0), @NODOCUMENTO = CNSIZSOL  FROM IZSOL WHERE CNSIZSOL = @CNSIZSOL
		DECLARE @OMAR VARCHAR(10)='SI'

		IF @DATO IN (0,3) AND NOT EXISTS (SELECT * FROM IMOVH WHERE CNSMOV IN (SELECT CNSMOV FROM IMOV WHERE NODOCUMENTO = @NODOCUMENTO) )
		BEGIN
			INSERT INTO @TBLERRORES(ERROR) SELECT 'No Hay Items Para Autorizar.. Revise la Entrega'
		END
		IF @DATO = 1 AND EXISTS (SELECT * FROM IMOVH WHERE CNSMOV IN (SELECT CNSMOV FROM IMOV WHERE NODOCUMENTO = @NODOCUMENTO) AND COALESCE(IMOVH.AUTORIZADO,0) = 0 )
		BEGIN
			INSERT INTO @TBLERRORES(ERROR) SELECT 'Existen items pendientes  por definir.. Revise la entrega'
		END
		IF @DATO = 1 AND NOT EXISTS (SELECT * FROM IZSOLNOT WHERE CNSIZSOL = @CNSIZSOL AND COALESCE(AUTOENTREGA,'NO') = 'SI')
		BEGIN
			INSERT INTO @TBLERRORES(ERROR) SELECT 'No se ha realizado la respectiva anotación en el seguimiento de Entrega o el Usuario no acepto la entrega, Revise'
		END
		IF @DATO = 1 AND EXISTS (SELECT * FROM IMOVH WHERE CNSMOV IN (SELECT CNSMOV FROM IMOV WHERE NODOCUMENTO = @NODOCUMENTO) AND COALESCE(IMOVH.PVENTA,0) <= 0 AND COALESCE(COBRACOPA,0) = 1 )
		BEGIN
			INSERT INTO @TBLERRORES(ERROR) SELECT 'Existen items que no tienen precio de venta. Comuniquese con el area de contratación.'
		END
		IF (SELECT COUNT(*) FROM @TBLERRORES)> 0
		BEGIN
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END
		ELSE
		BEGIN
			BEGIN TRY
				IF @DATO = 1
				BEGIN
					PRINT '1111'
					SELECT @NOADMISION = NOADMISION FROM IZSOL WHERE   CNSIZSOL = @CNSIZSOL
					SELECT TOP 1 @CNSMOV = CNSMOV  FROM IMOV WHERE NODOCUMENTO = @NODOCUMENTO AND COALESCE(IMOV.ESTADO,0) = 0 

					SELECT @IX = (SELECT DBO.FNK_VALORVARIABLE('IXCOUNTRY'))
					IF @IX='PERU' 
					BEGIN
						SELECT * INTO #AUT FROM AUT  WHERE NOAUT=@NOADMISION 
						SELECT @IDTERCERO=IDTERCEROCA,@IDPLAN=IDPLAN,@CONSECUTIVOHC=CONSECUTIVOHCA FROM AUT WHERE NOAUT=@NOADMISION
						IF COALESCE(@CONSECUTIVOHC,'')<>''
						BEGIN
						SELECT @CONSECUTIVOCIT=CONSECUTIVOCIT  FROM HCA WHERE CONSECUTIVO=@CONSECUTIVOHC
						END
						PRINT 'SERVICIOS AFECTOS'
						IF EXISTS(SELECT * FROM IMOVH INNER JOIN SER ON IMOVH.IDARTICULO=SER.IDSERVICIO WHERE IMOVH.CNSMOV = @CNSMOV AND COALESCE(SER.IVA,'')='SER' AND COALESCE(SER.IDIMPUESTO,'')<>'' AND COALESCE(SER.IDCLASE,'')<>'' AND COALESCE(ESPART,0)=0)
						BEGIN
							SELECT @IDAUT = SPACE(20)
							EXEC SPK_GENCONSECUTIVO @COMPANIA,@SEDE,'@AUT',@IDAUT OUTPUT
							SELECT @IDAUT = @SEDE + REPLACE(SPACE(8 - LEN(@IDAUT))+LTRIM(RTRIM(@IDAUT)), SPACE(1),0)

							PRINT '@IDAUT===>'+@IDAUT
							PRINT 'B0B8EFDC'
							SELECT @NOAUT = SPACE(20)
							EXEC SPK_GENCONSECUTIVO @COMPANIA,@SEDE,'@AUTF',@NOAUT OUTPUT
							SELECT @NOAUT = @SEDE + REPLACE(SPACE(8 - LEN(@NOAUT))+LTRIM(RTRIM(@NOAUT)), SPACE(1),0)

							INSERT INTO AUTD (IDAUT, NO_ITEM, IDSERVICIO, CANTIDAD, VALOR, VALORCOPAGO, VALORCOPAGOCOSTO, VALOREXCEDENTE, VALORTOTALCOSTO, IDPLAN, IMPRESO, AUTORIZADO, 
										COMENTARIOS, PCOBERTURA, OBS, NORDEN, CCOSTO,  CODIGOCPCJ, MARCAPAGO, NOAUTORIZEXT, ESDELAB, ENLAB, IDTERCEROCA, IDCONTRATO, FACTURADA, 
										N_FACTURA, CNSFCT, AQUIENCOBRO, MARCACOPAGOORDEN, VALORPROV, PCOSTO, ITFC, CNSITFC, SYS_COMPUTERNAME,  NOCOBRABLE, MDOSIFICACION, CANTIDIA, 
										DIAS, FRECUENCIA, CODCUPS, POSOLOGIA, SINCRONIZADO, APOYODG_AMBITO, CITAAUTORIZADA, DOSISAPL, DURACIONTTOF, DURACIONTTOC, CLASEPOSOLOGIA,  
										MARCA, USUARIOMARCA, NUM_ORDEN, PROCESADA, PRIORIDAD, HOMOLOGO, IDSERVICIOH, CANTIDADH, VALORHOMO, NO_ITEMH, N_FACTURAORI, DESCUENTO, 
										TIPODTO, CNSFMED, F_INGLAB, F_SALILAB,  IDARTICULO, IMPORTADO, NFACTURA )
							SELECT      @IDAUT, ROW_NUMBER() OVER(ORDER  BY IMOVH.IDARTICULO  ASC), IMOVH.IDARTICULO, IMOVH.CANTIDAD, PVENTA, VLR_COPAGO*IMOVH.CANTIDAD, 0, (PVENTA*IMOVH.CANTIDAD)-COALESCE(VLR_COPAGO,0),
										(IMOVH.CANTIDAD*IMOVH.PCOSTO), @IDPLAN, 0, 1, NULL, 100, NULL, NULL, NULL,  NULL, NULL, NULL, 0, 0, @IDTERCERO, NULL, 0, 
										NULL, NULL, NULL, NULL, NULL, IMOVH.PCOSTO, NULL, NULL, @SYS_COMPUTERNAME,  NULL, NULL, NULL, 
										NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
										'V', NULL, NULL, NULL,  IART.IDSERVICIO, NULL, NULL
							FROM IMOVH INNER JOIN IART ON IMOVH.IDARTICULO=IART.IDARTICULO
										INNER JOIN SER ON  IMOVH.IDARTICULO=SER.IDSERVICIO 
							WHERE CNSMOV=@CNSMOV
							AND COALESCE(SER.IVA,'')='SER' 
							AND COALESCE(SER.IDIMPUESTO,'')<>'' 
							AND COALESCE(SER.IDCLASE,'')<>''
							AND COALESCE(ESPART,0)=0

							PRINT '@NOAUT='+@NOAUT

							UPDATE #AUT SET IDAUT=@IDAUT,NOAUT=@NOAUT,CONSECUTIVOCIT=@CONSECUTIVOCIT,FACTURADA=0,N_FACTURA=NULL,ESTADO='Pendiente' WHERE 1=1
							INSERT INTO AUT(IDAUT, NOAUT, FECHA, FECHAVENCE, FECHASOL, IDAFILIADO, NUMCARNET, IDPLAN, PREFIJO, IDSEDE, IDSEDEORIGEN, TIPOAUTORIZACION, 
											ALTOCOSTO, ATENCION, URGENCIA, IMPUTABLE_A, IDSOLICITANTE,  IDPROVEEDOR, ESTADO, CONSANULADO, IDOPERADORANULA, FECHAANULA, 
											CAUSALANULA, NO_ITEMES, VALORTOTAL, VALORCOPAGO, VALORBENEFICIO, VALOREXEDENTE, VALORTOTALCOSTO, VALORCOPAGOCOSTO,  IMPRESO,
											CXPGEN, CXCGEN, AUTORIZADOPOR, NUMAUTORIZA, FECHAAUTORIZA, AUTORIZADO, IDPESPECIAL, IDESTADOE, USUARIO, RECOBRARA, FUENTE, 
											IDCAUSAEXT, AMBITO, FINALIDAD, PERSONAL_AT, DXPPAL,  DXRELACIONADO, COMPLICACION, FORMAQX, TIPOURGENCIA, SPD, NORECIBOCAJA, 
											CLASEORDEN, GENEROCAJA, IDCONTRATANTE, TIPOCOPAGO, PEDIDOINV, ENVIO, OBS, ESCONTINUACION, NOAUTORIGEN,  SEMANASCOT, LIQUIDAPC, 
											OBSDX, COMITE, CERTIFICACION, IDCLASEAUT, CLASECONT, ESDEINV, NOGENERACIONOPS, FECHAGEN, CNSAFIAA, PROCEDENCIA, IDAREAH, 
											IDAREA, CCOSTO, SUBCCOSTO, NIVELATENCION,  FACTURADA, N_FACTURA, CNSFCT, VFACTURAS, FACTURABLE, DESCUENTO, TIPODTO, MARCAFAC, 
											IDIPS, CLASECONTRATO, ENPAQUETE, IDCIRUGIA, SOAT, NOADMISION, IDCONTRATO, RUBRO, CLASERUBRO,  PERIODICIDAD, CNSFACT, 
											CONTINUACION, VLRUTOTRA, TIPOCONT, DXRELACIONADO2, FECHACOMITE, IDALTERNA, MARCAENV, COPAGOPROPIO, CNSHACTRAN, ESDELAB, ENLAB,
											COBRARA, IDTERCEROCA, CONSECUTIVOHCA,  RAZONANULACION, PIDECCOSTO, FECHAREALIZACION, CODCAJA, TIPOCAJA, IDGRUPOSER, PEXTERNA, 
											AQUIENCOBRO, CODUNG, CODPRG, ITFC, CNSITFC, SYS_COMPUTERNAME, CNSLABCOR, TIPOUSUARIO,  NOADMISIONCE, INDLABCORE, CERRADA, 
											CONTABILIZADA, NROCOMPROBANTE, MARCACONT, SINCRONIZADO, IDPLAN_AFI, IDTERCERO_AFI, USUARIONOFACTURABLE, FECHA_NOFAC, RIESGO, 
											IDSUCURSAL,  CIUDAD, FUNCIONARIO_AUT, IDIPSSOLICITA, IDMEDICOSOLICITA, DIRECCION, ORIGEN, VLRDEPOSITOS, NOTIFICADO, ENTREGADO,
											FENTREGA, UENTREGA, TIPOAFILIADO, MENTREGA, NRO_ENTREGA, CANT_ENTREGAS,  RUBRO_ID, IDFIRMAPTE, IDFIRMARESP, CNSMOV, 
											CONSECUTIVOCIT)
							SELECT @IDAUT, @NOAUT, DBO.FNK_GETDATE(), DBO.FNK_GETDATE()+30, DBO.FNK_GETDATE(), IDAFILIADO, NUMCARNET, IDPLAN, PREFIJO, IDSEDE, IDSEDEORIGEN, TIPOAUTORIZACION, 
											ALTOCOSTO, ATENCION, URGENCIA, IMPUTABLE_A, IDSOLICITANTE,  IDPROVEEDOR, ESTADO, CONSANULADO, IDOPERADORANULA, FECHAANULA, 
											CAUSALANULA, NO_ITEMES, 0, 0, VALORBENEFICIO, VALOREXEDENTE, VALORTOTALCOSTO, VALORCOPAGOCOSTO,  0,
											CXPGEN, CXCGEN, AUTORIZADOPOR, NUMAUTORIZA, FECHAAUTORIZA, AUTORIZADO, IDPESPECIAL, IDESTADOE, @USUARIO, RECOBRARA, FUENTE, 
											IDCAUSAEXT, AMBITO, FINALIDAD, PERSONAL_AT, DXPPAL,  DXRELACIONADO, COMPLICACION, FORMAQX, TIPOURGENCIA, SPD, NULL, 
											CLASEORDEN, GENEROCAJA, IDCONTRATANTE, TIPOCOPAGO, 1, ENVIO, OBS, ESCONTINUACION, NOAUTORIGEN,  SEMANASCOT, LIQUIDAPC, 
											OBSDX, COMITE, CERTIFICACION, IDCLASEAUT, CLASECONT, 1, NOGENERACIONOPS, FECHAGEN, CNSAFIAA, PROCEDENCIA, IDAREAH, 
											IDAREA, CCOSTO, SUBCCOSTO, NIVELATENCION,  FACTURADA, N_FACTURA, CNSFCT, VFACTURAS, FACTURABLE, DESCUENTO, TIPODTO, MARCAFAC, 
											IDIPS, CLASECONTRATO, ENPAQUETE, IDCIRUGIA, SOAT, NOADMISION, IDCONTRATO, RUBRO, CLASERUBRO,  PERIODICIDAD, CNSFACT, 
											CONTINUACION, VLRUTOTRA, TIPOCONT, DXRELACIONADO2, FECHACOMITE, IDALTERNA, MARCAENV, COPAGOPROPIO, CNSHACTRAN, ESDELAB, ENLAB,
											COBRARA, IDTERCEROCA, @CONSECUTIVOHC,  RAZONANULACION, PIDECCOSTO, FECHAREALIZACION, NULL, NULL, IDGRUPOSER, PEXTERNA, 
											AQUIENCOBRO, CODUNG, CODPRG, ITFC, CNSITFC, SYS_COMPUTERNAME, CNSLABCOR, TIPOUSUARIO,  NOADMISIONCE, INDLABCORE, CERRADA, 
											0, NULL, 0, SINCRONIZADO, IDPLAN_AFI, IDTERCERO_AFI, USUARIONOFACTURABLE, FECHA_NOFAC, RIESGO, 
											IDSUCURSAL,  CIUDAD, FUNCIONARIO_AUT, IDIPSSOLICITA, IDMEDICOSOLICITA, DIRECCION, ORIGEN, VLRDEPOSITOS, NOTIFICADO, ENTREGADO,
											FENTREGA, UENTREGA, TIPOAFILIADO, MENTREGA, NRO_ENTREGA, CANT_ENTREGAS,  RUBRO_ID, IDFIRMAPTE, IDFIRMARESP, CNSMOV, 
											@CONSECUTIVOCIT
							FROM #AUT

							SELECT @NOITEMS=COUNT(*) FROM AUTD WHERE IDAUT=@IDAUT
							SELECT @VLR_TOTAL=SUM(VALOR*CANTIDAD) FROM AUTD WHERE IDAUT=@IDAUT

							UPDATE AUT SET NO_ITEMES=@NOITEMS,VALORTOTAL=@VLR_TOTAL,VALOREXEDENTE=@VLR_TOTAL WHERE IDAUT=@IDAUT 

							UPDATE IMOVH SET NOPRESTACION= @IDAUT
							FROM IMOVH INNER JOIN IART ON IMOVH.IDARTICULO=IART.IDARTICULO
										INNER JOIN SER ON  IMOVH.IDARTICULO=SER.IDSERVICIO 
							WHERE CNSMOV=@CNSMOV
							AND COALESCE(SER.IVA,'')='SER'
							AND COALESCE(SER.IDIMPUESTO,'')<>'' 
							AND COALESCE(SER.IDCLASE,'')<>''
							AND COALESCE(ESPART,0)=0

						END
						PRINT 'SERVICIOS INAFECTOS...'
						IF EXISTS(SELECT * FROM IMOVH INNER JOIN SER ON IMOVH.IDARTICULO=SER.IDSERVICIO WHERE IMOVH.CNSMOV = @CNSMOV AND COALESCE(SER.IVA,'No')='No'   AND COALESCE(ESPART,0)=0)
						BEGIN
							SELECT @IDAUT = SPACE(20)
							EXEC SPK_GENCONSECUTIVO @COMPANIA,@SEDE,'@AUT',@IDAUT OUTPUT
							SELECT @IDAUT = @SEDE + REPLACE(SPACE(8 - LEN(@IDAUT))+LTRIM(RTRIM(@IDAUT)), SPACE(1),0)

							PRINT '@IDAUT===>'+@IDAUT
   
							SELECT @NOAUT = SPACE(20)
							EXEC SPK_GENCONSECUTIVO @COMPANIA,@SEDE,'@AUTF',@NOAUT OUTPUT
							SELECT @NOAUT = @SEDE + REPLACE(SPACE(8 - LEN(@NOAUT))+LTRIM(RTRIM(@NOAUT)), SPACE(1),0)

							INSERT INTO AUTD (IDAUT, NO_ITEM, IDSERVICIO, CANTIDAD, VALOR, VALORCOPAGO, VALORCOPAGOCOSTO, VALOREXCEDENTE, VALORTOTALCOSTO, IDPLAN, IMPRESO, AUTORIZADO, 
										COMENTARIOS, PCOBERTURA, OBS, NORDEN, CCOSTO,  CODIGOCPCJ, MARCAPAGO, NOAUTORIZEXT, ESDELAB, ENLAB, IDTERCEROCA, IDCONTRATO, FACTURADA, 
										N_FACTURA, CNSFCT, AQUIENCOBRO, MARCACOPAGOORDEN, VALORPROV, PCOSTO, ITFC, CNSITFC, SYS_COMPUTERNAME,  NOCOBRABLE, MDOSIFICACION, CANTIDIA, 
										DIAS, FRECUENCIA, CODCUPS, POSOLOGIA, SINCRONIZADO, APOYODG_AMBITO, CITAAUTORIZADA, DOSISAPL, DURACIONTTOF, DURACIONTTOC, CLASEPOSOLOGIA,  
										MARCA, USUARIOMARCA, NUM_ORDEN, PROCESADA, PRIORIDAD, HOMOLOGO, IDSERVICIOH, CANTIDADH, VALORHOMO, NO_ITEMH, N_FACTURAORI, DESCUENTO, 
										TIPODTO, CNSFMED, F_INGLAB, F_SALILAB,  IDARTICULO, IMPORTADO, NFACTURA )
							SELECT      @IDAUT, ROW_NUMBER() OVER(ORDER  BY IMOVH.IDARTICULO  ASC), IMOVH.IDARTICULO, IMOVH.CANTIDAD, PVENTA, VLR_COPAGO*IMOVH.CANTIDAD, 0, (PVENTA*IMOVH.CANTIDAD)-COALESCE(VLR_COPAGO,0),
										(IMOVH.CANTIDAD*IMOVH.PCOSTO), @IDPLAN, 0, 1, NULL, 100, NULL, NULL, NULL,  NULL, NULL, NULL, 0, 0, @IDTERCERO, NULL, 0, 
										NULL, NULL, NULL, NULL, NULL, IMOVH.PCOSTO, NULL, NULL, @SYS_COMPUTERNAME,  NULL, NULL, NULL, 
										NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
										'V', NULL, NULL, NULL,  IART.IDSERVICIO, NULL, NULL
							FROM IMOVH INNER JOIN IART ON IMOVH.IDARTICULO=IART.IDARTICULO
										INNER JOIN SER ON  IMOVH.IDARTICULO=SER.IDSERVICIO 
							WHERE CNSMOV=@CNSMOV
							AND COALESCE(SER.IVA,'No')='No' 
							AND COALESCE(ESPART,0)=0

							PRINT '@NOAUT='+@NOAUT

							UPDATE #AUT SET IDAUT=@IDAUT,NOAUT=@NOAUT,CONSECUTIVOCIT=@CONSECUTIVOCIT,FACTURADA=0,N_FACTURA=NULL WHERE 1=1
							INSERT INTO AUT(IDAUT, NOAUT, FECHA, FECHAVENCE, FECHASOL, IDAFILIADO, NUMCARNET, IDPLAN, PREFIJO, IDSEDE, IDSEDEORIGEN, TIPOAUTORIZACION, 
											ALTOCOSTO, ATENCION, URGENCIA, IMPUTABLE_A, IDSOLICITANTE,  IDPROVEEDOR, ESTADO, CONSANULADO, IDOPERADORANULA, FECHAANULA, 
											CAUSALANULA, NO_ITEMES, VALORTOTAL, VALORCOPAGO, VALORBENEFICIO, VALOREXEDENTE, VALORTOTALCOSTO, VALORCOPAGOCOSTO,  IMPRESO,
											CXPGEN, CXCGEN, AUTORIZADOPOR, NUMAUTORIZA, FECHAAUTORIZA, AUTORIZADO, IDPESPECIAL, IDESTADOE, USUARIO, RECOBRARA, FUENTE, 
											IDCAUSAEXT, AMBITO, FINALIDAD, PERSONAL_AT, DXPPAL,  DXRELACIONADO, COMPLICACION, FORMAQX, TIPOURGENCIA, SPD, NORECIBOCAJA, 
											CLASEORDEN, GENEROCAJA, IDCONTRATANTE, TIPOCOPAGO, PEDIDOINV, ENVIO, OBS, ESCONTINUACION, NOAUTORIGEN,  SEMANASCOT, LIQUIDAPC, 
											OBSDX, COMITE, CERTIFICACION, IDCLASEAUT, CLASECONT, ESDEINV, NOGENERACIONOPS, FECHAGEN, CNSAFIAA, PROCEDENCIA, IDAREAH, 
											IDAREA, CCOSTO, SUBCCOSTO, NIVELATENCION,  FACTURADA, N_FACTURA, CNSFCT, VFACTURAS, FACTURABLE, DESCUENTO, TIPODTO, MARCAFAC, 
											IDIPS, CLASECONTRATO, ENPAQUETE, IDCIRUGIA, SOAT, NOADMISION, IDCONTRATO, RUBRO, CLASERUBRO,  PERIODICIDAD, CNSFACT, 
											CONTINUACION, VLRUTOTRA, TIPOCONT, DXRELACIONADO2, FECHACOMITE, IDALTERNA, MARCAENV, COPAGOPROPIO, CNSHACTRAN, ESDELAB, ENLAB,
											COBRARA, IDTERCEROCA, CONSECUTIVOHCA,  RAZONANULACION, PIDECCOSTO, FECHAREALIZACION, CODCAJA, TIPOCAJA, IDGRUPOSER, PEXTERNA, 
											AQUIENCOBRO, CODUNG, CODPRG, ITFC, CNSITFC, SYS_COMPUTERNAME, CNSLABCOR, TIPOUSUARIO,  NOADMISIONCE, INDLABCORE, CERRADA, 
											CONTABILIZADA, NROCOMPROBANTE, MARCACONT, SINCRONIZADO, IDPLAN_AFI, IDTERCERO_AFI, USUARIONOFACTURABLE, FECHA_NOFAC, RIESGO, 
											IDSUCURSAL,  CIUDAD, FUNCIONARIO_AUT, IDIPSSOLICITA, IDMEDICOSOLICITA, DIRECCION, ORIGEN, VLRDEPOSITOS, NOTIFICADO, ENTREGADO,
											FENTREGA, UENTREGA, TIPOAFILIADO, MENTREGA, NRO_ENTREGA, CANT_ENTREGAS,  RUBRO_ID, IDFIRMAPTE, IDFIRMARESP, CNSMOV, 
											CONSECUTIVOCIT)
							SELECT @IDAUT, @NOAUT, DBO.FNK_GETDATE(), DBO.FNK_GETDATE()+30, DBO.FNK_GETDATE(), IDAFILIADO, NUMCARNET, IDPLAN, PREFIJO, IDSEDE, IDSEDEORIGEN, TIPOAUTORIZACION, 
											ALTOCOSTO, ATENCION, URGENCIA, IMPUTABLE_A, IDSOLICITANTE,  IDPROVEEDOR, ESTADO, CONSANULADO, IDOPERADORANULA, FECHAANULA, 
											CAUSALANULA, NO_ITEMES, 0, 0, VALORBENEFICIO, VALOREXEDENTE, VALORTOTALCOSTO, VALORCOPAGOCOSTO,  0,
											CXPGEN, CXCGEN, AUTORIZADOPOR, NUMAUTORIZA, FECHAAUTORIZA, AUTORIZADO, IDPESPECIAL, IDESTADOE, @USUARIO, RECOBRARA, FUENTE, 
											IDCAUSAEXT, AMBITO, FINALIDAD, PERSONAL_AT, DXPPAL,  DXRELACIONADO, COMPLICACION, FORMAQX, TIPOURGENCIA, SPD, NULL, 
											CLASEORDEN, GENEROCAJA, IDCONTRATANTE, TIPOCOPAGO, 1, ENVIO, OBS, ESCONTINUACION, NOAUTORIGEN,  SEMANASCOT, LIQUIDAPC, 
											OBSDX, COMITE, CERTIFICACION, IDCLASEAUT, CLASECONT, 1, NOGENERACIONOPS, FECHAGEN, CNSAFIAA, PROCEDENCIA, IDAREAH, 
											IDAREA, CCOSTO, SUBCCOSTO, NIVELATENCION,  FACTURADA, N_FACTURA, CNSFCT, VFACTURAS, FACTURABLE, DESCUENTO, TIPODTO, MARCAFAC, 
											IDIPS, CLASECONTRATO, ENPAQUETE, IDCIRUGIA, SOAT, NOADMISION, IDCONTRATO, RUBRO, CLASERUBRO,  PERIODICIDAD, CNSFACT, 
											CONTINUACION, VLRUTOTRA, TIPOCONT, DXRELACIONADO2, FECHACOMITE, IDALTERNA, MARCAENV, COPAGOPROPIO, CNSHACTRAN, ESDELAB, ENLAB,
											COBRARA, IDTERCEROCA, @CONSECUTIVOHC,  RAZONANULACION, PIDECCOSTO, FECHAREALIZACION, NULL, NULL, IDGRUPOSER, PEXTERNA, 
											AQUIENCOBRO, CODUNG, CODPRG, ITFC, CNSITFC, SYS_COMPUTERNAME, CNSLABCOR, TIPOUSUARIO,  NOADMISIONCE, INDLABCORE, CERRADA, 
											0, NULL, 0, SINCRONIZADO, IDPLAN_AFI, IDTERCERO_AFI, USUARIONOFACTURABLE, FECHA_NOFAC, RIESGO, 
											IDSUCURSAL,  CIUDAD, FUNCIONARIO_AUT, IDIPSSOLICITA, IDMEDICOSOLICITA, DIRECCION, ORIGEN, VLRDEPOSITOS, NOTIFICADO, ENTREGADO,
											FENTREGA, UENTREGA, TIPOAFILIADO, MENTREGA, NRO_ENTREGA, CANT_ENTREGAS,  RUBRO_ID, IDFIRMAPTE, IDFIRMARESP, CNSMOV, 
											@CONSECUTIVOCIT
							FROM #AUT

							SELECT @NOITEMS=COUNT(*) FROM AUTD WHERE IDAUT=@IDAUT
							SELECT @VLR_TOTAL=SUM(VALOR*CANTIDAD) FROM AUTD WHERE IDAUT=@IDAUT

							UPDATE AUT SET NO_ITEMES=@NOITEMS,VALORTOTAL=@VLR_TOTAL,VALOREXEDENTE=@VLR_TOTAL WHERE IDAUT=@IDAUT 


							UPDATE IMOVH SET NOPRESTACION=@IDAUT
							FROM IMOVH INNER JOIN IART ON IMOVH.IDARTICULO=IART.IDARTICULO
										INNER JOIN SER ON  IMOVH.IDARTICULO=SER.IDSERVICIO 
							WHERE CNSMOV=@CNSMOV
							AND COALESCE(SER.IVA,'No')='No'  
							AND COALESCE(ESPART,0)=0

						END

						PRINT 'SERVICIOS PARTICULARES...'
						IF EXISTS(SELECT * FROM IMOVH INNER JOIN SER ON IMOVH.IDARTICULO=SER.IDSERVICIO WHERE IMOVH.CNSMOV = @CNSMOV AND COALESCE(ESPART,0)=1 )
						BEGIN
							DECLARE @IDTERPART VARCHAR(20)
							DECLARE @IDPLANPART VARCHAR(20)
							SELECT @IDTERPART=DBO.FNK_VALORVARIABLE('IDTERCEROPARTICULAR'),@IDPLANPART=DBO.FNK_VALORVARIABLE('IDPLANPART')
							SELECT @IDAUT = SPACE(20)
							EXEC SPK_GENCONSECUTIVO @COMPANIA,@SEDE,'@AUT',@IDAUT OUTPUT
							SELECT @IDAUT = @SEDE + REPLACE(SPACE(8 - LEN(@IDAUT))+LTRIM(RTRIM(@IDAUT)), SPACE(1),0)

							PRINT '@IDAUT='+@IDAUT
   
							SELECT @NOAUT = SPACE(20)
							EXEC SPK_GENCONSECUTIVO @COMPANIA,@SEDE,'@AUTF',@NOAUT OUTPUT
							SELECT @NOAUT = @SEDE + REPLACE(SPACE(8 - LEN(@NOAUT))+LTRIM(RTRIM(@NOAUT)), SPACE(1),0)

							INSERT INTO AUTD (IDAUT, NO_ITEM, IDSERVICIO, CANTIDAD, VALOR, VALORCOPAGO, VALORCOPAGOCOSTO, VALOREXCEDENTE, VALORTOTALCOSTO, IDPLAN, IMPRESO, AUTORIZADO, 
										COMENTARIOS, PCOBERTURA, OBS, NORDEN, CCOSTO,  CODIGOCPCJ, MARCAPAGO, NOAUTORIZEXT, ESDELAB, ENLAB, IDTERCEROCA, IDCONTRATO, FACTURADA, 
										N_FACTURA, CNSFCT, AQUIENCOBRO, MARCACOPAGOORDEN, VALORPROV, PCOSTO, ITFC, CNSITFC, SYS_COMPUTERNAME,  NOCOBRABLE, MDOSIFICACION, CANTIDIA, 
										DIAS, FRECUENCIA, CODCUPS, POSOLOGIA, SINCRONIZADO, APOYODG_AMBITO, CITAAUTORIZADA, DOSISAPL, DURACIONTTOF, DURACIONTTOC, CLASEPOSOLOGIA,  
										MARCA, USUARIOMARCA, NUM_ORDEN, PROCESADA, PRIORIDAD, HOMOLOGO, IDSERVICIOH, CANTIDADH, VALORHOMO, NO_ITEMH, N_FACTURAORI, DESCUENTO, 
										TIPODTO, CNSFMED, F_INGLAB, F_SALILAB,  IDARTICULO, IMPORTADO, NFACTURA )
							SELECT      @IDAUT, ROW_NUMBER() OVER(ORDER  BY IMOVH.IDARTICULO  ASC), IMOVH.IDARTICULO, IMOVH.CANTIDAD, PVENTA, VLR_COPAGO*IMOVH.CANTIDAD, 0, (PVENTA*IMOVH.CANTIDAD)-COALESCE(VLR_COPAGO,0),
										(IMOVH.CANTIDAD*IMOVH.PCOSTO), @IDPLANPART, 0, 1, NULL, 100, NULL, NULL, NULL,  NULL, NULL, NULL, 0, 0, @IDTERPART, NULL, 0, 
										NULL, NULL, NULL, NULL, NULL, IMOVH.PCOSTO, NULL, NULL, @SYS_COMPUTERNAME,  NULL, NULL, NULL, 
										NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
										'V', NULL, NULL, NULL,  IART.IDSERVICIO, NULL, NULL
							FROM IMOVH INNER JOIN IART ON IMOVH.IDARTICULO=IART.IDARTICULO
										INNER JOIN SER ON  IMOVH.IDARTICULO=SER.IDSERVICIO 
							WHERE CNSMOV=@CNSMOV
							AND COALESCE(ESPART,0)=1

							PRINT '@NOAUT='+@NOAUT
							--IDPLAN
							UPDATE #AUT SET IDAUT=@IDAUT,NOAUT=@NOAUT,CONSECUTIVOCIT=@CONSECUTIVOCIT,FACTURADA=0,N_FACTURA=NULL,IDTERCEROCA=@IDTERPART,IDPLAN=@IDPLANPART WHERE 1=1
							INSERT INTO AUT(IDAUT, NOAUT, FECHA, FECHAVENCE, FECHASOL, IDAFILIADO, NUMCARNET, IDPLAN, PREFIJO, IDSEDE, IDSEDEORIGEN, TIPOAUTORIZACION, 
											ALTOCOSTO, ATENCION, URGENCIA, IMPUTABLE_A, IDSOLICITANTE,  IDPROVEEDOR, ESTADO, CONSANULADO, IDOPERADORANULA, FECHAANULA, 
											CAUSALANULA, NO_ITEMES, VALORTOTAL, VALORCOPAGO, VALORBENEFICIO, VALOREXEDENTE, VALORTOTALCOSTO, VALORCOPAGOCOSTO,  IMPRESO,
											CXPGEN, CXCGEN, AUTORIZADOPOR, NUMAUTORIZA, FECHAAUTORIZA, AUTORIZADO, IDPESPECIAL, IDESTADOE, USUARIO, RECOBRARA, FUENTE, 
											IDCAUSAEXT, AMBITO, FINALIDAD, PERSONAL_AT, DXPPAL,  DXRELACIONADO, COMPLICACION, FORMAQX, TIPOURGENCIA, SPD, NORECIBOCAJA, 
											CLASEORDEN, GENEROCAJA, IDCONTRATANTE, TIPOCOPAGO, PEDIDOINV, ENVIO, OBS, ESCONTINUACION, NOAUTORIGEN,  SEMANASCOT, LIQUIDAPC, 
											OBSDX, COMITE, CERTIFICACION, IDCLASEAUT, CLASECONT, ESDEINV, NOGENERACIONOPS, FECHAGEN, CNSAFIAA, PROCEDENCIA, IDAREAH, 
											IDAREA, CCOSTO, SUBCCOSTO, NIVELATENCION,  FACTURADA, N_FACTURA, CNSFCT, VFACTURAS, FACTURABLE, DESCUENTO, TIPODTO, MARCAFAC, 
											IDIPS, CLASECONTRATO, ENPAQUETE, IDCIRUGIA, SOAT, NOADMISION, IDCONTRATO, RUBRO, CLASERUBRO,  PERIODICIDAD, CNSFACT, 
											CONTINUACION, VLRUTOTRA, TIPOCONT, DXRELACIONADO2, FECHACOMITE, IDALTERNA, MARCAENV, COPAGOPROPIO, CNSHACTRAN, ESDELAB, ENLAB,
											COBRARA, IDTERCEROCA, CONSECUTIVOHCA,  RAZONANULACION, PIDECCOSTO, FECHAREALIZACION, CODCAJA, TIPOCAJA, IDGRUPOSER, PEXTERNA, 
											AQUIENCOBRO, CODUNG, CODPRG, ITFC, CNSITFC, SYS_COMPUTERNAME, CNSLABCOR, TIPOUSUARIO,  NOADMISIONCE, INDLABCORE, CERRADA, 
											CONTABILIZADA, NROCOMPROBANTE, MARCACONT, SINCRONIZADO, IDPLAN_AFI, IDTERCERO_AFI, USUARIONOFACTURABLE, FECHA_NOFAC, RIESGO, 
											IDSUCURSAL,  CIUDAD, FUNCIONARIO_AUT, IDIPSSOLICITA, IDMEDICOSOLICITA, DIRECCION, ORIGEN, VLRDEPOSITOS, NOTIFICADO, ENTREGADO,
											FENTREGA, UENTREGA, TIPOAFILIADO, MENTREGA, NRO_ENTREGA, CANT_ENTREGAS,  RUBRO_ID, IDFIRMAPTE, IDFIRMARESP, CNSMOV, 
											CONSECUTIVOCIT)
							SELECT @IDAUT, @NOAUT, DBO.FNK_GETDATE(), DBO.FNK_GETDATE()+30, DBO.FNK_GETDATE(), IDAFILIADO, NUMCARNET, IDPLAN, PREFIJO, IDSEDE, IDSEDEORIGEN, TIPOAUTORIZACION, 
											ALTOCOSTO, ATENCION, URGENCIA, IMPUTABLE_A, IDSOLICITANTE,  IDPROVEEDOR, ESTADO, CONSANULADO, IDOPERADORANULA, FECHAANULA, 
											CAUSALANULA, NO_ITEMES, 0, 0, VALORBENEFICIO, VALOREXEDENTE, VALORTOTALCOSTO, VALORCOPAGOCOSTO,  0,
											CXPGEN, CXCGEN, AUTORIZADOPOR, NUMAUTORIZA, FECHAAUTORIZA, AUTORIZADO, IDPESPECIAL, IDESTADOE, @USUARIO, RECOBRARA, FUENTE, 
											IDCAUSAEXT, AMBITO, FINALIDAD, PERSONAL_AT, DXPPAL,  DXRELACIONADO, COMPLICACION, FORMAQX, TIPOURGENCIA, SPD, NULL, 
											CLASEORDEN, GENEROCAJA, IDCONTRATANTE, TIPOCOPAGO, 1, ENVIO, OBS, ESCONTINUACION, NOAUTORIGEN,  SEMANASCOT, LIQUIDAPC, 
											OBSDX, COMITE, CERTIFICACION, IDCLASEAUT, CLASECONT, 1, NOGENERACIONOPS, FECHAGEN, CNSAFIAA, PROCEDENCIA, IDAREAH, 
											IDAREA, CCOSTO, SUBCCOSTO, NIVELATENCION,  FACTURADA, N_FACTURA, CNSFCT, VFACTURAS, FACTURABLE, DESCUENTO, TIPODTO, MARCAFAC, 
											IDIPS, CLASECONTRATO, ENPAQUETE, IDCIRUGIA, SOAT, NOADMISION, IDCONTRATO, RUBRO, CLASERUBRO,  PERIODICIDAD, CNSFACT, 
											CONTINUACION, VLRUTOTRA, TIPOCONT, DXRELACIONADO2, FECHACOMITE, IDALTERNA, MARCAENV, COPAGOPROPIO, CNSHACTRAN, ESDELAB, ENLAB,
											COBRARA, IDTERCEROCA, @CONSECUTIVOHC,  RAZONANULACION, PIDECCOSTO, FECHAREALIZACION, NULL, NULL, IDGRUPOSER, PEXTERNA, 
											AQUIENCOBRO, CODUNG, CODPRG, ITFC, CNSITFC, SYS_COMPUTERNAME, CNSLABCOR, TIPOUSUARIO,  NOADMISIONCE, INDLABCORE, CERRADA, 
											0, NULL, 0, SINCRONIZADO, IDPLAN_AFI, IDTERCERO_AFI, USUARIONOFACTURABLE, FECHA_NOFAC, RIESGO, 
											IDSUCURSAL,  CIUDAD, FUNCIONARIO_AUT, IDIPSSOLICITA, IDMEDICOSOLICITA, DIRECCION, ORIGEN, VLRDEPOSITOS, NOTIFICADO, ENTREGADO,
											FENTREGA, UENTREGA, TIPOAFILIADO, MENTREGA, NRO_ENTREGA, CANT_ENTREGAS,  RUBRO_ID, IDFIRMAPTE, IDFIRMARESP, CNSMOV, 
											@CONSECUTIVOCIT
							FROM #AUT

							SELECT @NOITEMS=COUNT(*) FROM AUTD WHERE IDAUT=@IDAUT
							SELECT @VLR_TOTAL=SUM(VALOR*CANTIDAD) FROM AUTD WHERE IDAUT=@IDAUT

							UPDATE AUT SET NO_ITEMES=@NOITEMS,VALORTOTAL=@VLR_TOTAL,VALOREXEDENTE=@VLR_TOTAL WHERE IDAUT=@IDAUT 

							UPDATE IMOVH SET NOPRESTACION=@IDAUT
							FROM IMOVH INNER JOIN IART ON IMOVH.IDARTICULO=IART.IDARTICULO
										INNER JOIN SER ON  IMOVH.IDARTICULO=SER.IDSERVICIO 
							WHERE CNSMOV=@CNSMOV
							AND COALESCE(ESPART,0)=1

						END
						PRINT 'TERMINO COBRO EN AUT Y AUTD'
						
					END
					UPDATE IZSOL SET PAUTO = 2 WHERE  CNSIZSOL = @CNSIZSOL

				END
				IF @DATO = 0
				BEGIN
					PRINT '00000'
					UPDATE IZSOL SET PAUTO = IIF(@OMAR='SI',2,1) WHERE  CNSIZSOL = @CNSIZSOL
				END
			END TRY
			BEGIN CATCH 
				INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE() ;  
			END CATCH  
			IF (SELECT COUNT(*) FROM @TBLERRORES)> 0
			BEGIN
				SELECT 'KO' OK
				SELECT ERROR FROM @TBLERRORES
				RETURN
			END
			SELECT 'OK'OK, COALESCE(PAUTO,0) PAUTO FROM IZSOL WHERE CNSIZSOL = @CNSIZSOL
		END 
	END	
	IF @METODO = 'MODIFICA_COPAGO'
	BEGIN
		SELECT @CNSMOV = CNSMOV , @NOLOTE = NOLOTE, @NOLOTEPEDIDO = NOLOTEPEDIDO, @IDBODEGA = IDBODEGA, @PVENTA = PVENTA
		FROM OPENJSON(@PARAMETROS)
		WITH( CNSMOV		VARCHAR(20)		 '$.CNSMOV'
			,NOLOTE			VARCHAR(20)		 '$.NOLOTE'
			,NOLOTEPEDIDO	VARCHAR(20)		 '$.NOLOTEPEDIDO'
			,PVENTA			DECIMAL(14,2)	'$.PVENTA'
			,IDBODEGA		VARCHAR(20)		 '$.IDBODEGA')
	
	
		IF COALESCE(@PVENTA,0)=0
		BEGIN
			INSERT INTO @TBLERRORES(ERROR) SELECT 'ngrese un monto.'
		END
	
		IF (SELECT COUNT(*) FROM @TBLERRORES)> 0
		BEGIN
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END
		ELSE
		BEGIN
			BEGIN TRY
				
				UPDATE IMOVH SET PVENTA = @PVENTA, COBRACOPA = CASE WHEN @PVENTA>0 THEN 1 ELSE 0 END WHERE CNSMOV = @CNSMOV AND NOLOTE = @NOLOTE AND NOLOTEPEDIDO = @NOLOTEPEDIDO
			END TRY
			BEGIN CATCH 
				INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE() ;  
			END CATCH  
			IF (SELECT COUNT(*) FROM @TBLERRORES)> 0
			BEGIN
				SELECT 'KO' OK
				SELECT ERROR FROM @TBLERRORES
				RETURN
			END
			SELECT 'OK'OK
		END 
	END	
	IF @METODO = 'NOTA'
	BEGIN
		SELECT @CNSIZSOL = CNSIZSOL, @dataNota = dataNota
		FROM OPENJSON(@PARAMETROS)
		WITH( CNSIZSOL		VARCHAR(20)			'$.CNSIZSOL'
		,dataNota			NVARCHAR(MAX)		AS JSON
		)
		SELECT @PROCESO =UPPER( JSON_VALUE(@dataNota,'$.PROCESO'))
		SELECT * INTO #dataNota FROM OPENJSON (@dataNota)
		WITH(
		AUTOENTREGA					VARCHAR(20)						'$.AUTOENTREGA'
		,TIPODIREC					VARCHAR(20)						'$.TIPODIREC'
		,CORREGIMIENTO					VARCHAR(20)						'$.CORREGIMIENTO'
		,DIRECCION					VARCHAR(200)						'$.DIRECCION'
		,TELEFONO					VARCHAR(20)						'$.TELEFONO'
		,OBSERVACION					VARCHAR(250)						'$.OBSERVACION'
		,QUIENRECIBE					VARCHAR(250)						'$.QUIENRECIBE'
		,VLRCOPAGO			DECIMAL(14,2)					'$.VLRCOPAGO'
		,FORMAPAGO					VARCHAR(20)						'$.FORMAPAGO'
		)
		IF (SELECT COUNT(*) FROM @TBLERRORES)> 0
		BEGIN
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END
		ELSE
		BEGIN
			BEGIN TRY
				IF @PROCESO = 'NUEVO'
				BEGIN
					PRINT 'NUEVO'
					SELECT @NOITEM = (SELECT COUNT(*) FROM IZSOLNOT WHERE CNSIZSOL = @CNSIZSOL)

					INSERT INTO IZSOLNOT (CNSIZSOL, NOITEM, USUARIO,  FECHA, OBSERVACION, AUTOENTREGA
					, TIPODIREC, DIRECCION, TELEFONO, QUIENRECIBE, VLRCOPAGO, FORMAPAGO, CIUDAD, CORREGIMIENTO)
					SELECT @CNSIZSOL, @NOITEM+1, @USUARIO , DBO.FNK_GETDATE(), COALESCE(OBSERVACION,''),AUTOENTREGA,TIPODIREC,DIRECCION
					,TELEFONO, QUIENRECIBE, 0, FORMAPAGO, '41401', CORREGIMIENTO
					FROM #dataNota 
				END
			END TRY  
			BEGIN CATCH 
				INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE() ;  
			END CATCH  
			IF (SELECT COUNT(*) FROM @TBLERRORES)> 0
			BEGIN
				SELECT 'KO' OK
				SELECT ERROR FROM @TBLERRORES
				RETURN
			END
			SELECT 'OK'OK
		END 
	END
	IF @METODO = 'VALIDA_DETALLE'
	BEGIN
		SELECT @CNSMOV = CNSMOV, @PROCESO = PROCESO
		FROM OPENJSON(@PARAMETROS)
		WITH( CNSMOV		VARCHAR(20)		'$.CNSMOV'
		,PROCESO			VARCHAR(20)		'$.PROCESO'
		)
		IF @PROCESO = 'AFECTA' AND NOT EXISTS (SELECT *
									FROM AUTD
									INNER JOIN SER ON AUTD.IDSERVICIO =  SER.IDSERVICIO 
									WHERE AUTD.IDAUT IN (SELECT IMOVH.NOPRESTACION FROM IMOVH WHERE IMOVH.CNSMOV = @CNSMOV) AND COALESCE(SER.IVA,'') = 'SER' AND COALESCE(AUTD.VALORCOPAGO,0) > 0 AND COALESCE(AUTD.NFACTURA,'') = '')
		BEGIN
			INSERT INTO @TBLERRORES(ERROR) SELECT 'No existen Items de tipo Afecta, para cobrar'
		END
		IF @PROCESO = 'INAFECTA' AND NOT EXISTS (SELECT *
									FROM AUTD
									INNER JOIN SER ON AUTD.IDSERVICIO =  SER.IDSERVICIO 
									WHERE AUTD.IDAUT IN (SELECT IMOVH.NOPRESTACION FROM IMOVH WHERE IMOVH.CNSMOV = @CNSMOV) AND COALESCE(SER.IVA,'') <> 'SER' AND COALESCE(AUTD.VALORCOPAGO,0) > 0 AND COALESCE(AUTD.NFACTURA,'') = '')
		BEGIN
			INSERT INTO @TBLERRORES(ERROR) SELECT 'No existen Items de tipo Inafecta, para cobrar'
		END
		IF @PROCESO = 'PARTICULAR' AND NOT EXISTS (SELECT *
							FROM AUTD
							INNER JOIN SER ON AUTD.IDSERVICIO =  SER.IDSERVICIO 
							WHERE AUTD.IDAUT IN (SELECT IMOVH.NOPRESTACION FROM IMOVH WHERE IMOVH.CNSMOV = @CNSMOV  AND COALESCE(ESPART,0) = 1)  AND COALESCE(AUTD.VALOREXCEDENTE,0) > 0 AND COALESCE(AUTD.N_FACTURA,'') = '')
		BEGIN
			INSERT INTO @TBLERRORES(ERROR) SELECT 'No existen Items de tipo Particular, para cobrar'
		END

		IF (SELECT COUNT(*) FROM @TBLERRORES)> 0
		BEGIN
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END
		ELSE
		BEGIN
			BEGIN TRY
				IF @PROCESO = 'AFECTA'
				BEGIN
					SELECT 'OK' OK, CASE WHEN SER.IVA = 'SER' THEN 'Afecto' ELSE 'Inafecto' END TIPO_SER,
					AUTD.IDSERVICIO, IART.IDARTICULO, IART.DESCRIPCION, AUTD.NO_ITEM, 
					AUTD.CANTIDAD, AUTD.VALOR, CAST ((AUTD.VALORCOPAGO * 1.18 ) AS DECIMAL(14,2)) VALORCOPAGO, AUTD.VALORCOPAGOCOSTO, AUTD.VALOREXCEDENTE, AUTD.VALORTOTALCOSTO, AUTD.IDPLAN, AUTD.AUTORIZADO, AUTD.PCOSTO, AUTD.TIPODTO, AUTD.ID, AUTD.NFACTURA
					FROM AUTD
					INNER JOIN IART ON AUTD.IDARTICULO = IART.IDARTICULO
					INNER JOIN SER ON AUTD.IDSERVICIO =  SER.IDSERVICIO 
					WHERE AUTD.IDAUT IN (SELECT IMOVH.NOPRESTACION FROM IMOVH WHERE IMOVH.CNSMOV = @CNSMOV AND COALESCE(IMOVH.ESPART,0)= 0) 
					AND COALESCE(SER.IVA,'') = 'SER'  AND COALESCE(AUTD.NFACTURA,'') = '' --AND COALESCE(AUTD.VALORCOPAGO,0) > 0
					/* TOTAL */
					SELECT CAST(SUM(AUTD.VALORCOPAGO * 1.18 ) AS DECIMAL(14,2)) VALORTOTAL
					FROM AUTD
					INNER JOIN IART ON AUTD.IDARTICULO = IART.IDARTICULO
					INNER JOIN SER ON AUTD.IDSERVICIO =  SER.IDSERVICIO 
					WHERE AUTD.IDAUT IN (SELECT IMOVH.NOPRESTACION FROM IMOVH WHERE IMOVH.CNSMOV = @CNSMOV AND COALESCE(IMOVH.ESPART,0)= 0) 
					AND COALESCE(SER.IVA,'') = 'SER' AND COALESCE(AUTD.VALORCOPAGO,0) > 0 AND COALESCE(AUTD.NFACTURA,'') = ''
				END
				IF @PROCESO = 'INAFECTA'
				BEGIN
					SELECT 'OK' OK, CASE WHEN SER.IVA = 'SER' THEN 'Afecto' ELSE 'Inafecto' END TIPO_SER,
					AUTD.IDSERVICIO, IART.IDARTICULO, IART.DESCRIPCION, AUTD.NO_ITEM, 
					AUTD.CANTIDAD, AUTD.VALOR, CAST( AUTD.VALORCOPAGO AS DECIMAL(14,2)) VALORCOPAGO, AUTD.VALORCOPAGOCOSTO, AUTD.VALOREXCEDENTE, AUTD.VALORTOTALCOSTO, AUTD.IDPLAN, AUTD.AUTORIZADO, AUTD.PCOSTO, AUTD.TIPODTO, AUTD.ID, AUTD.NFACTURA
					FROM AUTD
					INNER JOIN IART ON AUTD.IDARTICULO = IART.IDARTICULO
					INNER JOIN SER ON AUTD.IDSERVICIO =  SER.IDSERVICIO 
					WHERE AUTD.IDAUT IN (SELECT IMOVH.NOPRESTACION FROM IMOVH WHERE IMOVH.CNSMOV = @CNSMOV AND COALESCE(IMOVH.ESPART,0)= 0) AND COALESCE(SER.IVA,'') <> 'SER'  AND COALESCE(AUTD.NFACTURA,'') = '' --AND COALESCE(AUTD.VALORCOPAGO,0) > 0
					/* TOTAL */
					SELECT CAST( SUM(AUTD.VALORCOPAGO  ) AS DECIMAL(14,2)) VALORTOTAL
					FROM AUTD
					INNER JOIN IART ON AUTD.IDARTICULO = IART.IDARTICULO
					INNER JOIN SER ON AUTD.IDSERVICIO =  SER.IDSERVICIO 
					WHERE AUTD.IDAUT IN (SELECT IMOVH.NOPRESTACION FROM IMOVH WHERE IMOVH.CNSMOV = @CNSMOV AND COALESCE(IMOVH.ESPART,0)= 0) AND COALESCE(SER.IVA,'') <> 'SER' AND COALESCE(AUTD.VALORCOPAGO,0) > 0 AND COALESCE(AUTD.NFACTURA,'') = ''
				END
				IF @PROCESO = 'PARTICULAR'
				BEGIN
					SELECT 'OK' OK, CASE WHEN SER.IVA = 'SER' THEN 'Afecto' ELSE 'Inafecto' END TIPO_SER,
					AUTD.IDSERVICIO, IART.IDARTICULO, IART.DESCRIPCION, AUTD.NO_ITEM, 
					AUTD.CANTIDAD, AUTD.VALOR, CAST( AUTD.VALORCOPAGO AS DECIMAL(14,2)) VALORCOPAGO, AUTD.VALORCOPAGOCOSTO, AUTD.VALOREXCEDENTE, AUTD.VALORTOTALCOSTO, AUTD.IDPLAN, AUTD.AUTORIZADO, AUTD.PCOSTO, AUTD.TIPODTO, AUTD.ID, AUTD.N_FACTURA
					FROM AUTD
					INNER JOIN IART ON AUTD.IDARTICULO = IART.IDARTICULO
					INNER JOIN SER ON AUTD.IDSERVICIO =  SER.IDSERVICIO 
					WHERE AUTD.IDAUT IN (SELECT IMOVH.NOPRESTACION FROM IMOVH WHERE IMOVH.CNSMOV = @CNSMOV AND COALESCE(IMOVH.ESPART,0)= 1)  
					AND COALESCE(AUTD.VALOREXCEDENTE,0) > 0 AND COALESCE(AUTD.NFACTURA,'') = ''
					/* TOTAL */
					SELECT CAST( SUM( CASE WHEN COALESCE(SER.IVA,'') = 'SER' THEN  AUTD.VALOREXCEDENTE * 1.18 ELSE AUTD.VALOREXCEDENTE  END ) AS DECIMAL(14,2)) VALORTOTAL
					FROM AUTD
					INNER JOIN IART ON AUTD.IDARTICULO = IART.IDARTICULO
					INNER JOIN SER ON AUTD.IDSERVICIO =  SER.IDSERVICIO 
					WHERE AUTD.IDAUT IN (SELECT IMOVH.NOPRESTACION FROM IMOVH WHERE IMOVH.CNSMOV = @CNSMOV AND COALESCE(IMOVH.ESPART,0)= 1)  
					AND COALESCE(AUTD.VALOREXCEDENTE,0) > 0 AND COALESCE(AUTD.NFACTURA,'') = ''
				END

			END TRY  
			BEGIN CATCH 
				INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE() ;  
			END CATCH  
			IF (SELECT COUNT(*) FROM @TBLERRORES)> 0
			BEGIN
				SELECT 'KO' OK
				SELECT ERROR FROM @TBLERRORES
				RETURN
			END
			SELECT 'OK'OK
		END 
	END
	IF @METODO = 'VALIDA_BOLETAS'
	BEGIN
		SELECT @CNSMOV = CNSMOV
		FROM OPENJSON(@PARAMETROS)
		WITH( CNSMOV		VARCHAR(20)		'$.CNSMOV'
		)
		IF NOT EXISTS (SELECT AUTD.NFACTURA FROM AUTD WHERE IDAUT IN (SELECT NOPRESTACION FROM IMOVH WHERE CNSMOV = @CNSMOV)
				--AND COALESCE(AUTD.NFACTURA,'')<>'' AND  COALESCE(AUTD.N_FACTURA,'')<>''  
				GROUP BY AUTD.NFACTURA )
		BEGIN
			INSERT INTO @TBLERRORES(ERROR) SELECT 'No existes docuemtnos registrados.'
		END
		IF (SELECT COUNT(*) FROM @TBLERRORES)> 0
		BEGIN
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END
		ELSE
		BEGIN
			BEGIN TRY
				SELECT 'OK'OK
				
				SELECT FTR.N_FACTURA, CASE WHEN COALESCE(FTR.VIVA,0) >0 THEN 'Afecta' ELSE 'Inafecta' END [TIPO_DOC], CASE WHEN FTR.TIPOFIN = 'N' THEN 'Boleta' ELSE 'Factura' END [TIPO]  FROM AUTD 
				INNER JOIN FTR ON  AUTD.NFACTURA = FTR.N_FACTURA
				WHERE IDAUT IN (SELECT NOPRESTACION FROM IMOVH WHERE CNSMOV = @CNSMOV)
				AND COALESCE(AUTD.NFACTURA,'')<>''
				GROUP BY FTR.N_FACTURA, FTR.VIVA, FTR.TIPOFIN
				UNION
				SELECT FTR.N_FACTURA, CASE WHEN COALESCE(FTR.VIVA,0) >0 THEN 'Afecta' ELSE 'Inafecta' END [TIPO_DOC], CASE WHEN FTR.TIPOFIN = 'N' THEN 'Boleta' ELSE 'Factura' END [TIPO]  FROM AUTD 
				INNER JOIN FTR ON  AUTD.N_FACTURA = FTR.N_FACTURA
				WHERE IDAUT IN (SELECT NOPRESTACION FROM IMOVH WHERE CNSMOV = @CNSMOV)
				AND COALESCE(AUTD.N_FACTURA,'')<>''
				GROUP BY FTR.N_FACTURA, FTR.VIVA, FTR.TIPOFIN

			END TRY  
			BEGIN CATCH 
				INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE() ;  
			END CATCH  
			IF (SELECT COUNT(*) FROM @TBLERRORES)> 0
			BEGIN
				SELECT 'KO' OK
				SELECT ERROR FROM @TBLERRORES
				RETURN
			END
			SELECT 'OK'OK
		END 
	END
	IF @METODO = 'ASIGNA_MOTORIZADO'
	BEGIN
		SELECT @CNSMOV = CNSMOV, @USUENTREGADO = USUENTREGADO
		FROM OPENJSON(@PARAMETROS)
		WITH( CNSMOV		VARCHAR(20)		'$.CNSMOV'
		,USUENTREGADO		VARCHAR(20)		'$.USUENTREGADO'
		)
		IF EXISTS(SELECT * FROM IMOV WHERE CNSMOV = @CNSMOV AND COALESCE(NIVELATENCION,'') = 'Ent')
		BEGIN
			INSERT INTO @TBLERRORES(ERROR) SELECT 'Ya se encuentra entregado el registro'
		END
		IF COALESCE(@USUENTREGADO,'') = ''
		BEGIN
			INSERT INTO @TBLERRORES(ERROR) SELECT 'Ingrese un usuario responsable'
		END
		IF (SELECT COUNT(*) FROM @TBLERRORES)> 0
		BEGIN
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END
		ELSE
		BEGIN
			BEGIN TRY
				UPDATE IMOV SET USUENTREGADO = @USUENTREGADO, NIVELATENCION = 'Env', F_ENVIA = DBO.FNK_GETDATE() WHERE IMOV.CNSMOV = @CNSMOV
			END TRY  
			BEGIN CATCH 
				INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE() ;  
			END CATCH  
			IF (SELECT COUNT(*) FROM @TBLERRORES)> 0
			BEGIN
				SELECT 'KO' OK
				SELECT ERROR FROM @TBLERRORES
				RETURN
			END
			SELECT 'OK'OK
		END 
	END	
	IF @METODO = 'CAMBIAR_PARTICULAR'
	BEGIN
		SELECT @CNSMOV = CNSMOV, @IDARTICULO = IDARTICULO, @NOLOTE = NOLOTE, @NOLOTEPEDIDO = NOLOTEPEDIDO
		FROM OPENJSON(@PARAMETROS)
		WITH( CNSMOV		VARCHAR(20)		'$.CNSMOV'
		,IDARTICULO			VARCHAR(20)		'$.IDARTICULO'
		,NOLOTE				VARCHAR(20)		'$.NOLOTE'
		,NOLOTEPEDIDO		VARCHAR(20)		'$.NOLOTEPEDIDO'
		)
		
		IF (SELECT COUNT(*) FROM @TBLERRORES)> 0
		BEGIN
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END
		ELSE
		BEGIN
			BEGIN TRY
				IF (SELECT COALESCE(ESPART,0) FROM IMOVH WHERE CNSMOV = @CNSMOV AND IDARTICULO = @IDARTICULO AND NOLOTE = @NOLOTE ) = 0
				BEGIN
					UPDATE IMOVH SET ESPART = 1 WHERE CNSMOV = @CNSMOV AND IDARTICULO = @IDARTICULO AND NOLOTE = @NOLOTE
					SELECT 'OK'OK
					RETURN
				END
				IF (SELECT COALESCE(ESPART,0) FROM IMOVH WHERE CNSMOV = @CNSMOV AND IDARTICULO = @IDARTICULO AND NOLOTE = @NOLOTE ) = 1
				BEGIN
					UPDATE IMOVH SET ESPART = 0 WHERE CNSMOV = @CNSMOV AND IDARTICULO = @IDARTICULO AND NOLOTE = @NOLOTE
				END
			END TRY  
			BEGIN CATCH 
				INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE() ;  
			END CATCH  
			IF (SELECT COUNT(*) FROM @TBLERRORES)> 0
			BEGIN
				SELECT 'KO' OK
				SELECT ERROR FROM @TBLERRORES
				RETURN
			END
			SELECT 'OK'OK
		END 
	END	
	IF @METODO = 'GET_MEDICAMENTOS'
	BEGIN
		SELECT @ESTADO = ESTADO, @FECHA = FECHA FROM OPENJSON(@PARAMETROS)WITH(ESTADO VARCHAR(12) '$.ESTADO', FECHA VARCHAR(10) '$.FECHA')

		SELECT IMOV.FECHACONF, IMOV.CNSMOV, IMOV.F_ENVIA, IMOV.NROGUIA, IMOV.USUENVIA, USUENTREGADO MOTORIZADO, IMOV.NIVELATENCION
			 , IMOV.ESTADO, IMOV.ENTREGADO, IMOV.F_ENTREGADO, IMOV.OBSERVACION
			 , CONCAT(AFI.NOMBREAFI, ' ', AFI.DOCIDAFILIADO )NOMBRECOMPLETO
			 , AFI.NOMBREAFI, AFI.CELULAR, AFI.TELEFONORES, AFI.SEXO, AFI.EDAD, AFI.TIPO_DOC, AFI.DOCIDAFILIADO
			 , DIRECCION = (SELECT TOP 1 DIRECCION FROM IZSOLNOT WHERE CNSIZSOL = IZSOL.CNSIZSOL ORDER BY FECHA DESC )
			 , NOMBRECIU = (SELECT TOP 1 B.NOMBRE FROM IZSOLNOT INNER JOIN CIU B ON IZSOLNOT.CIUDAD = B.CIUDAD WHERE CNSIZSOL = IZSOL.CNSIZSOL ORDER BY FECHA DESC )
			 , DESC_CORREGIMIENTO = (SELECT TOP 1 T.DESCRIPCION FROM IZSOLNOT INNER JOIN TGEN T  ON T.CODIGO = IZSOLNOT.CORREGIMIENTO AND T.TABLA ='CORREGIMIENTOS' WHERE CNSIZSOL = IZSOL.CNSIZSOL ORDER BY FECHA DESC )
			 
			 , IZSOL.IDPLAN, PLN.DESCPLAN
			 , TEST =( SELECT STUFF((SELECT DISTINCT '  '+FTR.N_FACTURA FROM IMOVH 
					INNER JOIN HPRED ON HPRED.NOPRESTACION=IMOVH.NOPRESTACION 
					INNER JOIN FTR ON FTR.N_FACTURA=HPRED.N_FACTURAH 
					WHERE IMOVH.CNSMOV=IMOV.CNSMOV FOR XML PATH('') ),1,2,'') )
			 , VRLBOLETA =  ( SELECT STUFF((SELECT CONCAT('    s/',MAX(FTR.VR_TOTAL)) FROM IMOVH 
					INNER JOIN HPRED ON HPRED.NOPRESTACION=IMOVH.NOPRESTACION 
					INNER JOIN FTR ON FTR.N_FACTURA=HPRED.N_FACTURAH 
					WHERE IMOVH.CNSMOV=IMOV.CNSMOV GROUP BY FTR.N_FACTURA FOR XML PATH('') ),1,2,'') )
		FROM IMOV
		INNER JOIN IZSOL ON IMOV.NODOCUMENTO = IZSOL.CNSIZSOL
		INNER JOIN AUT  ON IZSOL.NOADMISION = AUT.NOAUT 
		INNER JOIN AFI   ON AUT.IDAFILIADO  = AFI.IDAFILIADO
		INNER JOIN PLN   ON AUT.IDPLAN     = PLN.IDPLAN 
		WHERE 
		CONVERT(DATE,IMOV.F_ENVIA) = CONVERT(DATE,@FECHA) AND  USUENTREGADO = @USUARIO
		--CONVERT(DATE,IMOV.F_ENVIA) >= CONVERT(DATE, GETDATE()-40)
		AND  IMOV.NIVELATENCION = CASE @ESTADO WHEN 'Pendientes' THEN 'Env' WHEN 'Entregado' THEN 'Ent' WHEN 'Devuelto' THEN 'Dev' END
        RETURN
	END
	IF @METODO = 'ALERTA_AFI'
	BEGIN
		SELECT @IDAFILIADO = JSON_VALUE(@PARAMETROS, '$.IDAFILIADO')
		SELECT TALR.DESCALTERTA DESCALERTA, ALR.OBS, ALR.CLASE, ALR.FECHALIMITE, ALR.FECHAALERTA
		INTO #ALR
		FROM ALR INNER JOIN TALR ON TALR.IDALERTA = ALR.IDALERTA
		WHERE IDAFILIADO = @IDAFILIADO
		AND		(FECHALIMITE IS NULL OR 
				CAST(FECHALIMITE AS DATE) >= CAST(GETDATE() AS DATE))
		SELECT 'OK' OK
		SELECT * FROM #ALR
        RETURN
	END
	IF @METODO = 'CONSULTA_DEV_PENDIENTES'
	BEGIN
		DECLARE @IDCINVMOVPREDEV VARCHAR (20)=DBO.FNK_VALORVARIABLE('IDCINVMOVPREDEV')
		DECLARE @IDINVMOVDEVCX VARCHAR (20)=DBO.FNK_VALORVARIABLE('IDINVMOVDEVCX')
		DECLARE @IDINVMOVHTXDEV VARCHAR (20)=DBO.FNK_VALORVARIABLE('IDINVMOVHTXDEV')
		DECLARE @IDINVMOVPREDEV VARCHAR (20)=DBO.FNK_VALORVARIABLE('IDINVMOVPREDEV')
		SELECT @IDBODEGA = JSON_VALUE(@PARAMETROS, '$.IDBODEGA')
		SELECT CANTIDAD = COUNT(1)
		INTO #IMOV
		FROM IMOV
		WHERE IDBODEGA = @IDBODEGA AND IDTIPOMOV IN (@IDCINVMOVPREDEV,@IDINVMOVHTXDEV,@IDINVMOVDEVCX,@IDCINVMOVPREDEV) AND COALESCE(ESTADO,0)=0

		SELECT 'OK' OK
		SELECT * FROM #IMOV
		RETURN
	END
	IF @METODO = 'CONSULTA_CONSECUTIVOS'
	BEGIN
		SELECT @FILTRO = JSON_VALUE(@PARAMETROS, '$.FILTRO')
		
		SELECT @SQL='SELECT DISTINCT IMOV.CNSMOV
		FROM IZSOL
			INNER JOIN IMOV ON IMOV.NODOCUMENTO=IZSOL.CNSIZSOL AND IMOV.PROCEDENCIA=''CM_SOL''
			LEFT JOIN HADM ON IZSOL.NOADMISION = HADM.NOADMISION
			LEFT JOIN QXPCX ON QXPCX.CONSECUTIVO = IZSOL.CNSIZSOLM  AND IZSOL.CLASE = ''QXPGCX''
			LEFT JOIN HADM H ON QXPCX.NOADMISION = H.NOADMISION   AND IZSOL.CLASE = ''QXPGCX''
			LEFT JOIN CXPS ON CXPS.NOPROGRAMACION  = CASE WHEN IZSOL.CLASE = ''QXPGCX'' AND LEN(IZSOL.NOADMISION)<10 THEN IZSOL.NOADMISION ELSE ''9999'' END
			LEFT JOIN CIT ON IZSOL.NOADMISION = CIT.CONSECUTIVO AND IZSOL.CLASE=''ONCO''
			LEFT JOIN AUT ON IZSOL.NOADMISION = AUT.IDAUT
			LEFT JOIN AFI ON AFI.IDAFILIADO = CASE  WHEN IZSOL.CLASE = ''QXPGCX'' AND LEN(IZSOL.CNSIZSOLM)<10 THEN  CXPS.IDAFILIADO
							WHEN IZSOL.CLASE = ''QXPGCX'' AND LEN(IZSOL.CNSIZSOLM)>=10 THEN  H.IDAFILIADO
							WHEN IZSOL.CLASE = ''CE''  THEN  AUT.IDAFILIADO
							WHEN IZSOL.CLASE = ''ONCO''  THEN  CIT.IDAFILIADO
							ELSE HADM.IDAFILIADO END
			LEFT JOIN HHAB ON HADM.HABCAMA = HHAB.HABCAMA
			LEFT JOIN USUSU ON IZSOL.USUARIOSOL = USUSU.USUARIO
			LEFT JOIN PLN ON HADM.IDPLAN = PLN.IDPLAN
			LEFT JOIN TER ON HADM.IDTERCERO = TER.IDTERCERO
			LEFT JOIN CEN ON IZSOL.SECTOR = CEN.CCOSTO
			LEFT JOIN HHAB SEC ON IZSOL.SECTOR = SEC.HABCAMA AND SEC.CLASE = ''SECTOR''
			LEFT JOIN CITSITEDS ON AUT.CONSECUTIVOCIT = CITSITEDS.CONSECUTIVO
			LEFT JOIN USVGS AS OMCODMEDICAMENTOSNP ON OMCODMEDICAMENTOSNP.IDVARIABLE = ''OMCODMEDICAMENTOSNP''
			LEFT JOIN USVGS AS OMCODMEDICAMENTOS ON OMCODMEDICAMENTOS.IDVARIABLE = ''OMCODMEDICAMENTOS''
			LEFT JOIN USVGS AS OMCODLIQUIDOSPARE ON OMCODLIQUIDOSPARE.IDVARIABLE = ''OMCODLIQUIDOSPARE''
			LEFT JOIN USVGS AS OMCODMEDIENTERAL ON OMCODMEDIENTERAL.IDVARIABLE = ''OMCODMEDIENTERAL''
			LEFT JOIN USVGS AS OMCODNUTRICIONP ON OMCODNUTRICIONP.IDVARIABLE = ''OMCODNUTRICIONP''
			LEFT JOIN USVGS AS OMCODMEDICAMENTOSCT ON OMCODMEDICAMENTOSCT.IDVARIABLE = ''OMCODMEDICAMENTOSCT''
		WHERE 1=1 AND '+@FILTRO+' AND EXISTS (SELECT 1 FROM IMOVH B WHERE B.CNSMOV=IMOV.CNSMOV)'
		SELECT 'OK' OK
		PRINT @FILTRO
		PRINT @SQL
		EXEC (@SQL)
		RETURN
	END
	IF @METODO = 'CAMBIAR_CANTIDAD'
	BEGIN
		
		SELECT @PARAMETROS = DATOS
		FROM OPENJSON (@PARAMETROS)
		WITH		 (
			DATOS NVARCHAR(MAX)  AS JSON
		)
		SELECT @CNSMOV = CNSMOV, @IDARTICULOREAL = IDARTICULO, @NOLOTE = NOLOTE, @CANTIDAD = CANTIDAD
		FROM OPENJSON (@PARAMETROS)
		WITH		 (
			CNSMOV VARCHAR(20)			'$.CNSMOV'
			,IDARTICULO VARCHAR(20)		'$.IDARTICULO'
			,NOLOTE VARCHAR(50)			'$.NOLOTE'
			,CANTIDAD INT				'$.CANTIDAD'
		)
		
		SELECT @CNSIZSOLD = A.CNSIZSOLD
			, @IDARTICULO = B.IDARTICULO, @CNSIZSOL = C.CNSIZSOL, @CANTIDAD_SOL =B.CANTIDADSOL
			, @CANTIDAD_ANT = A.CANTIDADSOL, @IDBODEGA = C.IDBODEGAATIENDE
		FROM IZSOLDT A
			INNER JOIN IZSOLD B ON A.CNSIZSOLD=B.CNSIZSOLD
			INNER JOIN IZSOL C ON C.CNSIZSOL=B.CNSIZSOL
		WHERE A.CNSMOV=@CNSMOV AND A.IDARTICULOREAL=@IDARTICULOREAL AND A.NOLOTE=@NOLOTE
		

		SELECT @CANTIDAD_ENTREGADA = SUM(A.CANTIDADSOL)
		FROM IZSOLDT A
			INNER JOIN IZSOLD B ON A.CNSIZSOLD=B.CNSIZSOLD
			INNER JOIN IZSOL C ON C.CNSIZSOL=B.CNSIZSOL
		WHERE C.CNSIZSOL=@CNSIZSOL AND B.IDARTICULO=@IDARTICULO AND A.CNSMOV<>@CNSMOV
		SELECT @CANTIDAD_ENTREGADA=COALESCE(@CANTIDAD_ENTREGADA,0)

		--IF NOT EXISTS (SELECT 1 FROM IZSOLDT A 
		--	INNER JOIN IZSOLD B ON A.CNSIZSOLD=B.CNSIZSOLD
		--	INNER JOIN IZSOL C ON C.CNSIZSOL=B.CNSIZSOL
		--	WHERE A.CNSMOV=@CNSMOV AND A.IDARTICULOREAL=@IDARTICULOREAL AND A.NOLOTE=@NOLOTE AND A.ESTADO=1 AND B.ESTADO=1 AND C.ESTADO=1)
		--	INSERT INTO @TBLERRORES(ERROR) SELECT 'Los registros de inventario ya estan cerrados, no es posible la modificacion'
		
		IF NOT EXISTS (SELECT 1 FROM IMOV WHERE CNSMOV=@CNSMOV AND ESTADO=0)
			INSERT INTO @TBLERRORES(ERROR) SELECT 'Movimiento no pendiente'

		IF NOT EXISTS (SELECT 1 FROM IMOVH WHERE CNSMOV=@CNSMOV AND IDARTICULO=@IDARTICULOREAL AND NOLOTE=@NOLOTE)
			INSERT INTO @TBLERRORES(ERROR) SELECT 'Articulo no pendiente en movimiento'

		IF ((@CANTIDAD+@CANTIDAD_ENTREGADA)>@CANTIDAD_SOL)
			INSERT INTO @TBLERRORES(ERROR) SELECT 'Cantidad mayor a la cantidad solicitada, confirme'


		IF EXISTS(SELECT 1 FROM @TBLERRORES)
		BEGIN
			SELECT 'KO' AS OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END
		BEGIN TRY
			SELECT @CANTIDAD = @CANTIDAD-@CANTIDAD_ANT

			UPDATE IEXI SET EXISLOTE=EXISLOTE-@CANTIDAD
			FROM IEXI 
			WHERE IEXI.IDBODEGA = @IDBODEGA AND IEXI.IDARTICULO=@IDARTICULOREAL AND NOLOTE=@NOLOTE

			UPDATE ISAL SET CANTIDAD=CANTIDAD+@CANTIDAD
			FROM ISAL 
			WHERE CNSMOV= @CNSMOV AND IDARTICULO= @IDARTICULOREAL AND NOLOTE= @NOLOTE

			UPDATE IZSOLDT SET CANTIDADSOL=CANTIDADSOL+@CANTIDAD
			FROM IZSOLDT 
			WHERE CNSMOV= @CNSMOV AND @IDARTICULOREAL= @IDARTICULOREAL AND NOLOTE= @NOLOTE

			UPDATE IMOVH SET CANTIDAD=CANTIDAD+@CANTIDAD, CANTPEDIDA=CANTPEDIDA+@CANTIDAD
			FROM IMOVH 
			WHERE CNSMOV= @CNSMOV AND IDARTICULO= @IDARTICULOREAL AND NOLOTE= @NOLOTE

			UPDATE IZSOLD SET ESTADO=A.ESTADO, TIPOENT=IIF(A.ESTADO=1,NULL,TIPOENT) 
			FROM IZSOLD INNER JOIN 
				(SELECT A.CNSIZSOL, A.CNSIZSOLD, (CASE WHEN SUM(ISNULL(B.CANTIDADSOL,0)) < SUM(A.CANTIDADSOL) THEN 1 ELSE 0 END) ESTADO 
				FROM IZSOLD A LEFT JOIN IZSOLDT B ON A.CNSIZSOLD=B.CNSIZSOLD 
				WHERE A.CNSIZSOL= @CNSIZSOL GROUP BY A.CNSIZSOL, A.CNSIZSOLD
			) A ON A.CNSIZSOL=IZSOLD.CNSIZSOL AND A.CNSIZSOLD=IZSOLD.CNSIZSOLD AND A.ESTADO<>IZSOLD.ESTADO

		END TRY
		BEGIN CATCH
			INSERT INTO @TBLERRORES(ERROR)
			SELECT ERROR_MESSAGE()
		END CATCH

		IF EXISTS(SELECT 1 FROM @TBLERRORES)
		BEGIN
			SELECT 'KO' AS OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END
		SELECT 'OK' AS OK
		RETURN
		RETURN
	END
	IF @METODO = 'EXPORTA_DATOS'
	BEGIN
		SELECT @PROCESO = PROCESO, @WHERE_DATA = WHERE_DATA
		FROM OPENJSON(@PARAMETROS)
		WITH( PROCESO			VARCHAR(20)		 '$.PROCESO'
		,WHERE_DATA			VARCHAR(500)		 '$.WHERE_DATA'
		)
		
		IF (SELECT COUNT(*) FROM @TBLERRORES)> 0
		BEGIN
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END
		ELSE
		BEGIN
			BEGIN TRY
				SELECT 'OK'OK
				SET @sqlCommand = '
					SELECT IZSOL.CNSIZSOL,COALESCE(IZSOL.PAUTO,0) PAUTO,IZSOL.FECHASOL,IZSOL.CLASE,IZSOL.ESTADO,IZSOL.IDBODEGAATIENDE,IZSOL.NOADMISION,AFI.DIRECCION,AFI.TELEFONORES,AFI.CORREGIMIENTO,AFI.TIPO_DOC,TER.RAZONSOCIAL
					,COALESCE(AUT.CONSECUTIVOCIT,'''') CONSECUTIVOCIT ,COALESCE(AUT.CONSECUTIVOHCA, IZSOL.CONSECUTIVOHCA, '''') CONSECUTIVOHCA
					,COALESCE(CITSITEDS.CONSECUTIVO,'''') SITEDS
					,CASE COALESCE(IZSOL.ESTADO,0) WHEN 0 THEN ''Sin Solicitar'' WHEN 1 THEN  ''Abierta'' WHEN 2 THEN ''Cerrada'' ELSE '''' END [ESTADO_DESC],AFI.DOCIDAFILIADO
					,COALESCE(AFI.IDAFILIADO,'''') IDAFILIADO
					,AFI.NOMBREAFI,IZSOL.SECTOR,SEC.DESCRIPCION [SEC_DESC],CEN.DESCRIPCION [CEN_DESC],HHAB.HABITACION,HHAB.CAMA,HHAB.HABCAMA,IZSOL.USUARIOSOL,USUSU.NOMBRE,HADM.IDPLAN,PLN.DESCPLAN
					,[MENSAJE] = CASE WHEN IZSOL.CLASE <> ''Consumo'' AND LEN(IZSOL.NOADMISION)<10  THEN (SELECT DBO.FNK_CAPITALIZAR_TEXTO(SER.DESCSERVICIO) FROM CXPS  LEFT JOIN SER ON SER.IDSERVICIO=CXPS.IDSERVICIO WHERE NOPROGRAMACION= IZSOL.NOADMISION )             WHEN LEN(IZSOL.NOADMISION)>= 10 AND  IZSOL.CLASE = ''QXPGCX'' THEN (SELECT DBO.FNK_CAPITALIZAR_TEXTO(SER.DESCSERVICIO) FROM CXPS  LEFT JOIN SER ON SER.IDSERVICIO=CXPS.IDSERVICIO WHERE NOPROGRAMACION= IZSOL.NOADMISION)             ELSE COALESCE((SELECT DESCRIPCION FROM HHAB WHERE  HABCAMA = IZSOL.SECTOR),'''') END 
					,IMOV_PEND = (SELECT TOP 1 CNSMOV FROM IMOV WHERE IMOV.NODOCUMENTO = IZSOL.CNSIZSOL AND IMOV.ESTADO = 0 ORDER BY FECHAMOV ASC)
					FROM [dbo].[IZSOL] 
					LEFT JOIN HADM ON IZSOL.NOADMISION = HADM.NOADMISION
					LEFT JOIN QXPCX ON QXPCX.CONSECUTIVO = IZSOL.CNSIZSOLM  AND IZSOL.CLASE = ''QXPGCX'' 
					LEFT JOIN HADM H ON QXPCX.NOADMISION = H.NOADMISION   AND IZSOL.CLASE = ''QXPGCX'' 
					LEFT JOIN CXPS ON CXPS.NOPROGRAMACION  = CASE WHEN IZSOL.CLASE = ''QXPGCX'' AND LEN(IZSOL.NOADMISION)<10 THEN IZSOL.NOADMISION ELSE ''9999'' END 
					LEFT JOIN CIT ON IZSOL.NOADMISION = CIT.CONSECUTIVO AND IZSOL.CLASE=''ONCO''
					LEFT JOIN AUT ON IZSOL.NOADMISION = AUT.IDAUT AND IZSOL.CLASE=''CE'' 
					LEFT JOIN AFI ON AFI.IDAFILIADO = CASE  WHEN IZSOL.CLASE = ''QXPGCX'' AND LEN(IZSOL.CNSIZSOLM)<10 THEN  CXPS.IDAFILIADO        
															WHEN IZSOL.CLASE = ''QXPGCX'' AND LEN(IZSOL.CNSIZSOLM)>=10 THEN  H.IDAFILIADO          
															WHEN IZSOL.CLASE = ''CE''  THEN  AUT.IDAFILIADO          
															WHEN IZSOL.CLASE = ''ONCO''  THEN  CIT.IDAFILIADO          
															ELSE HADM.IDAFILIADO END       
					LEFT JOIN HHAB ON HADM.HABCAMA = HHAB.HABCAMA 
					LEFT JOIN USUSU ON IZSOL.USUARIOSOL = USUSU.USUARIO 
					LEFT JOIN PLN ON HADM.IDPLAN = PLN.IDPLAN
					LEFT JOIN TER ON HADM.IDTERCERO = TER.IDTERCERO
					LEFT JOIN CEN ON IZSOL.SECTOR = CEN.CCOSTO
					LEFT JOIN HHAB SEC ON IZSOL.SECTOR = SEC.HABCAMA AND SEC.CLASE = ''SECTOR'' 
					LEFT JOIN CITSITEDS ON AUT.CONSECUTIVOCIT = CITSITEDS.CONSECUTIVO 
					LEFT JOIN USVGS AS OMCODMEDICAMENTOSNP ON OMCODMEDICAMENTOSNP.IDVARIABLE = ''OMCODMEDICAMENTOSNP'' 
					LEFT JOIN USVGS AS OMCODMEDICAMENTOS ON OMCODMEDICAMENTOS.IDVARIABLE = ''OMCODMEDICAMENTOS''
					LEFT JOIN USVGS AS OMCODLIQUIDOSPARE ON OMCODLIQUIDOSPARE.IDVARIABLE = ''OMCODLIQUIDOSPARE'' 
					LEFT JOIN USVGS AS OMCODMEDIENTERAL ON OMCODMEDIENTERAL.IDVARIABLE = ''OMCODMEDIENTERAL''
					LEFT JOIN USVGS AS OMCODNUTRICIONP ON OMCODNUTRICIONP.IDVARIABLE = ''OMCODNUTRICIONP''
					LEFT JOIN USVGS AS OMCODMEDICAMENTOSCT ON OMCODMEDICAMENTOSCT.IDVARIABLE = ''OMCODMEDICAMENTOSCT'' 
					WHERE '+ @WHERE_DATA

					EXEC sys.sp_executesql @sqlCommand

				IF @PROCESO = 'DETALLADO'
				BEGIN
					SET @sqlCommand = '
					SELECT IZSOLD.CNSIZSOL, IZSOLD.CNSIZSOLD, IZSOLD.ESTADO, IZSOLD.IDARTICULO, IART.DESCRIPCION, IZSOLD.CANTIDADSOL, COALESCE((SELECT SUM(CANTIDADSOL) FROM IZSOLDT WHERE IZSOLDT.CNSIZSOLD = IZSOLD.CNSIZSOLD),0) [ENTREGADO]
						, IZSOLD.NUMDOSIS, IZSOLD.CANTIDAD, IZSOLD.CANTIDADBOLO, IZSOLD.QIMPREGNACION  ,IZSOLD.FRECUENCIA, IZSOLD.DURACION, IZSOLD.CODOM, IZSOLD.OPTI, IZSOLD.CNSFMED, SER.PRESUNI
						
					FROM IZSOLD
					INNER JOIN IART ON IZSOLD.IDARTICULO = IART.IDARTICULO
					LEFT JOIN SER ON SER.IDSERVICIO = COALESCE(IZSOLD.IDSERVICIO, IART.IDSERVICIO)
					WHERE  IZSOLD.CNSIZSOL IN (SELECT IZSOL.CNSIZSOL FROM IZSOL WHERE ' + @WHERE_DATA+   ')
					GROUP BY  IZSOLD.CNSIZSOL, IZSOLD.CNSIZSOLD, IZSOLD.ESTADO, IZSOLD.IDARTICULO, IART.DESCRIPCION, IZSOLD.CANTIDADSOL, IZSOLD.NUMDOSIS, IZSOLD.CANTIDAD, IZSOLD.CANTIDADBOLO
					, IZSOLD.QIMPREGNACION  ,IZSOLD.FRECUENCIA, IZSOLD.DURACION, IZSOLD.CODOM, IZSOLD.OPTI, IZSOLD.CNSFMED, SER.PRESUNI, SER.MEDICAMENTOS
					ORDER BY  IART.DESCRIPCION  ASC
					
					' 

					EXEC sys.sp_executesql @sqlCommand
				END
			END TRY
			BEGIN CATCH 
				INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE() ;  
			END CATCH  
			IF (SELECT COUNT(*) FROM @TBLERRORES)> 0
			BEGIN
				SELECT 'KO' OK
				SELECT ERROR FROM @TBLERRORES
				RETURN
			END
			SELECT 'OK'OK
		END 
	END
   IF @METODO='SUBIR_IMOVH'     
   BEGIN         
		SELECT @DATOS =  DATOS, @IDBODEGA = IDBODEGA, @CNSMOV = CNSMOV
	   FROM OPENJSON (@PARAMETROS)
	   WITH(	
      DATOS		NVARCHAR(MAX) AS JSON 
		,IDBODEGA	VARCHAR(20)		'$.IDBODEGA'
		,CNSMOV	VARCHAR(20)		'$.CNSMOV')  

		SELECT  * INTO #IMOVH FROM OPENJSON (@DATOS)
		WITH(
         IDARTICULO VARCHAR(20)    '$.IDARTICULO',
         CANTIDAD SMALLINT         '$.CANTIDAD',
         NOLOTE VARCHAR(20)        '$.NOLOTE',
         FECHAVENCE VARCHAR(20)    '$.FECHAVENCE',
         PCOSTO DECIMAL(14,2)      '$.PCOSTO',
         IVA DECIMAL(14,2)         '$.IVA'
        )
        PRINT '@CNSMOV='+COALESCE(@CNSMOV,'NO TENGO')

      IF EXISTS(SELECT * FROM IMOV WHERE CNSMOV=@CNSMOV AND ESTADO=0)
      BEGIN
         PRINT  'INGRESO AL INSERT'
            PRINT 'VALIDO'
            INSERT INTO IMOVH(CNSMOV, IDARTICULO, EXISTENCIA, CANTIDAD, CANTPEDIDA, PCOSTO, NOLOTE, NOLOTEPEDIDO, FECHAVENCE, ESTADO, IDARTICULOTF, CANTIDADTF, PCOSTOANTES,
                              CNSTRAN, ITEM, PVENTA, USUARIO, USUARIOCONF,  FECHACONF, PRIEXI, FECHAREPOSI, IDARTICULOORI, CANTIDADORI, TIENECAMBIO, DETALLE, CANT_EN_ACTIVOS,
                              ENCXP, PIVA, VLRIVA, PDTO, VLRDTO, CNSHTX, COTIZADO, IDIMPUESTO, IDCLASE,  ITFC, CNSITFC, CUENTA_FIMPDV, IDITAR, CODCUM, CAMBIADO, PCOSTOANTESMOD,
                              USUARIOCAMBIO, IDFABRICANTE, CUENTADB, CUENTACR, IDSERVICIO, VLRIMPCONSUMO, NOPRESTACION, RENFER, USUARIOR,  CANTREP, DILUYENTE, RINVIMA, 
                              SELLOCALIDAD, CAPACIDAD, ODESFERA, OIESFERA, ODCILINDRO, OICILINDRO, ODEJE, OIEJE, ODADICION, OIADICION, ODALT, OIALT, ODAVL, OIAVL, ODTLENTE,
                              OITLENTE,  ODDNP, OIDNP, ENVIADO, EXISLOTE, PCOSTOPP, VIVACOPA, VIVATCOPA, VIVATVENTA, PVENTAT, COBRACOPA, AUTORIZADO, USUAUTORIZA, 
                              VLR_COPAGO, ESPART, ESTANTE)
            SELECT @CNSMOV, T.IDARTICULO, IART.EXISTOTAL, T.CANTIDAD, T.CANTIDAD, T.PCOSTO, T.NOLOTE,CONCAT(@CNSMOV,'_',LTRIM(RTRIM(CAST(ROW_NUMBER() OVER(PARTITION BY T.IDARTICULO ORDER BY T.IDARTICULO ASC) AS VARCHAR(10))))),
                  T.FECHAVENCE, 0, NULL, NULL, IART.PCOSTO, NULL, NULL, NULL, @USUARIO, NULL,  NULL, NULL, NULL, NULL, NULL, 0, NULL, 
                  NULL, NULL, IVA, CASE WHEN COALESCE(IVA,0)>0 THEN T.PCOSTO/(1+(T.IVA/100)) ELSE 0 END, NULL, NULL, NULL, NULL, NULL, NULL,  NULL, 0, NULL, IART.IDITAR, IART.CODCUM, 0, 
                  IART.PCOSTO, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,  NULL, NULL, 
                  IART.REGINVIMA, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
                  NULL,  NULL, NULL, NULL, IART.EXISTOTAL, 0, 0, 0, 0, 0, 0, NULL, NULL, NULL, NULL,  NULL
            FROM #IMOVH T INNER JOIN IART ON T.IDARTICULO=IART.IDARTICULO   
             WHERE ISDATE(T.FECHAVENCE)=1
      END
      ELSE
      BEGIN
         INSERT INTO @TBLERRORES(ERROR)
         SELECT 'No se Encontro el Movimiento de Inventario o ya esta Cerrado '
      END
      IF(SELECT COUNT(*) FROM @TBLERRORES)>0
      BEGIN
         SELECT 'KO' OK, ERROR FROM @TBLERRORES
         RETURN
      END
      SELECT 'OK' OK 
      RETURN 
   END  
   
END


