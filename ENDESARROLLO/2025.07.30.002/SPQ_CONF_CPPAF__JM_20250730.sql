CREATE OR ALTER PROCEDURE DBO.SPQ_CONF_CPPAF @JSON NVARCHAR(MAX)
	WITH ENCRYPTION
AS
DECLARE @DATOS NVARCHAR(MAX)
DECLARE @PARAMETROS NVARCHAR(MAX), @MODELO VARCHAR(100), @METODO VARCHAR(100), @USUARIO VARCHAR(20)
DECLARE @PROCESO VARCHAR(20), @IDPLAN VARCHAR(6), @IDSERVICIO VARCHAR(20), @IDAREA VARCHAR(20), @CARENCIA SMALLINT   , @ITEM INT
DECLARE @CUENTAUTILP VARCHAR(2), @USO DECIMAL(7, 2), @FACTOR DECIMAL(7, 2), @MANEJAPRO VARCHAR(2), @MANEJAOMEX VARCHAR(2), @BORRAR SMALLINT
DECLARE @COBRARA VARCHAR(1), @IDTERCEROCA VARCHAR(20), @IDPLANCA VARCHAR(6), @REQAUTORIZACION SMALLINT   , @IDPATOLOGIA VARCHAR(20)
DECLARE @ID INT   , @MPATOLOGIA SMALLINT,@AREAS NVARCHAR(MAX),@PETICION VARCHAR(20)
DECLARE @TBLERRORES TABLE (ERROR VARCHAR(MAX))

BEGIN
	SELECT @MODELO = MODELO, @METODO = METODO, @USUARIO = USUARIO, @PARAMETROS = PARAMETROS
	FROM OPENJSON(@json) WITH (MODELO VARCHAR(100) '$.MODELO', METODO VARCHAR(100) '$.METODO', USUARIO VARCHAR(12) '$.USUARIO', PARAMETROS NVARCHAR(MAX) AS JSON
			)

	IF @METODO = 'GUARDAR'
	BEGIN
		BEGIN TRY
			SELECT @IDPLAN = IDPLAN, @IDSERVICIO = IDSERVICIO, @IDAREA = IDAREA, @CARENCIA = CARENCIA, @CUENTAUTILP = CUENTAUTILP, @USO = USO, @FACTOR = FACTOR, @MANEJAPRO = 
				MANEJAPRO, @MANEJAOMEX = @MANEJAOMEX, @BORRAR = BORRAR, @COBRARA = COBRARA, @IDTERCEROCA = IDTERCEROCA, @IDPLANCA = IDPLANCA, @REQAUTORIZACION = 
				REQAUTORIZACION, @PROCESO = PROCESO, @MPATOLOGIA = MPATOLOGIA
			FROM OPENJSON(@PARAMETROS) WITH (
					IDPLAN VARCHAR(6) '$.IDPLAN', IDSERVICIO VARCHAR(20) '$.IDSERVICIO', IDAREA VARCHAR(20) '$.IDAREA', CARENCIA SMALLINT '$.CARENCIA', 
					CUENTAUTILP VARCHAR(2) '$.CUENTAUTILP', USO DECIMAL(7, 2) '$.USO', FACTOR DECIMAL(7, 2) '$.FACTOR', MANEJAPRO VARCHAR(2) '$.MANEJAPRO', 
					MANEJAOMEX VARCHAR(2) '$.MANEJAOMEX', BORRAR SMALLINT '$.BORRAR', COBRARA VARCHAR(1) '$.COBRARA', IDTERCEROCA VARCHAR(20) '$.IDTERCEROCA', 
					IDPLANCA VARCHAR(6) '$.IDPLANCA', REQAUTORIZACION SMALLINT '$.REQAUTORIZACION', PROCESO VARCHAR(20) '$.PROCESO',MPATOLOGIA SMALLINT '$.MPATOLOGIA'
					)

			IF UPPER(@PROCESO) = 'INSERTAR'
			BEGIN
				BEGIN TRY
					INSERT INTO @TBLERRORES (ERROR)
					SELECT CONCAT ('El SERVICIO ', @IDSERVICIO, ' YA SE ENCUENTRA ASIGNADO AL PLAN ', @IDPLAN)
					WHERE EXISTS (
							SELECT 1
							FROM CPPAF
							WHERE IDPLAN = @IDPLAN AND IDSERVICIO = @IDSERVICIO AND IDAREA = @IDAREA
							)

					IF (
							SELECT COUNT(*)
							FROM @TBLERRORES
							) <= 0
					BEGIN
						IF (@IDPLANCA IS NULL)
							SET @IDPLANCA = @IDPLAN

						INSERT INTO CPPAF (
							IDPLAN, IDSERVICIO, IDAREA, CARENCIA, CUENTAUTILP, USO, FACTOR, MANEJAPRO, MANEJAOMEX, BORRAR, COBRARA, IDTERCEROCA, IDPLANCA, 
							REQAUTORIZACION, MPATOLOGIA
							)
						SELECT @IDPLAN, @IDSERVICIO, @IDAREA, @CARENCIA, @CUENTAUTILP, @USO, @FACTOR, @MANEJAPRO, @MANEJAOMEX, @BORRAR, @COBRARA, @IDTERCEROCA, 
							@IDPLANCA, @REQAUTORIZACION, @MPATOLOGIA
					END
				END TRY

				BEGIN CATCH
					INSERT INTO @TBLERRORES (ERROR)
					SELECT ERROR_MESSAGE()
				END CATCH

				IF (
						SELECT COUNT(*)
						FROM @TBLERRORES
						) > 0
				BEGIN
					SELECT 'KO' OK

					SELECT ERROR
					FROM @TBLERRORES

					RETURN
				END

				SELECT 'OK' OK

				RETURN
			END

			IF UPPER(@PROCESO) = 'EDITAR'
			BEGIN
				BEGIN TRY
					SELECT @ID = ID
					FROM OPENJSON(@PARAMETROS) WITH (ID INT '$.ID')

					BEGIN
						UPDATE CPPAF
						SET IDAREA = @IDAREA, IDSERVICIO = @IDSERVICIO, COBRARA = @COBRARA, IDTERCEROCA = @IDTERCEROCA, IDPLANCA = @IDPLANCA, REQAUTORIZACION = 
							@REQAUTORIZACION, MPATOLOGIA = @MPATOLOGIA
						WHERE ID = @ID
					END
				END TRY

				BEGIN CATCH
					INSERT INTO @TBLERRORES (ERROR)
					SELECT ERROR_MESSAGE()
				END CATCH

				IF (
						SELECT COUNT(*)
						FROM @TBLERRORES
						) > 0
				BEGIN
					SELECT 'KO' OK

					SELECT ERROR
					FROM @TBLERRORES

					RETURN
				END

				SELECT 'OK' OK

				RETURN
			END
		END TRY

		BEGIN CATCH
			INSERT INTO @TBLERRORES (ERROR)
			SELECT ERROR_MESSAGE()
		END CATCH

		IF (
				SELECT COUNT(*)
				FROM @TBLERRORES
				) > 0
		BEGIN
			SELECT 'KO' OK

			SELECT ERROR
			FROM @TBLERRORES

			RETURN
		END

		SELECT 'OK' OK
	END

	IF @METODO = 'ELIMINAR'
	BEGIN
		SELECT @IDPLAN = IDPLAN, @IDSERVICIO = IDSERVICIO, @IDAREA = IDAREA
		FROM OPENJSON(@PARAMETROS) WITH (IDPLAN VARCHAR(6) '$.IDPLAN', IDSERVICIO VARCHAR(20) '$.IDSERVICIO', IDAREA VARCHAR(20) '$.IDAREA')

		BEGIN TRY
			DELETE
			FROM CPPAF
			WHERE IDPLAN = @IDPLAN AND IDSERVICIO = @IDSERVICIO AND IDAREA = @IDAREA
		END TRY

		BEGIN CATCH
			INSERT INTO @TBLERRORES (ERROR)
			SELECT ERROR_MESSAGE()
		END CATCH

		IF (
				SELECT COUNT(*)
				FROM @TBLERRORES
				) > 0
		BEGIN
			SELECT 'KO' OK

			SELECT ERROR
			FROM @TBLERRORES

			RETURN
		END

		SELECT 'OK' OK
	END
	IF @METODO = 'VALIDAR_MPATOLOGIA'
	BEGIN
		SELECT @IDPLAN = IDPLAN, @IDSERVICIO = IDSERVICIO
		FROM OPENJSON(@PARAMETROS) WITH (IDPLAN VARCHAR(6) '$.IDPLAN', IDSERVICIO VARCHAR(20) '$.IDSERVICIO')

		SELECT 'OK' OK
      SELECT  CPPAFPAT.ITEM, CPPAFPAT.ESTADO, PAT.IDPATOLOGIA, PAT.DESCRIPCION FROM CPPAFPAT
         INNER JOIN PAT ON CPPAFPAT.IDPATOLOGIA = PAT.IDPATOLOGIA
      WHERE CPPAFPAT.IDPLAN = @IDPLAN AND CPPAFPAT.IDSERVICIO = @IDSERVICIO
	END
	IF @METODO = 'AGREGAR_PATOLOGIA'
	BEGIN
		SELECT @IDSERVICIO = IDSERVICIO, @IDPLAN = IDPLAN, @IDPATOLOGIA = IDPATOLOGIA
		FROM OPENJSON(@PARAMETROS)
		WITH(	IDSERVICIO	VARCHAR(20)		'$.IDSERVICIO', IDPLAN	VARCHAR(20)		'$.IDPLAN',IDPATOLOGIA	VARCHAR(20)		'$.IDPATOLOGIA')

      IF COALESCE(@IDSERVICIO,'') = ''
		BEGIN
			INSERT INTO @TBLERRORES(ERROR) SELECT 'Debe de seleccionar un servicio. '
		END

		IF EXISTS (SELECT 1 FROM CPPAFPAT WHERE IDPLAN = @IDPLAN AND IDSERVICIO = @IDSERVICIO AND IDPATOLOGIA = @IDPATOLOGIA)
		BEGIN
			INSERT INTO @TBLERRORES(ERROR) SELECT 'La patologia,ya existe, para el plan, y servicio '
		END
	
		IF (SELECT COUNT(*) FROM @TBLERRORES)> 0
		BEGIN
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END
		ELSE
		BEGIN
			BEGIN TRY
				INSERT INTO CPPAFPAT (IDPLAN, IDSERVICIO, IDPATOLOGIA, ESTADO)
            SELECT @IDPLAN, @IDSERVICIO, @IDPATOLOGIA, 'Activo'
			END TRY  
			BEGIN CATCH 
				INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE() ;  
			END CATCH  
			IF (SELECT COUNT(*) FROM @TBLERRORES)> 0
			BEGIN
				SELECT 'KO' OK
				SELECT ERROR FROM @TBLERRORES
				RETURN
			END
			SELECT 'OK'OK
         SELECT  CPPAFPAT.ITEM, CPPAFPAT.ESTADO, PAT.IDPATOLOGIA, PAT.DESCRIPCION FROM CPPAFPAT
            INNER JOIN PAT ON CPPAFPAT.IDPATOLOGIA = PAT.IDPATOLOGIA
         WHERE CPPAFPAT.IDPLAN = @IDPLAN AND CPPAFPAT.IDSERVICIO = @IDSERVICIO
		END 
	END
	IF @METODO = 'ELIMINAR_PATOLOGIA'
	BEGIN
		SELECT @ITEM = ITEM, @IDSERVICIO = IDSERVICIO, @IDPLAN = IDPLAN
		FROM OPENJSON(@PARAMETROS)
		WITH(	ITEM	INT	'$.ITEM',IDSERVICIO	VARCHAR(20)		'$.IDSERVICIO', IDPLAN	VARCHAR(20)		'$.IDPLAN')
	
		IF (SELECT COUNT(*) FROM @TBLERRORES)> 0
		BEGIN
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END
		ELSE
		BEGIN
			BEGIN TRY
				DELETE FROM CPPAFPAT WHERE ITEM = @ITEM
			END TRY  
			BEGIN CATCH 
				INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE() ;  
			END CATCH  
			IF (SELECT COUNT(*) FROM @TBLERRORES)> 0
			BEGIN
				SELECT 'KO' OK
				SELECT ERROR FROM @TBLERRORES
				RETURN
			END
			SELECT 'OK'OK
         SELECT  CPPAFPAT.ITEM, CPPAFPAT.ESTADO, PAT.IDPATOLOGIA, PAT.DESCRIPCION FROM CPPAFPAT
            INNER JOIN PAT ON CPPAFPAT.IDPATOLOGIA = PAT.IDPATOLOGIA
         WHERE CPPAFPAT.IDPLAN = @IDPLAN AND CPPAFPAT.IDSERVICIO = @IDSERVICIO
		END 
	END
   IF @METODO='TRAER_AREAS'     
   BEGIN         
      SELECT 'OK'OK
      SELECT IDAREA AS value,DESCRIPCION AS label
      FROM AFU WHERE ESTADO=1
      RETURN
   END  
   IF @METODO='SUBIR_PLANO'     
   BEGIN         
      SELECT @DATOS=DATOS,@AREAS=AREAS,@COBRARA=COBRAR,@IDTERCEROCA=IDTERCERO,@IDPLAN=IDPLAN,@IDPLANCA=IDPLAN        
      FROM   OPENJSON (@PARAMETROS)
      WITH (           
      DATOS NVARCHAR(MAX) AS JSON,
      AREAS NVARCHAR(MAX) AS JSON ,
      COBRAR  VARCHAR(2)   '$.COBRAR',
      IDTERCERO  VARCHAR(20)   '$.IDTERCERO',
      IDPLAN  VARCHAR(6)   '$.IDPLAN'
      )
                 
      SELECT * INTO #SERVI        
      FROM   OPENJSON (@DATOS)
      WITH   (
      IDSERVICIO  VARCHAR(20)   '$.IDSERVICIO',
      REQAUTORIZACION  VARCHAR(20)   '$.REQAUTORIZACION'
      ) 
      PRINT @AREAS
      SELECT * INTO #AREAS
      FROM OPENJSON (@AREAS)
      WITH (
        IDAREA  VARCHAR(20) '$.value'
      )
      IF NOT EXISTS(SELECT * FROM PPT WHERE IDTERCERO=CASE WHEN COALESCE(@COBRARA,'O')='C' THEN  @IDTERCEROCA ELSE IDTERCERO END  AND IDPLAN=@IDPLAN)
      BEGIN
         SELECT 'KO'OK,'el idplan no esta configurado como contratante, no se puede continuar'ERROR
         RETURN
      END
      INSERT INTO CPPAF(IDPLAN, IDSERVICIO, IDAREA, CARENCIA, CUENTAUTILP, USO, FACTOR, MANEJAPRO, MANEJAOMEX, BORRAR, COBRARA, IDTERCEROCA, IDPLANCA, REQAUTORIZACION, MPATOLOGIA)
      SELECT @IDPLAN,#SERVI.IDSERVICIO,#AREAS.IDAREA,NULL,NULL ,NULL,NULL,NULL,NULL,NULL,@COBRARA,CASE WHEN COALESCE(@COBRARA,'O')='O' THEN NULL ELSE @IDTERCEROCA END,@IDPLANCA,REQAUTORIZACION,NULL
      FROM #SERVI,#AREAS
      SELECT 'OK'OK
   END  
   IF @METODO='QUITAR_SERVICIOS'     
   BEGIN         
      SELECT @IDPLAN=IDPLAN,@PETICION=CLASE,@IDAREA=IDAREA        
      FROM   OPENJSON (@PARAMETROS)
      WITH (           
      IDPLAN  VARCHAR(20)   '$.IDPLAN',
      CLASE  VARCHAR(20)   '$.CLASE',
      IDAREA  VARCHAR(20)   '$.IDAREA'
      )
      IF @PETICION='TODO'
      BEGIN
         DELETE CPPAF WHERE IDPLAN=@IDPLAN
      END
      IF @PETICION='Area'
      BEGIN
         DELETE CPPAF WHERE IDPLAN=@IDPLAN AND IDAREA=@IDAREA
      END
      SELECT 'OK'OK
      RETURN
   END  
END






