IF EXISTS(SELECT NAME FROM SYSOBJECTS WHERE NAME= 'SPK_ANULA_FACT_CAPITADA' AND TYPE='P')
BEGIN
   DROP PROCEDURE SPK_ANULA_FACT_CAPITADA
END

GO
CREATE PROCEDURE DBO.SPK_ANULA_FACT_CAPITADA
@N_FACTURA        VARCHAR(16),
@COMPANIA         VARCHAR(2),
@SEDE             VARCHAR(5),
@USUARIO          VARCHAR(12),
@RAZONCAMBIO      VARCHAR(255),
@SYS_COMPUTERNAME VARCHAR(254),
@USUARIO2         VARCHAR(12)
WITH ENCRYPTION
AS
DECLARE @PROCEDENCIA    VARCHAR(10)
DECLARE @TIPOFAC        VARCHAR(1)
DECLARE @CONTABILIZADA  SMALLINT
DECLARE @NROCOMPROBANTE VARCHAR(20)
DECLARE @NVOCONSEC      VARCHAR(20)
DECLARE @NOADMISION     VARCHAR(16)
DECLARE @IDTERCERO      VARCHAR(20)
DECLARE @IDPLAN         VARCHAR(6)
DECLARE @TIPOADM        VARCHAR(2)
declare @ANOFACTURA     VARCHAR(4)
DECLARE @MESFACTURA     VARCHAR(2)
DECLARE @ANOACTUAL      VARCHAR(4)
DECLARE @MESACTUAL      VARCHAR(2)
DECLARE @ESTADOPERFTR   INT
DECLARE @ESTADOPERACT   INT
DECLARE @NVOCNSFNOT     VARCHAR(20)
DECLARE @CERRADOFTR     SMALLINT
DECLARE @CERRADOINV     SMALLINT  
DECLARE @CNSFMAS        VARCHAR(20)
DECLARE @ESTACONTAB     SMALLINT
DECLARE @AUX            INT 
DECLARE @CNSFCT         VARCHAR(20)
DECLARE @ESTDIAN        SMALLINT
BEGIN
   SELECT @NOADMISION = NOREFERENCIA,
          @IDTERCERO  = IDTERCERO,
          @IDPLAN     = IDPLAN,
          @PROCEDENCIA    = PROCEDENCIA,
          @TIPOFAC        = TIPOFAC,
          @CONTABILIZADA  = COALESCE(CONTABILIZADA,0),
          @NROCOMPROBANTE = COALESCE(NROCOMPROBANTE,''),
          @ANOFACTURA     = CONVERT(VARCHAR, YEAR(FTR.F_FACTURA)),
          @MESFACTURA     = CONVERT(VARCHAR, MONTH(FTR.F_FACTURA)),
          @CNSFMAS        = CNSFMAS,
          @CNSFCT         = CNSFCT,
          @ESTDIAN        = COALESCE(FACTE,0)
   FROM   FTR WHERE N_FACTURA = @N_FACTURA

   SELECT @ANOACTUAL  = CONVERT(VARCHAR, YEAR(GETDATE())), @MESACTUAL = CONVERT(VARCHAR, MONTH(GETDATE()))
   IF @ANOACTUAL > @ANOFACTURA
   BEGIN
      SELECT @AUX = CERRADO FROM PRI WHERE ANO = @ANOFACTURA AND MES = 12
      IF @AUX = 1
      BEGIN
         IF DBO.FNK_VALORVARIABLE('FTR_ANULAEJERCANT') <> 'SI' 
         BEGIN
            RAISERROR('FACTURA DE UN EJERCICIO ANTERIOR DEBE CONFIGURARSE DE ACUERDO AL ART?CULO 106 DEL DECRETO 2649',16,1)
            RETURN 
         END
      END
   END
   SELECT @ESTADOPERFTR = COALESCE(CERRADO,0),@CERRADOINV=CERRADO_INV,
          @CERRADOFTR   = CERRADO_FAC 
   FROM   PRI 
   WHERE  ANO = @ANOFACTURA AND MES = @MESFACTURA 

   SELECT @ESTADOPERACT = COALESCE(CERRADO,0) FROM PRI WHERE ANO = @ANOACTUAL AND MES = @MESACTUAL

   IF @ESTADOPERFTR = 1 AND @ESTADOPERACT = 1
   BEGIN
      RAISERROR('EL PERIODO DE LA FACTURA Y EL PERIODO ACTUAL ESTAN CERRADOS.',16,1)
      RETURN
   END
   
   SELECT @ESTACONTAB = CASE WHEN @ESTDIAN=2 THEN 1 ELSE  @CONTABILIZADA END
   PRINT 'PROCEDENCIA= '+@PROCEDENCIA
   PRINT 'TIPOFACT= '+@TIPOFAC
   PRINT '@ESTACONTAB= '+STR(@ESTACONTAB,0)
   SELECT @TIPOADM = TIPOADM FROM HADM WHERE NOADMISION = @NOADMISION
   IF @ESTACONTAB = 0 
   BEGIN
      UPDATE FTR SET ESTADO = 'A', RAZONANULACION = @RAZONCAMBIO
      WHERE  N_FACTURA = @N_FACTURA

      UPDATE HPRED SET FACTURADA = 0, N_FACTURA = NULL WHERE N_FACTURA = @N_FACTURA
      
      UPDATE HADM SET N_FACTURA = NULL, CNSFCT = NULL WHERE NOADMISION = @NOADMISION  AND N_FACTURA = @N_FACTURA
      UPDATE HADMF SET ESTADO = 'A' WHERE NOADMISION = @NOADMISION AND N_FACTURA = @N_FACTURA                   
      IF @TIPOADM = DBO.FNK_VALORVARIABLE('IDTARIFASOAT')
      BEGIN
         DELETE HADM_S WHERE NOADMISION = @NOADMISION
         DELETE HADM_T WHERE NOADMISION = @NOADMISION
         UPDATE HADM SET FACTURADA = 0 WHERE NOADMISION = @NOADMISION
      END               
   END
   IF @ESTACONTAB = 1 --ESTA CONTABILIZADA
   BEGIN 
      PRINT 'ESTA CONTABILIZADA'
      --REVISAR EL PERIODO DE LA FACTURA
      IF @ESTADOPERFTR = 0  AND @CERRADOFTR=0  AND @ESTDIAN=0 --ESTA ABIERTO ==> SE ANULA EL COMPROBANTE CONTABLE Y ACTUALIZA ESTADOS
      BEGIN
         UPDATE MCP SET ANULADO = 1 WHERE NROCOMPROBANTE = @NROCOMPROBANTE
         UPDATE FTR SET ESTADO = 'A', RAZONANULACION = @RAZONCAMBIO
         WHERE  N_FACTURA = @N_FACTURA
         UPDATE HPRED SET FACTURADA = 0, N_FACTURA = NULL WHERE N_FACTURA = @N_FACTURA
      END
      ELSE
      BEGIN --EL PERIODO DE LA FACTURA ESTA CERRADO
         -- SE DEBE ANULAR POR NOTA CREDITO
         -- se crea el encabezado de la Nota Credito
         EXEC SPK_GENCONSECUTIVO @COMPANIA, @SEDE, '@FNOTC',  @NVOCNSFNOT OUTPUT  
         SELECT @NVOCNSFNOT = @SEDE + 'C' + REPLACE(SPACE(8 - LEN(@NVOCNSFNOT))+LTRIM(RTRIM(@NVOCNSFNOT)),SPACE(1),0)
         INSERT INTO FNOT (CNSFNOT, CLASE, N_FACTURA, CNSCXC, IDTERCERO, F_NOTA, VR_TOTAL, OBSERVACION, 
                           MARCA, MARCACONT, CONTABILIZADA, NROCOMPROBANTE, IMPRESO, COMPANIA, USUARIO, 
                           CERRADA, ESTADO, USUARIOANU, USUARIOSOL, FECHAANU, RAZONANU, PROCEDENCIA, 
                           CNSGLO, APLICADAA, LIBERAHADM, CODUNG, CODPRG, ENPRESUPUESTO,
                           IDTERCEROCOBERTURA, COBERTURA_AUT_POR, CONCEPTO, IDCONCEPTO ,TIPOCONCEPTO, 
                           VALORCONCEPTO, USUARIOAPLICA, DETGENERADOS)
         SELECT @NVOCNSFNOT, 'C', @N_FACTURA, '', @IDTERCERO, GETDATE(), 0, @RAZONCAMBIO, 0, 0, 0 , 
                NULL, 0, '01', @USUARIO, 0, 'O', '', '', NULL, NULL, 'FACTURA', '', 'F', 1, 
                '', '', 0, '', '', 1, NULL, 'P', 100, NULL, 0
         -- se generan los detalles de la nota credito
         EXEC SPK_GENITEMS_NOTACR @NVOCNSFNOT, 'C', @USUARIO
         -- se aplica la nota credito
         EXEC SPK_NOTASCXC @NVOCNSFNOT,'C', '', @SEDE, @COMPANIA, @USUARIO, @SYS_COMPUTERNAME        
      END   
   END
   ELSE
   BEGIN
      IF @ESTACONTAB = 2  --ESTA CONTABILIZADA CON ERRORES
      BEGIN
         PRINT 'ESTA CONTABILIZADA CON ERRORES'   
         UPDATE FTR SET ESTADO = 'A', RAZONANULACION = @RAZONCAMBIO
         WHERE  N_FACTURA = @N_FACTURA
         UPDATE HPRED SET FACTURADA = 0, N_FACTURA = NULL WHERE N_FACTURA = @N_FACTURA
         DELETE MCHE WHERE NROCOMPROBANTE = @NROCOMPROBANTE
         UPDATE MCPE SET ANULADO = 1 WHERE NROCOMPROBANTE = @NROCOMPROBANTE
         INSERT INTO MCP (COMPANIA, NROCOMPROBANTE, PROCEDENCIA, NOREFERENCIA, ANO, MES, FECHACONTABLE, TOTALDEBITO ,TOTALCREDITO, REFERENCIA1, REFERENCIA2,
                           REFERENCIA3, USUARIO, FECHA, LOTE ,OBSERVACION ,IDSEDE ,ESTADO ,ANULADO ,COMPROBANTE ,IDTERCERO, BANCO ,NOCHEQUE, VALOR_CHEQUE,
                           RPT_COMPROBANTE, FECHARADICACION, MARCA, SYS_COMPUTERNAME_MARCA, ESTADOIMP, CBTEINTERNO)
         SELECT COMPANIA, NROCOMPROBANTE, PROCEDENCIA, NOREFERENCIA, ANO, MES, FECHACONTABLE, TOTALDEBITO ,TOTALCREDITO, REFERENCIA1, REFERENCIA2,
                  REFERENCIA3, USUARIO, FECHA, LOTE ,OBSERVACION ,IDSEDE ,ESTADO ,ANULADO ,COMPROBANTE ,IDTERCERO, BANCO ,NOCHEQUE, VALOR_CHEQUE,
                  RPT_COMPROBANTE, FECHARADICACION, MARCA, SYS_COMPUTERNAME_MARCA, ESTADOIMP, CBTEINTERNO
         FROM   MCPE WHERE NROCOMPROBANTE = @NROCOMPROBANTE
         DELETE MCPE WHERE NROCOMPROBANTE = @NROCOMPROBANTE
      END
   END
   UPDATE AUT SET FACTURADA = 0, MARCAFAC = 0, N_FACTURA = NULL WHERE  AUT.N_FACTURA =  @N_FACTURA AND FACTURADA = 1
	UPDATE AUTD SET FACTURADA = 0, N_FACTURA = NULL WHERE  AUTD.N_FACTURA = @N_FACTURA AND FACTURADA = 1
	UPDATE CIT SET FACTURADA = 0, N_FACTURA = NULL WHERE  CIT.N_FACTURA = @N_FACTURA AND FACTURADA = 1
   DELETE FXPD 
	FROM   FXPD INNER JOIN FXP  ON FXPD.N_PRESUP  = FXP.N_PRESUP
		                        AND FXPD.IDTERCERO = FXP.IDTERCERO
               INNER JOIN FTRD ON FXP.NOREFERENCIA = FTRD.NOADMISION
   WHERE  FXP.PROCEDENCIA  = 'CE'
   AND    FTRD.N_FACTURA   = @N_FACTURA
               
   DELETE FXP 
   FROM   FXP INNER JOIN FTRD ON FXP.NOREFERENCIA = FTRD.NOADMISION
   WHERE  FXP.PROCEDENCIA = 'CE'
   AND    FTRD.N_FACTURA   = @N_FACTURA

   DELETE FTRDC WHERE CNSFTR=@CNSFCT
    
   EXEC SPK_GENCONSECUTIVO @COMPANIA, @SEDE, '@LOG',  @NVOCONSEC OUTPUT  
   SELECT @NVOCONSEC = @SEDE + REPLACE(SPACE(8 - LEN(@NVOCONSEC))+LTRIM(RTRIM(@NVOCONSEC)),SPACE(1),0)
      
   INSERT INTO USLOG (CNSLOG, COMPANIA, NOADMISION, PROCESO, REQUEST, REFERENCIA, USUARIO, FECHA, SYS_ComputerName) 
   SELECT @NVOCONSEC, @COMPANIA, @N_FACTURA, 'ANULARFAC', 'PROCESS', @RAZONCAMBIO, @USUARIO, 
          DBO.FNK_FECHA_SIN_MLS(GETDATE()), @SYS_COMPUTERNAME
    
   INSERT INTO USLOGH( CNSLOG, ITEM, CAMPO, VALORANT, VALORNVO)
   SELECT @NVOCONSEC, 1, 'USU SOLICITA', @USUARIO2, NULL
    
END