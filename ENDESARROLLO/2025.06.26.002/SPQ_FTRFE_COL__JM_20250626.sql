CREATE OR ALTER PROCEDURE DBO.SPQ_FTRFE_COL @JSON NVARCHAR(MAX)
	WITH ENCRYPTION
AS
SET DATEFORMAT dmy
DECLARE @TBLERRORES TABLE (ERROR VARCHAR(MAX))
DECLARE  @PARAMETROS NVARCHAR(MAX)			,@MODELO VARCHAR(100)			   ,@METODO VARCHAR(100)
		,@USUARIO VARCHAR(12)				   ,@COMPANIA VARCHAR(2)		      ,@IDSEDE      VARCHAR(5)		
      ,@SYS_COMPUTERNAME VARCHAR(200)     ,@DATOS    VARCHAR(MAX)
      ,@N_FACTURA VARCHAR(20)             ,@CONTABILIZADA SMALLINT         ,@NROCOMPROBANTE VARCHAR(20)
      ,@DIASDIF SMALLINT                  ,@FECHANVA VARCHAR(20)           ,@CNSCXC VARCHAR(20)
      ,@IXCOUNTRY VARCHAR(20)             ,@ENVIO VARCHAR(20)
BEGIN
	SELECT *
	INTO #JSON
	FROM OPENJSON(@json) WITH (
			MODELO VARCHAR(100) '$.MODELO'
			,METODO VARCHAR(100) '$.METODO'
			,USUARIO VARCHAR(12) '$.USUARIO'
			,PARAMETROS NVARCHAR(MAX) AS JSON
	)

	SELECT @MODELO = MODELO			,@METODO = METODO
			,@PARAMETROS = PARAMETROS	,@USUARIO = USUARIO
	FROM #JSON
   SELECT @IXCOUNTRY=DBO.FNK_VALORVARIABLE('IXCOUNTRY')
	IF @METODO='FE_FECHAFTR'     
	BEGIN
		SELECT @N_FACTURA=N_FACTURA        
		FROM OPENJSON (@PARAMETROS)
		WITH (N_FACTURA  VARCHAR(20)   '$.N_FACTURA')

		PRINT '@N_FACTURA='+@N_FACTURA
		IF EXISTS(SELECT 1 FROM FTR WHERE N_FACTURA=@N_FACTURA AND COALESCE(FACTE,0)=0 AND ESTADO='P' AND CONVERT(DATE,F_FACTURA)<CONVERT(DATE,GETDATE()))
		BEGIN
			SELECT @CONTABILIZADA=CONTABILIZADA,@NROCOMPROBANTE=@NROCOMPROBANTE,@DIASDIF=DATEDIFF(DAY,F_FACTURA,GETDATE()) FROM FTR WHERE N_fACTURA=@N_fACTURA
			IF @DIASDIF>7
				INSERT INTO @TBLERRORES(ERROR)
				SELECT 'Diferencia de Dias entre la fecha factura y hoy, es mayor al valor Permitido, Comuniquese con el Administrador del Sistema'  
			ELSE
			BEGIN
				IF EXISTS(SELECT 1 FROM MCP WHERE NROCOMPROBANTE=@NROCOMPROBANTE)
				BEGIN
					IF EXISTS(SELECT 1 FROM MCP WHERE NROCOMPROBANTE=@NROCOMPROBANTE AND ESTADO=2)
					BEGIN
						UPDATE MCP SET ESTADO=1
						WHERE NROCOMPROBANTE=@NROCOMPROBANTE
						UPDATE MCP SET FECHACONTABLE=DBO.FNK_GETDATE(),MES=CASE WHEN MES<>MONTH(DBO.FNK_GETDATE()) THEN MONTH(DBO.FNK_GETDATE()) ELSE MES END
						WHERE NROCOMPROBANTE=@NROCOMPROBANTE
						UPDATE MCP SET ESTADO=2
						WHERE NROCOMPROBANTE=@NROCOMPROBANTE
					END
					UPDATE MCP SET FECHACONTABLE=DBO.FNK_GETDATE(),MES=CASE WHEN MES<>MONTH(DBO.FNK_GETDATE()) THEN MONTH(DBO.FNK_GETDATE()) ELSE MES END
					WHERE NROCOMPROBANTE=@NROCOMPROBANTE
				END
				ELSE
					UPDATE MCPE SET  FECHACONTABLE=DBO.FNK_GETDATE(),MES=CASE WHEN MES<>MONTH(DBO.FNK_GETDATE()) THEN MONTH(DBO.FNK_GETDATE()) ELSE MES END
					WHERE NROCOMPROBANTE=@NROCOMPROBANTE

				UPDATE FTR SET F_FACTURA=DATEADD(DAY,@DIASDIF,F_FACTURA),F_VENCE=DATEADD(DAY,@DIASDIF,F_VENCE) WHERE N_FACTURA=@N_FACTURA
			END
		END
		ELSE
		BEGIN
			INSERT INTO @TBLERRORES(ERROR)
			SELECT 'Factura no Encontrada, verfique e intente de nuevo'
		END
		IF(SELECT COUNT(1) FROM @TBLERRORES)>0
		BEGIN
			SELECT 'KO' OK, ERROR FROM @TBLERRORES
			RETURN
		END
      SELECT @FECHANVA=DBO.FNK_FECHA_GRINGA(F_FACTURA) FROM FTR WHERE N_FACTURA=@N_FACTURA
		SELECT 'OK' OK,@FECHANVA AS F_FACTURA
		RETURN 
	END 
	IF @METODO='FE_DESENCOLAR'     
	BEGIN
		SELECT @N_FACTURA=N_FACTURA        
		FROM OPENJSON (@PARAMETROS)
		WITH (N_FACTURA  VARCHAR(20)   '$.N_FACTURA')

		PRINT '@N_FACTURA='+@N_FACTURA
		IF EXISTS(SELECT 1 FROM FTR WHERE N_FACTURA=@N_FACTURA AND COALESCE(FACTE,0)<>2 AND ESTADO='P')
		BEGIN
			UPDATE FTR SET FACTE =0 WHERE N_FACTURA=@N_FACTURA
		END
		ELSE
		BEGIN
			INSERT INTO @TBLERRORES(ERROR)
			SELECT 'Factura no Encontrada, verfique e intente de nuevo'
		END
		IF(SELECT COUNT(1) FROM @TBLERRORES)>0
		BEGIN
			SELECT 'KO' OK, ERROR FROM @TBLERRORES
			RETURN
		END
		SELECT 'OK' OK
		RETURN 
	END 
	IF @METODO='FE_ENCOLAR'     
	BEGIN
		SELECT @N_FACTURA=N_FACTURA        
		FROM OPENJSON (@PARAMETROS)
		WITH (N_FACTURA  VARCHAR(20)   '$.N_FACTURA')

		PRINT '@N_FACTURA='+@N_FACTURA
		IF EXISTS(SELECT * FROM FTR WHERE N_FACTURA=@N_FACTURA AND COALESCE(FACTE,0)<>2 AND ESTADO='P' AND DATEDIFF(DAY,F_FACTURA,DBO.FNK_GETDATE()) < 1)
		BEGIN
			UPDATE FTR SET FACTE = 1 WHERE N_FACTURA=@N_FACTURA
		END
		ELSE
		BEGIN
			INSERT INTO @TBLERRORES(ERROR)
			SELECT 'La fecha de la Factura debe ser la Misma de la Actual, Verifique e intente de Nuevo'
		END
		IF(SELECT COUNT(1) FROM @TBLERRORES)>0
		BEGIN
			SELECT 'KO' OK, ERROR FROM @TBLERRORES
			RETURN
		END
		SELECT 'OK' OK
		RETURN 
	END 
	IF @METODO='LISTAR_FTRECXC'     
	BEGIN         
	   SELECT @CNSCXC=CNSCXC,@ENVIO=ENVIO     
	   FROM   OPENJSON (@PARAMETROS)
	   WITH (           
	   CNSCXC  VARCHAR(20)   '$.CNSCXC',
      ENVIO   VARCHAR(20)   '$.ENVIO'
	   )
	   IF EXISTS(SELECT * FROM FCXCD WHERE CNSCXC=@CNSCXC)    
	   BEGIN
         IF @IXCOUNTRY='PERU'
         BEGIN
            DECLARE @F_ENVIO VARCHAR(20)
            SELECT @F_ENVIO=CONVERT(VARCHAR,FECHAENVIO,112) FROM RIPS WHERE ENVIO=@ENVIO
            IF @F_ENVIO IS NULL
            BEGIN 
               SELECT @F_ENVIO=CONVERT(VARCHAR,FECHACXC,112) FROM FCXC WHERE CNSCXC=@CNSCXC
               SELECT @ENVIO=RIGHT(@CNSCXC,6)
            END
          
		      SELECT 'OK'OK,'ddig_'+NIT+'_'+COALESCE(IDALTERNA2,NIT)+'_'+LTRIM(RTRIM(@ENVIO))+'_'+LTRIM(RTRIM(@F_ENVIO)) AS N_SOPORTE,NIT AS RUT
            FROM TER WHERE IDTERCERO=DBO.FNK_VALORVARIABLE('IDTERCEROINSTALADO')
         END
         ELSE
         BEGIN
            SELECT 'OK'OK
         END
		  SELECT FTR.N_FACTURA,'FV',FTR.CNSFCT,FTR.IDFORMATO 
		  FROM FCXCD INNER JOIN FTR ON FCXCD.N_FACTURA=FTR.N_FACTURA
		  WHERE FCXCD.CNSCXC=@CNSCXC
        ORDER BY FTR.N_FACTURA
		  RETURN
	   END
	   ELSE
	   BEGIN
		  SELECT 'KO'KO, 'Cuenta de cobro Sin Detalles'	
	   END
	END 
   IF @METODO='VALIDAFTR'     
   BEGIN         
      SELECT @N_FACTURA=N_FACTURA       
      FROM   OPENJSON (@PARAMETROS)
      WITH (           
          N_FACTURA  VARCHAR(20)   '$.N_FACTURA'
      )
      IF EXISTS(SELECT * FROM FTR INNER JOIN TER ON FTR.IDTERCERO=TER.IDTERCERO WHERE N_FACTURA=@N_FACTURA 
                AND(COALESCE(TER.ENVIODICAJA,0)=1 OR (PROCEDENCIA='CAJA' OR IDPLAN IN(SELECT DATO FROM USVGS WHERE IDVARIABLE LIKE 'IDPLANPART%'))))
      BEGIN
         SELECT 'OK'OK,PARTICULAR=1
      END
      ELSE
      BEGIN
         SELECT 'OK'OK,PARTICULAR=0
      END
      RETURN
   END     
END




