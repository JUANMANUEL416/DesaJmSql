CREATE OR ALTER PROCEDURE DBO.SPQ_HPRE
	@JSON  NVARCHAR(MAX)
WITH ENCRYPTION
AS
DECLARE @PARAMETROS         NVARCHAR(MAX)	,@MODELO			VARCHAR(100)    ,@METODO        VARCHAR(100)	,@USUARIO       VARCHAR(12)
	   ,@GRUPO				VARCHAR(8)		,@SYS_COMPUTERNAME	VARCHAR(254)    ,@IDSEDE          VARCHAR(5)		,@A             INT
       ,@DATOS              VARCHAR(MAX)										,@AUX			NVARCHAR(MAX)	,@CLASE			VARCHAR(20)
	   ,@COMPANIA			VARCHAR(2)		,@IDMEDICO			VARCHAR(20)		,@IDBODEGA		VARCHAR(5)
	   ,@NOADMISION			VARCHAR(20)		,@NOAUTORIZACION			VARCHAR(20)        ,@IDPROVEEDOR VARCHAR(20)
DECLARE @NOPRESTACION		VARCHAR(20)		,@NOITEM	SMALLINT ,@IDSERVICIO	VARCHAR(20), @CNSRPDX  VARCHAR(20)
DECLARE @PCUB VARCHAR(1), @CCONTRATANTE VARCHAR(1), @PREFIJOS VARCHAR(50), @IDAREA VARCHAR(10)
DECLARE @FECHA DATETIME, @FILTRO VARCHAR(256), @CMD VARCHAR(MAX), @ELIMINA VARCHAR(1)

BEGIN
	SET LANGUAGE Spanish; 
	SET DATEFORMAT dmy
	SELECT @A = ISJSON(@JSON)
	IF @A = 0 
	BEGIN
		RAISERROR('Json: Formato Erroneo',16,1)
		RETURN
	END 
	SELECT @MODELO = MODELO , @METODO = METODO , @PARAMETROS = PARAMETROS , @USUARIO = USUARIO
	FROM OPENJSON (@json)
	WITH (
		MODELO         VARCHAR(100)     '$.MODELO',
		METODO         VARCHAR(100)     '$.METODO',
		USUARIO        VARCHAR(12)      '$.USUARIO',
		PARAMETROS     NVARCHAR(MAX)     AS JSON
	)

	--DEFINICION DE TABLA DE ERRORES
	DECLARE @TBLERRORES TABLE(ERROR VARCHAR(200));
	-- TOMA DEL GRUPO, SYS_COMPUTERNAME, SEDE   DE ACUERDO AL USUARIO
	PRINT 'USUARIO:'+@USUARIO
	SELECT @GRUPO = DBO.FNK_DESCIFRAR(GRUPO) FROM USUSU WHERE USUARIO = @USUARIO
	SELECT @SYS_COMPUTERNAME = SYS_COMPUTERNAME FROM USUSU WHERE USUARIO = @USUARIO
	SELECT @IDSEDE = IDSEDE, @COMPANIA=COMPANIA, @IDBODEGA = IDBODEGA FROM UBEQ WHERE SYS_ComputerName = @SYS_COMPUTERNAME
	SELECT @IDMEDICO = IDMEDICO FROM USUSU WHERE USUARIO=@USUARIO
	IF COALESCE(@IDSEDE,'') = '' SELECT @IDSEDE = '01'

	IF @METODO = 'HPRE'
	BEGIN
		SELECT @METODO = METODO, @PARAMETROS = HPRE, @NOADMISION = NOADMISION, @FILTRO = FILTRO,
			@NOPRESTACION = NOPRESTACION, @PCUB = PCUBRIMIENTO, @CCONTRATANTE=CCONTRATANTE,
			@PREFIJOS = PREFIJOS, @IDAREA=IDAREA, @ELIMINA = ELIMINA
		FROM OPENJSON (@PARAMETROS)
		WITH (
			METODO		VARCHAR(20)     '$.METODO',
			NOADMISION  VARCHAR(20)		'$.NOADMISION',
			FILTRO		VARCHAR(256)	'$.FILTRO',
			NOPRESTACION	VARCHAR(20)     '$.NOPRESTACION',
			PCUBRIMIENTO	VARCHAR(1)		'$.PCUBRIMIENTO',
			CCONTRATANTE	VARCHAR(1)		'$.CCONTRATANTE',
			PREFIJOS		VARCHAR(50)     '$.PREFIJOS',
			IDAREA			VARCHAR(20)     '$.IDAREA',
			ELIMINA			VARCHAR(1)      '$.ELIMINA',
			HPRE	NVARCHAR(MAX)     AS JSON
		)
		IF @METODO = 'CONSULTA_HADM'
		BEGIN
			SELECT 'OK' OK
			SELECT HADM.NOADMISION, TER.IDTERCERO, TER.NIT, TER.RAZONSOCIAL, AFI.TIPO_DOC, AFI.NOMBREAFI, AFI.DOCIDAFILIADO,
				HADM.NIVELSOCIOEC, HADM.IDPLAN, PLN.DESCPLAN, IIF(COALESCE(HADM.TIPOAFILIADO,'')<>'',HADM.TIPOAFILIADO,AFI.TIPOAFILIADO) TIPOAFILIADO,
				AFI.SEXO, AFI.FNACIMIENTO, AFI.EDAD, HADM.TIPOADM, SOAT = IIF(HADM.TIPOADM=dbo.FNK_VALORVARIABLE('IDTARIFASOAT'),1,0),
				HADM.CNSHACTRAN,  HABCAMA = COALESCE(HHAB.HABCAMA, HADM.HABCAMA), HADM.FECHA, COALESCE(HADM.PAQUETE,0) PAQUETE,
				PERMITENOCOBRAR = dbo.FNK_VALORVARIABLE('HPREDMARCARNOCOBRAR'), CEN.CCOSTO, CEN.DESCRIPCION NOMCCOSTO, AFU.IDAREA, AFU.DESCRIPCION NOMIDAREA,
				HADM.IDMEDICOTRA, HADM.IDMEDICOING, @IDMEDICO IDMEDICO, MEDICOENPRESTACION = dbo.FNK_VALORVARIABLE('MEDICOENPRESTACION'), COALESCE(HADM.CERRADA,0) CERRADA
			FROM HADM
				INNER JOIN AFI ON AFI.IDAFILIADO=HADM.IDAFILIADO
				INNER JOIN TER ON TER.IDTERCERO=HADM.IDTERCERO
				LEFT JOIN PLN ON PLN.IDPLAN=HADM.IDPLAN
				LEFT JOIN HHAB ON HHAB.NOADMISION=HADM.NOADMISION
				LEFT JOIN CEN ON HHAB.CCOSTO=CEN.CCOSTO
				LEFT JOIN AFU ON AFU.IDAREA=CEN.IDAREA
				LEFT JOIN PPT ON PPT.IDTERCERO=HADM.IDTERCERO AND HADM.IDPLAN=PPT.IDPLAN
				LEFT JOIN HACTRAN ON HACTRAN.CNSHACTRAN=HADM.CNSHACTRAN
			WHERE HADM.NOADMISION=@NOADMISION
			
			SELECT @CMD=' SELECT SUM(HPRE.VALORTOTAL) VRPRESTACIONES ,SUM(HPRE.VALOREXEDENTE) VREXCEDENTE ,SUM(HPRE.VALORCOPAGO) VRCOPAGO
				,SUM(HPRE.VALORPCOMP) VRPCOMP
			FROM   HPRE 
			WHERE  '+IIF(COALESCE(@FILTRO,'')='','NOADMISION='''+@NOADMISION+'''', @FILTRO)
			PRINT @CMD
			EXEC (@CMD)

			RETURN
		END
		
		IF @METODO = 'RELIQUIDAR_ADMISION'
		BEGIN			
			IF @NOADMISION IS NULL
			BEGIN 
				SELECT 'KO' OK
				SELECT ERROR = 'No se han definido todos los parametros por favor valide, sin prestacion'
			END
			ELSE
			BEGIN
				IF (SELECT COUNT(1) FROM HPRE A INNER JOIN HPRED B ON A.NOPRESTACION=B.NOPRESTACION WHERE NOADMISION=@NOADMISION AND COALESCE(B.FACTURADA,0)=0)<=0
					INSERT INTO @TBLERRORES(ERROR) SELECT 'La Admision No Tiene Prestaciones.'
				
				IF (SELECT COUNT(1) FROM HPRE WHERE HPRE.NOADMISION=@NOADMISION AND NOT EXISTS(SELECT 1 FROM HPRED WHERE HPRE.NOPRESTACION=HPRED.NOPRESTACION))<=0
					DELETE HPRE WHERE HPRE.NOADMISION=@NOADMISION AND NOT EXISTS(SELECT 1 FROM HPRED WHERE HPRE.NOPRESTACION=HPRED.NOPRESTACION)
				
				IF (SELECT COUNT(1) FROM HPRE WHERE NOADMISION=@NOADMISION AND  ISNULL(IDAREA,'') = '')>0
					INSERT INTO @TBLERRORES(ERROR) SELECT 'Existen Prestaciones sin Area Funcional en esta Admisión, No se Puede reliquidar así'
				IF @ELIMINA = 1
				BEGIN 
					DELETE FROM HPRE WHERE NOADMISION=@NOADMISION AND NOT EXISTS (SELECT 1 FROM HPRED WHERE HPRED.NOPRESTACION=HPRE.NOPRESTACION)
				END
				IF DBO.FNK_VALORVARIABLE('IXCOUNTRY')='PERU'
				BEGIN
					UPDATE HPRED SET IDAREA='01' WHERE ISNULL(IDAREA,'')=''
					UPDATE HPRE SET IDAREA='01' WHERE ISNULL(IDAREA,'')=''
				END
				IF (SELECT COUNT(1) FROM @TBLERRORES)>0
				BEGIN
					SELECT 'KO' OK
					SELECT ERROR = ERROR FROM @TBLERRORES
					RETURN
				END
				BEGIN TRY
					IF DBO.FNK_VALORVARIABLE('IXCOUNTRY')='PERU'
						EXEC SPK_RELIQUIDAR_HADM_PE @NOADMISION
					ELSE
						EXEC SPK_RELIQUIDAR_HADM @NOADMISION, @PCUB, @CCONTRATANTE, @PREFIJOS, @IDAREA

					SELECT 'OK' OK
				END TRY
				BEGIN CATCH
					SELECT 'KO' OK
					SELECT ERROR = 'Error al reliquidar la admision, error='+ERROR_MESSAGE()
					RETURN
				END CATCH

			END
			RETURN
		END
		
		IF @METODO = 'AGREGAR_HPRE' OR @METODO='EDITAR_HPRE'
		BEGIN
			SELECT * INTO #HPRE 
			FROM OPENJSON (@PARAMETROS)
			WITH (
					METODO			VARCHAR(20)	'$.METODO'
					,NOADMISION		VARCHAR(16)	'$.NOADMISION'
					,NOPRESTACION	VARCHAR(20)	'$.NOPRESTACION'
					,PREFIJO		VARCHAR(6)	'$.PREFIJO'
					,FECHA			VARCHAR(20)	'$.FECHA'
					,HORA			VARCHAR(20)	'$.HORA'
					,IDMEDICO		VARCHAR(12)	'$.IDMEDICO'
					,COBRARA		VARCHAR(1)	'$.COBRARA'
					,IDTERCEROCA	VARCHAR(20)	'$.IDTERCEROCA'
					,IDPLAN			VARCHAR(6)	'$.IDPLAN'
					,CCOSTO			VARCHAR(20)	'$.CCOSTO'
					,CCOSTOAUX		VARCHAR(20)	'$.CCOSTOAUX'
					--,AREA			VARCHAR(20)	'$.AREA'
				)
			SELECT @FECHA = REPLACE(COALESCE(A.FECHA,'19000101'),'-','')+' '+LEFT(COALESCE(A.HORA,'00:00'),5), @IDAREA = CEN.IDAREA
			FROM #HPRE A LEFT JOIN CEN ON CEN.CCOSTO=A.CCOSTO
			INSERT INTO @TBLERRORES (ERROR)
			SELECT 'Debe seleccionar un CCOSTO auxiliar ' DATOS
			FROM #HPRE A WHERE COALESCE(A.CCOSTOAUX,'')='' AND DBO.FNK_VALORVARIABLE('PIDECCOSTO_SOLICITA')='SI' 
					AND EXISTS(SELECT 1 FROM TGEN WHERE TABLA = 'General' AND CAMPO = 'PREFIJOCCOSTOSOL' AND CODIGO = A.PREFIJO)
			UNION ALL
			SELECT 'El Período de Facturación se Encuentra Cerrado, No se puede crear el cargo con Período de Facturación Cerrado'
			FROM #HPRE A WHERE DBO.FNK_VALORVARIABLE('VALIDAR_PERFAC')='SI' 
					AND NOT EXISTS(SELECT 1 FROM PRI WHERE ANO=YEAR(@FECHA) AND MES=MONTH(@FECHA))
			UNION ALL
			SELECT 'Centro de Costo No Existe' FROM #HPRE A WHERE NOT EXISTS(SELECT 1 FROM CEN WHERE CCOSTO=COALESCE(A.CCOSTO,''))
			UNION ALL
			SELECT 'Medico no existe.' FROM #HPRE A WHERE NOT EXISTS(SELECT 1 FROM MED WHERE IDMEDICO=COALESCE(A.IDMEDICO,''))
			UNION ALL
			SELECT 'No Puede Hacer Cargos, de un Período Diferente al Actual.' FROM #HPRE A WHERE DBO.FNK_VALORVARIABLE('MOV_PERIODOS_ANT')='NO' 
					AND (MONTH(GETDATE())<>MONTH(@FECHA) OR YEAR(GETDATE())<>YEAR(@FECHA))
			UNION ALL
			SELECT 'Fecha u Hora de la Prestación Mayor a la Actual' FROM #HPRE A WHERE @FECHA>GETDATE()
			UNION ALL
			SELECT 'Fecha u Hora de la Prestación Menor a la de Admisión' FROM HADM WHERE NOADMISION=@NOADMISION AND @FECHA<HADM.FECHA
			UNION ALL
			SELECT 'Fecha de la prestación mayor a la de alta médica. Alta medica='+CONVERT(varchar,HADM.FECHAALTAMED,103)+' '+CONVERT(varchar,HADM.FECHAALTAMED,103) 
			FROM HADM WHERE NOADMISION=@NOADMISION AND @FECHA>HADM.FECHAALTAMED
			UNION ALL
			SELECT 'Las Estancias se Cargan Automáticamente..' FROM #HPRE A WHERE DBO.FNK_VALORVARIABLE('COBROESTANCIA_AUTO')='SI' AND DBO.FNK_VALORVARIABLE('PREFIJOESTANCIAS')=A.PREFIJO
			UNION ALL
			SELECT 'No existe configuracion contable para este prefijo, centro de costo y Area funcional.' FROM #HPRE A WHERE DBO.FNK_VALORVARIABLE('ASI_VAL_CCAF_CARGOS')='SI' 
				AND NOT EXISTS(SELECT 1 FROM KMCOM WHERE IDTIPOCONT= 'VENTAS' AND PREFIJO= A.PREFIJO  AND CCOSTO = A.CCOSTO AND IDAREA = @IDAREA)
			UNION ALL
			SELECT 'Prefijo No Permitido' FROM #HPRE A 
			WHERE NOT EXISTS(SELECT 1 FROM PREGR WHERE GRUPO=@GRUPO AND PREFIJO=A.PREFIJO)
			UNION ALL
			SELECT 'La admision sobrepasa la fecha tope de la admision' FROM HADM A 
			WHERE NOADMISION=@NOADMISION AND COALESCE(A.VENCEAUT,0)<>0 AND @FECHA>A.FECHAVCEAUT AND COALESCE(A.CLASEING,'')<>'S'
				AND NOT EXISTS (SELECT 1 FROM HADMAD B WHERE A.NOADMISION=B.NOADMISION AND COALESCE(B.TIPO,'')='A' AND @FECHA<B.FECHAVCEAUT)
			UNION ALL
			SELECT 'La admision sobrepasa la fecha tope de la admision' FROM HADM A 
			WHERE NOADMISION=@NOADMISION AND COALESCE(A.MTOPE,0)<>0 AND A.TIPOTOPE='Fecha' AND  @FECHA>A.FECHATOPE AND COALESCE(A.CLASEING,'')<>'S'
			UNION ALL
			SELECT 'La admision llego o sobrepaso el tope del SOAT. Tope: '+convert(varchar,B.TOPE)+ ' Gastado: '+convert(varchar,B.VLRGASTADO)++ ' Falta: '+convert(varchar,B.VLRFALTA)
			FROM HADM A INNER JOIN HACTRAN B ON A.CNSHACTRAN=B.CNSHACTRAN
			WHERE NOADMISION=@NOADMISION AND A.TIPOADM=DBO.FNK_VALORVARIABLE('IDTARIFASOAT') AND B.VLRFALTA<=0 AND DBO.FNK_VALORVARIABLE('SOATCONTINUASINTOPE')<>'SI'
			
			IF(SELECT COUNT(1) FROM @TBLERRORES)>0
			BEGIN
				SELECT 'KO' OK
				SELECT ERROR FROM @TBLERRORES
				RETURN
			END
			BEGIN TRAN
				BEGIN TRY
					IF @METODO='AGREGAR_HPRE'
					BEGIN
						EXEC SPK_GENCONSECUTIVO @COMPANIA, @IDSEDE,'@HPRE', @NOPRESTACION OUTPUT  
						SELECT @NOPRESTACION = @IDSEDE + REPLACE(SPACE(8 - LEN(@NOPRESTACION))+LTRIM(RTRIM(@NOPRESTACION)),SPACE(1),0)

						INSERT INTO HPRE (NOPRESTACION, NOADMISION, FECHA, IDPLAN, IDAREAH, IDAREA, IDSEDE, ALTOCOSTO, USUARIO, CERRADA,PCUBRIMIENTO,
											ESDEINV, PEDIDOINV, INDDEVOLUCION, PREFIJO,CCOSTO, FINALIDAD, AMBITO, PERSONAL_AT, IDAREAEQUIPO,IDMEDICO, 
											COBRARA, IDTERCEROCA, SYS_COMPUTERNAME, IDAREAAUX, ENLAB, ANULADO, PROCEDENCIA)
						SELECT @NOPRESTACION, @NOADMISION, @FECHA, A.IDPLAN, AFU.IDAREAH, @IDAREA, @IDSEDE, COALESCE(CEN.GALTOCOSTO_QX,'No'), @USUARIO,0,100,
								COALESCE(PRE.MINVENTARIOS,0), 0,0,A.PREFIJO, A.CCOSTO, PRE.FINALIDAD, AFU.AMBITO, MES.PERSONAL_AT, @IDAREA, A.IDMEDICO, 
								A.COBRARA, A.IDTERCEROCA, @SYS_COMPUTERNAME,@IDAREA,0,0, ''
						FROM #HPRE A
							LEFT JOIN PRE ON PRE.PREFIJO=A.PREFIJO
							LEFT JOIN CEN ON CEN.CCOSTO=A.CCOSTO
							LEFT JOIN AFU ON AFU.IDAREA=@IDAREA
							LEFT JOIN MED ON MED.IDMEDICO=A.IDMEDICO
							LEFT JOIN MES ON MES.IDEMEDICA=MED.IDEMEDICA
					END
					ELSE IF @METODO='EDITAR_HPRE'
					BEGIN
						UPDATE HPRE SET FECHA=@FECHA, IDMEDICO=A.IDMEDICO, COBRARA=A.COBRARA, PREFIJO=A.PREFIJO, IDTERCEROCA=A.IDTERCEROCA, IDPLAN=A.IDPLAN,
							CCOSTO=A.CCOSTO, IDAREA=@IDAREA, ALTOCOSTO=COALESCE(CEN.GALTOCOSTO_QX,'No'), IDAREAH=AFU.IDAREAH, AMBITO=AFU.AMBITO, 
							FINALIDAD=PRE.FINALIDAD, PERSONAL_AT=MES.PERSONAL_AT, ESDEINV=COALESCE(PRE.MINVENTARIOS,0)
						FROM #HPRE A
							LEFT JOIN PRE ON PRE.PREFIJO=A.PREFIJO
							LEFT JOIN CEN ON CEN.CCOSTO=A.CCOSTO
							LEFT JOIN AFU ON AFU.IDAREA=@IDAREA
							LEFT JOIN MED ON MED.IDMEDICO=@IDMEDICO
							LEFT JOIN MES ON MES.IDEMEDICA=MED.IDEMEDICA
						WHERE HPRE.NOPRESTACION=A.NOPRESTACION
					END	
				END TRY
				BEGIN CATCH
					ROLLBACK
					SELECT 'KO' OK
					SELECT ERROR = 'Error al insertar: '+ERROR_MESSAGE()
					RETURN
				END CATCH
			COMMIT
			SELECT 'OK' OK, @NOPRESTACION
			RETURN
		END
		
		SELECT @NOPRESTACION = NOPRESTACION
		FROM OPENJSON (@PARAMETROS)
		WITH (
			NOPRESTACION	VARCHAR(20)     '$.NOPRESTACION'
		)
		IF @METODO = 'ELIMINAR_HPRE'
		BEGIN
			IF NOT EXISTS (SELECT 1 FROM HPRE WHERE NOADMISION=@NOADMISION AND NOPRESTACION=@NOPRESTACION)
			BEGIN
				SELECT 'KO' OK
				SELECT ERROR = 'NoPrestacion no existe en base de datos, por favor revise'
				RETURN
			END
			IF EXISTS (SELECT 1 FROM HPRED WHERE NOPRESTACION=@NOPRESTACION)
			BEGIN
				SELECT 'KO' OK
				SELECT ERROR = 'No se puede eliminar prestacion con detalle'
				RETURN
			END
			IF EXISTS (SELECT 1 FROM HPRED WHERE NOPRESTACION=@NOPRESTACION AND COALESCE(HPRED.FACTURADA,0)=1)
			BEGIN
				SELECT 'KO' OK
				SELECT ERROR = 'No se puede eliminar prestacion con detalles facturados'
				RETURN
			END
			BEGIN TRAN
				BEGIN TRY
					DELETE HPRE FROM HPRE WHERE NOADMISION=@NOADMISION AND  NOPRESTACION=@NOPRESTACION
				END TRY
				BEGIN CATCH
					ROLLBACK
					SELECT 'KO' OK
					SELECT ERROR = 'Error al eliminar: '+ERROR_MESSAGE()
					RETURN
				END CATCH
			COMMIT
			SELECT 'OK' OK
			RETURN
		END

		IF @METODO = 'PEDIR_INV'
		BEGIN			
			IF @NOPRESTACION IS NULL
			BEGIN 
				SELECT 'KO' OK
				SELECT ERROR = 'No se han definido todos los parametros por favor valide, sin prestacion'
			END
			ELSE
			BEGIN
				IF (SELECT COUNT(1) FROM HPRE WHERE NOPRESTACION = @NOPRESTACION AND HPRE.ESDEINV=1 AND HPRE.PEDIDOINV=0
					AND HPRE.PROCEDENCIA NOT IN ('HBALI','CMEZCLAS','IENF'))<=0
				BEGIN
					INSERT INTO @TBLERRORES(ERROR)
					SELECT 'NoPrestacion no disponible para pedir por su procedencia o tipo'
				END
				IF UPPER(dbo.FNK_VALORVARIABLE('ASIS_VALIDAUSERHPRE'))='SI'
				BEGIN
					IF (SELECT USUARIO FROM HPRE WHERE NOPRESTACION=@NOPRESTACION)<>@USUARIO 
					BEGIN						
						INSERT INTO @TBLERRORES(ERROR)
						SELECT 'No se puede pedir a farmacia porque la prestación fue creada por un usuario diferente al actual'
					END
				END
				IF NOT EXISTS(SELECT 1 FROM HPRED WHERE NOPRESTACION=@NOPRESTACION)
				BEGIN
					INSERT INTO @TBLERRORES(ERROR) SELECT 'Cargos sin detalles'
				END
				IF (SELECT COUNT(1) FROM @TBLERRORES)>0
				BEGIN
					SELECT 'KO' OK
					SELECT ERROR = ERROR FROM @TBLERRORES
					RETURN
				END
				BEGIN TRY
					EXEC SPK_PEDIDOINVQX @NOPRESTACION, @COMPANIA,@IDSEDE, @USUARIO ,@SYS_COMPUTERNAME, 'RPDX',@IDBODEGA
				END TRY
				BEGIN CATCH
					SELECT 'KO' OK
					SELECT ERROR = 'Error al pedir a inventario, error='+ERROR_MESSAGE()
					RETURN
				END CATCH
			END
			RETURN
		END
		
		IF @METODO = 'DESHACER_PEDIDO'
		BEGIN			
			IF @NOPRESTACION IS NULL
			BEGIN 
				SELECT 'KO' OK
				SELECT ERROR = 'No se han definido todos los parametros por favor valide, sin prestacion'
			END
			ELSE
			BEGIN
				IF (SELECT COUNT(1) FROM HPRE WHERE NOPRESTACION = @NOPRESTACION AND HPRE.PEDIDOINV=1
					AND HPRE.PROCEDENCIA NOT IN ('HBALI','CMEZCLAS','IENF'))<=0
				BEGIN
					INSERT INTO @TBLERRORES(ERROR)
					SELECT 'No puede deshacer pedidos por su procedencia o este no se encuentra pedido aun '
				END
				IF NOT EXISTS(SELECT 1 FROM HPRED WHERE NOPRESTACION=@NOPRESTACION)
				BEGIN
					INSERT INTO @TBLERRORES(ERROR) SELECT 'Cargos sin detalles'
				END
				IF (SELECT COUNT(1) FROM @TBLERRORES)>0
				BEGIN
					SELECT 'KO' OK
					SELECT ERROR = ERROR FROM @TBLERRORES
					RETURN
				END
				BEGIN TRY
					EXEC SPK_DESHACEPEDIDOINVQX @NOPRESTACION
				END TRY
				BEGIN CATCH
					SELECT 'KO' OK
					SELECT ERROR = 'Error al deshacer el pedido, error='+ERROR_MESSAGE()
					RETURN
				END CATCH
			END
			RETURN
		END
		
		IF @METODO = 'REVISAR_ADMISION'
		BEGIN			
			IF @NOADMISION IS NULL
			BEGIN 
				SELECT 'KO' OK
				SELECT ERROR = 'No se han definido todos los parametros por favor valide, sin prestacion'
			END
			ELSE
			BEGIN
				BEGIN TRY
					EXEC SPK_GENCONSECUTIVO @COMPANIA, @IDSEDE, 'RPDX',  @CNSRPDX OUTPUT
					SELECT @CNSRPDX = @IDSEDE + REPLACE(SPACE(8 - LEN(@CNSRPDX))+LTRIM(RTRIM(@CNSRPDX)),SPACE(1),0)
					EXEC SPK_ESTADO_ADMI @NOADMISION, @CNSRPDX
					IF (SELECT COUNT(1) FROM RPDX WHERE CNS=@CNSRPDX)>0
					BEGIN
						SELECT 'KO' OK
						SELECT ERROR = NOMBRE FROM RPDX WHERE CNS=@CNSRPDX
					END
					ELSE
						SELECT 'OK' OK
				END TRY
				BEGIN CATCH
					SELECT 'KO' OK
					SELECT ERROR = 'Error al revisar la admision, error='+ERROR_MESSAGE()
					RETURN
				END CATCH
			END
			RETURN
		END
		
		RETURN
	END
	IF @METODO = 'HPRED'
	BEGIN
		SELECT @METODO = METODO, @PARAMETROS = HPRED
		FROM OPENJSON (@PARAMETROS)
		WITH (
			METODO  VARCHAR(20)     '$.METODO',
			HPRED	NVARCHAR(MAX)     AS JSON
		)
		DECLARE @CANTIDAD SMALLINT,@VALOR DECIMAL(14,2), @PAQUETE SMALLINT, @COMENTARIOS VARCHAR(2048), @TIPODTO VARCHAR(1), @DESCUENTO DECIMAL(14,2), @MANUAL SMALLINT

		SELECT @NOPRESTACION = NOPRESTACION, @NOITEM = NOITEM, @IDSERVICIO = IDSERVICIO, @CANTIDAD = CANTIDAD, @VALOR = VALOR, 
				@PAQUETE = PAQUETE, @COMENTARIOS = COMENTARIOS, @TIPODTO = TIPODTO, @DESCUENTO = DESCUENTO, @MANUAL = [MANUAL] , @NOAUTORIZACION = NOAUTORIZACION,
            @IDPROVEEDOR=IDPROVEEDOR
		FROM OPENJSON (@PARAMETROS)
		WITH (
			NOPRESTACION	VARCHAR(20)     '$.NOPRESTACION'
			,NOITEM			VARCHAR(20)		'$.NOITEM'
			,IDSERVICIO		VARCHAR(20)     '$.IDSERVICIO'
			,CANTIDAD		SMALLINT		'$.CANTIDAD'
			,VALOR			DECIMAL(14,2)   '$.VALOR'
			,PAQUETE		SMALLINT	    '$.PAQUETE'
			,COMENTARIOS	VARCHAR(2048)   '$.COMENTARIOS'
			,TIPODTO		VARCHAR(1)		'$.TIPODTO'
			,DESCUENTO		DECIMAL(14,2)	'$.DESCUENTO'
			,NOAUTORIZACION		VARCHAR(20)     '$.NOAUTORIZACION'
			,[MANUAL]		SMALLINT		'$.MANUAL'
         ,IDPROVEEDOR VARCHAR(20) '$.IDPROVEEDOR'
		)
		SELECT @NOADMISION = NOADMISION FROM HPRE WHERE NOPRESTACION=@NOPRESTACION
		IF @METODO = 'NOCOBRABLE'
		BEGIN
			IF(@NOPRESTACION+@IDSERVICIO) IS NULL
			BEGIN 
				SELECT 'KO' OK
				SELECT ERROR = 'NO SE HAN DEFINIDO TODOS LOS PARAMETROS POR FAVOR VALIDE'
			END
			ELSE
			BEGIN
				BEGIN TRY
					IF dbo.FNK_VALORVARIABLE('IXCOUNTRY')<>'PERU'
						EXEC SPK_NOCOBRABLEMANUAL @NOPRESTACION, @NOITEM, 1,@USUARIO
					ELSE
						EXEC SPK_ADD_DEL_COPAGOS_HPRED @NOPRESTACION, @NOITEM, 1,@IDSEDE, @USUARIO

				END TRY
				BEGIN CATCH
					SELECT 'KO' OK
					SELECT ERROR = 'Error al marcar como no cobrable error='+ERROR_MESSAGE()
					RETURN
				END CATCH
			END
			SELECT 'OK' OK
			RETURN
		END
		IF @METODO = 'ADDPAQUETE'
		BEGIN
			IF(@NOPRESTACION+@IDSERVICIO) IS NULL
			BEGIN 
				SELECT 'KO' OK
				SELECT ERROR = 'NO SE HAN DEFINIDO TODOS LOS PARAMETROS POR FAVOR VALIDE'
				RETURN
			END
			ELSE
			BEGIN
				BEGIN TRY
					UPDATE HPRED SET PAQUETE=1-COALESCE(PAQUETE,0) 
					WHERE NOPRESTACION = @NOPRESTACION AND NOITEM=@NOITEM AND IDSERVICIO=@IDSERVICIO
				END TRY
				BEGIN CATCH
					SELECT 'KO' OK
					SELECT ERROR = 'Error al marcar como no cobrable error='+ERROR_MESSAGE()
					RETURN
				END CATCH
			END
			SELECT 'OK' OK
			RETURN
		END
		IF @METODO = 'AGREGAR'
		BEGIN
			SELECT @NOITEM = 0
			SELECT @NOITEM = MAX(NOITEM) FROM HPRED WHERE NOPRESTACION=@NOPRESTACION
			SELECT @NOITEM = COALESCE(@NOITEM,0)+1
			BEGIN TRAN
				BEGIN TRY
					INSERT INTO HPRED (NOPRESTACION, NOITEM, IDSERVICIO, CANTIDAD, IDPLAN, COMENTARIOS, IDCONCEPTORIPS, USUARIO,TIPOSERCIRUGIA,FECHA,
									VIA,IDAREA,COBRARA, IDTERCEROCA, PCUBRIMIENTO, TIPODTO,DESCUENTO,CCOSTO,AQUIENCOBRO,CODCUPS,VALOR,[MANUAL], NOAUTORIZACION,IDPROVEEDOR)
					SELECT @NOPRESTACION, @NOITEM, @IDSERVICIO,@CANTIDAD,A.IDPLAN, @COMENTARIOS,B.CODIGORIPS,@USUARIO,'No',dbo.FNK_FECHA_SIN_MLS(GETDATE()),
							'NA', @IDAREA, A.COBRARA, A.IDTERCEROCA, 100, @TIPODTO, @DESCUENTO, A.CCOSTO,'N',B.CODCUPS, @VALOR, @MANUAL , COALESCE(@NOAUTORIZACION,''),
                     @IDPROVEEDOR
					FROM HPRE A 
					INNER JOIN SER B ON B.IDSERVICIO=@IDSERVICIO
					WHERE NOPRESTACION=@NOPRESTACION
				END TRY
				BEGIN CATCH
					ROLLBACK
					SELECT 'KO' OK
					SELECT ERROR = 'Error al insertar detalle: '+ERROR_MESSAGE()
					RETURN
				END CATCH
			COMMIT
			IF EXISTS(SELECT 1 FROM HADM A WHERE A.NOADMISION=@NOADMISION AND COALESCE(A.COPAGONOAUTORIZACION,'')<>'' AND COALESCE(A.COPAGOVALOR,0)>0)
			BEGIN
				EXEC SPK_RELIQUIDACOPAGOQX @NOADMISION
			END
			ELSE
			BEGIN
				EXEC SPK_COPAGOQX @NOADMISION, @NOPRESTACION, @NOITEM
			END
			SELECT 'OK' OK
			RETURN
		END
		IF @METODO = 'EDITAR' OR @METODO = 'ELIMINAR'
		BEGIN
			IF(@NOPRESTACION+@IDSERVICIO) IS NULL
			BEGIN 
				SELECT 'KO' OK
				SELECT ERROR = 'NO se han definido todos los parametros por favor valide'
				RETURN
			END
			IF EXISTS(SELECT 1 FROM HPRED WHERE NOPRESTACION=@NOPRESTACION AND NOITEM=@NOITEM AND COALESCE(HPRED.CXP,0)=1)
			BEGIN 
				SELECT 'KO' OK
				SELECT ERROR = 'No se puede Editar una Prestación con Honorarios Medicos, Debe Anular El Honorario'
				RETURN
			END
			IF EXISTS(SELECT 1 FROM HPRED WHERE NOPRESTACION=@NOPRESTACION AND NOITEM=@NOITEM AND COALESCE(HPRED.FACTURADA,0)=1)
			BEGIN 
				SELECT 'KO' OK
				SELECT ERROR = 'Prestación Ya Facturada'
				RETURN
			END
			IF EXISTS(SELECT 1 FROM HPRED WHERE NOPRESTACION=@NOPRESTACION AND NOITEM=@NOITEM AND COALESCE(HPRED.ENCARGOS,0)<>0)
			BEGIN 
				SELECT 'KO' OK
				SELECT ERROR = 'Prestacion en apoyodx, encargos<>0'
				RETURN
			END
			IF EXISTS(SELECT 1 FROM HPRE A INNER JOIN HADM B ON A.NOADMISION=B.NOADMISION AND B.TIPOADM=dbo.FNK_VALORVARIABLE('IDTARIFASOAT')
						INNER JOIN HACTRAN C ON C.CNSHACTRAN=B.CNSHACTRAN 
						WHERE NOPRESTACION=@NOPRESTACION AND COALESCE(C.VLRFALTA,0)<=0)
			BEGIN 
				SELECT 'KO' OK
				SELECT ERROR = 'La admision llego o sobrepaso el tope del SOAT.'
				RETURN
			END
			IF EXISTS(SELECT 1 FROM HPRED WHERE NOPRESTACION=@NOPRESTACION AND NOITEM=@NOITEM AND COALESCE(PEDIDOINV,0)=1 AND IDSERVICIO<>@IDSERVICIO)
			BEGIN 
				SELECT 'KO' OK
				SELECT ERROR = 'No se puede editar un servicio soliictado a inventario'
				RETURN
			END
			
			BEGIN TRAN
				BEGIN TRY
					IF @METODO='EDITAR'
					BEGIN
						UPDATE HPRED SET CANTIDAD = @CANTIDAD, VALOR = @VALOR, PAQUETE = @PAQUETE, COMENTARIOS = @COMENTARIOS
										,TIPODTO = @TIPODTO, DESCUENTO = @DESCUENTO, [MANUAL] = @MANUAL, IDSERVICIO = @IDSERVICIO
										,IDCONCEPTORIPS = B.CODIGORIPS, CODCUPS = B.CODCUPS , NOAUTORIZACION  = COALESCE(@NOAUTORIZACION,'')
                              ,IDPROVEEDOR=@IDPROVEEDOR
						FROM HPRED A
						INNER JOIN SER B ON B.IDSERVICIO=@IDSERVICIO
						WHERE NOPRESTACION = @NOPRESTACION AND NOITEM=@NOITEM
					END
					ELSE IF @METODO='ELIMINAR'
					BEGIN
						DELETE FROM HPRED WHERE NOPRESTACION = @NOPRESTACION AND NOITEM=@NOITEM AND IDSERVICIO=@IDSERVICIO
					END
				END TRY
				BEGIN CATCH
					ROLLBACK
					SELECT 'KO' OK
					SELECT ERROR = 'Error al'+LOWER(@METODO)+' prestacion='+ERROR_MESSAGE()
					RETURN
				END CATCH
			COMMIT
			IF EXISTS(SELECT 1 FROM HADM A WHERE A.NOADMISION=@NOADMISION AND COALESCE(A.COPAGONOAUTORIZACION,'')<>'' AND COALESCE(A.COPAGOVALOR,0)>0)
			BEGIN
				EXEC SPK_RELIQUIDACOPAGOQX @NOADMISION
			END
			ELSE
			BEGIN
				EXEC SPK_COPAGOQX @NOADMISION, @NOPRESTACION, @NOITEM
			END
			SELECT 'OK' OK
			RETURN
		END
		RETURN
	END
END


