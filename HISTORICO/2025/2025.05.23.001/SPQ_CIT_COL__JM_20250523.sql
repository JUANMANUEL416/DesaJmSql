CREATE OR ALTER PROCEDURE DBO.SPQ_CIT_COL
@JSON  NVARCHAR(MAX)
WITH ENCRYPTION
AS
DECLARE	 @PARAMETROS   NVARCHAR(MAX)	,@MODELO           VARCHAR(100)	  ,@METODO    VARCHAR(100)		,@USUARIO      VARCHAR(12)
			,@GRUPO        VARCHAR(8)	   ,@SYS_COMPUTERNAME   VARCHAR(254) ,@SEDE      VARCHAR(5)		,@FECHA        VARCHAR(10)   
			,@IDEMEDICA    VARCHAR(4)	   ,@FECHA1             DATETIME		,@SQL		VARCHAR(MAX)	,@IDMEDICO     VARCHAR(20)
			,@HORA         VARCHAR(10)	   ,@IDDX               VARCHAR(10)	,@CONSECUTIVO VARCHAR(20)	,@IDAFILIADO   VARCHAR(20)   
			,@IDPLAN       VARCHAR(10)    ,@IDTERCERO         VARCHAR(20)  ,@IDSERVICIO VARCHAR(20)	,@NOMBREACOMPA VARCHAR(120)  
			,@TELEFONOACOMPA VARCHAR(20)  ,@PARENTESCOACOMPA  VARCHAR(20)  ,@MODELOCITA VARCHAR(50)	,@CLASEORDEN   VARCHAR(20)
			,@IDPESPECIAL  VARCHAR(20)    ,@IDTERCEROCA       VARCHAR(20)  ,@NOAUTORIZACION VARCHAR(45),@FECHA2       DATE
			,@CONSECUTIVOANT VARCHAR(20)  ,@CONSECUTIVONUE    VARCHAR(20)  ,@TIPOCITA  VARCHAR(20)		,@NOMBRE       VARCHAR(100)
			,@ATENCION     VARCHAR(50)    ,@CCOSTO            VARCHAR(50)  ,@PARTICULAR      BIT		,@FECHAINCIO   DATETIME      
			,@FECHAFINAL   DATETIME       ,@COMPANIA          VARCHAR(2)	,@IDAUT     VARCHAR(20)		,@NO_ITEM      SMALLINT     
			,@PYP		      SMALLINT       ,@ALTOCOSTO         SMALLINT		,@VALORAUTD DECIMAL(12,4)	,@FECHAAUT     DATETIME
			,@COPAGOPROPIO SMALLINT       ,@SOAT              SMALLINT		,@PROCEDENCIA  VARCHAR(20)  ,@IDPROVEEDOR  VARCHAR(20)  
			,@IDAREA       VARCHAR(20)    ,@PARTICULAR_TIME   DECIMAL(14,2),@FECHAINI	DATE			,@FECHAFIN     DATE         
			,@IDESPECIALIDAD VARCHAR(20)  ,@VALORCOPAGO       DECIMAL(14,2),@I         INT				,@I_TO         INT
			,@MODALIDAD    VARCHAR(10)    ,@MOTIVO            VARCHAR(100) ,@HOY       SMALLDATETIME=DBO.FNK_GETDATE()
			,@CUMPLIDA     SMALLINT       ,@NIVELSOCIOEC      VARCHAR(2)	,@CERRADA   BIT				,@ESTADO       VARCHAR(10)
			,@TIPOCAJA     VARCHAR(10)	   ,@CODCAJA		   VARCHAR(6)	,@CONT      INT				,@IDSEDE       VARCHAR(5)
			,@NORECIBOCAJA VARCHAR(20)	   ,@IDCAUSAL         VARCHAR(10)  ,@OBSERVACION VARCHAR(MAX)  ,@CONSECUTIVOCAN VARCHAR(13)
			,@MEDTRATANTEDIFERENTE INT    ,@RAZONMEDDIFERENTE VARCHAR(20)	,@VALORTOTAL DECIMAL(14,2)  ,@VLRCOPAGO    DECIMAL(14,2)
			,@FECHALLEGA   DATETIME       ,@FACTURABLE       BIT			,@FACIND    BIT				,@TTEC         VARCHAR(20)
			,@FACTURADA    BIT            ,@N_FACTURA       VARCHAR(8)	,@HABILITA_COPAGO BIT      ,@CODIGO       VARCHAR(20)
			,@DESCRIPCION  VARCHAR(100)   ,@ESPECIALIDAD       VARCHAR(10)    ,@NIT    VARCHAR(20)       ,@DV  VARCHAR(10)
			,@CIUDAD       VARCHAR(20)    ,@DIRECCION    VARCHAR(200)         ,@ESTADO_FCJ VARCHAR(1)    ,@CERRADA_FCJ SMALLINT
			,@VLR_ANTERIOR DECIMAL(14,2)  ,@MENSAJE_COPAGO VARCHAR(200)       ,@MENSAJE_OBS varchar(300), @EMBARAZO VARCHAR(10)
DECLARE   @CODCAJERO    VARCHAR(20)    ,@CNSFACJ   VARCHAR(20)       ,@CONCEPTO VARCHAR(30)     ,@CAUSA  VARCHAR(200)	,@EDAD INT
			,@CNSACJ       VARCHAR(20)    ,@PROGRAMA_POSIBLE   VARCHAR(20)       ,@TIPODESCUENTO      BIT    ,@VALORDESCUENTO DECIMAL(14,2)
			,@NOADMISION   VARCHAR(20)    ,@IDAUTSES           INT               ,@UNIDAD_NEGOCIO     VARCHAR(10)	,@NOCOBRAR BIT
			,@CNSIZSOL VARCHAR(20) ,@SIRAS VARCHAR(20) ,  @CNSHACTRAN VARCHAR(20)  , @ITEM  INT		,@SERVICIO_2 NVARCHAR(MAX)
			,@CCONTRATANTE BIT		,@IDADMINISTRADORA_CONTRA VARCHAR(20)   ,@IDPLAN_CONTRA VARCHAR(20)	,@dataSV NVARCHAR(MAX)	,@TVALORACION BIT
			,@FDESEADA		DATE		,@HDESEADA		VARCHAR(8)		,@FECHADESEADA DATETIME		,@DOCIDAFILIADO VARCHAR(20), @NOMBREAFI VARCHAR(500), @PREGUNTAPOR INT
			,@NOMBREACOM VARCHAR(100) , @DIRECCIONACOM VARCHAR(100) ,  @TELEFONOACOM VARCHAR(100) , @PARENTESCOACOM VARCHAR(100) ,@CANTIDADC INT
			,@FECHA_AUTORIZACION DATETIME	,@FECHA_AUT VARCHAR(10),	@HORA_AUT VARCHAR(5)	,@RECORDATORIO VARCHAR(100), @BARRERA VARCHAR(20), @CALIFICA VARCHAR(100)
DECLARE @ITEM_AUTD INT, @CONSECUTIVO_NEW VARCHAR(20),  @LIMITE_AU INT	,@CANTIDAD_SERVICIO  DECIMAL(14,2)	, @TOTAL_DURACION DECIMAL(14,2)
DECLARE @PART BIT=0 
DECLARE @NDIAS SMALLINT
DECLARE @NRO   SMALLINT
BEGIN
	SET DATEFORMAT dmy
	SELECT *
	INTO #JSON
	FROM OPENJSON (@json)
	WITH (
		MODELO         VARCHAR(100)     '$.MODELO',
		METODO         VARCHAR(100)     '$.METODO',
		USUARIO        VARCHAR(12)      '$.USUARIO',
		PARAMETROS     NVARCHAR(MAX)  AS JSON
	)

	SELECT @MODELO = MODELO , @METODO = METODO , @PARAMETROS = PARAMETROS, @USUARIO = USUARIO
	FROM #JSON
	--DEFINICION DE TABLA DE ERRORES VIRTUAL URGENCIA
	DECLARE @TBLERRORES TABLE(ERROR VARCHAR(200));
	-- TOMA DEL GRUPO, SYS_COMPUTERNAME, SEDE   DE ACUERDO AL USUARIOpl,   --PRINT 'USUARIO:'+@USUARIO
	SELECT @GRUPO = DBO.FNK_DESCIFRAR(GRUPO) FROM USUSU WHERE USUARIO = @USUARIO
	SELECT @SYS_COMPUTERNAME = SYS_COMPUTERNAME FROM USUSU WHERE USUARIO = @USUARIO
	SELECT @SEDE = IDSEDE, @IDSEDE = IDSEDE FROM UBEQ WHERE SYS_ComputerName = @SYS_COMPUTERNAME

	IF @METODO = 'VALIDA_CIT'
	BEGIN
		SELECT @IDMEDICO = IDMEDICO, @FECHA = FECHA, @HORA = HORA, @IDDX = IDDX,@IDEMEDICA=ESPECIALIDAD ,@CONSECUTIVO = CONSECUTIVO,
				@IDAFILIADO = IDAFILIADO,@IDSERVICIO=SERVICIO,@NOMBREACOMPA= NOMBREACOMPA    ,@TELEFONOACOMPA=TELEFONOACOMPA,
				@PARENTESCOACOMPA=PARENTESCOACOMPA,@CLASEORDEN=CLASEORDEN,@IDPESPECIAL=IDPESPECIAL,@IDTERCEROCA=IDTERCEROCA,
				@IDPLAN=IDPLAN,@NOAUTORIZACION=NOAUTORIZACION, @PARTICULAR = PARTICULAR, @PARTICULAR_TIME = PARTICULAR_TIME,
			@EMBARAZO = EMBARAZO, @PROGRAMA_POSIBLE = PROGRAMA_POSIBLE, @SERVICIO_2 = SERVICIO_2, @CANTIDAD_SERVICIO = CANTIDAD_SERVICIO,
			@FDESEADA = FDESEADA ,@HDESEADA = HDESEADA
            
		FROM OPENJSON(@PARAMETROS)
		WITH( IDMEDICO			VARCHAR(20)		'$.IDMEDICO'         --
			, FECHA				VARCHAR(10)		'$.HORA'
			, HORA				VARCHAR(10)		'$.HORA'
			, IDDX				VARCHAR(10)		'$.IDDX'             --
			, ESPECIALIDAD		VARCHAR(20)    '$.ESPECIALIDAD'     --
			, CONSECUTIVO		VARCHAR(20)		'$.CONSECUTIVO'      --
			, IDAFILIADO		VARCHAR(20)    '$.IDAFILIADO'       --
			, SERVICIO			VARCHAR(20)      '$.SERVICIO'         --
			, NOMBREACOMPA		VARCHAR(120)     '$.NOMBREACOMPA'
			, DIRECCIONACOMPA	VARCHAR(20)      '$.DIRECCIONACOMPA'
			, TELEFONOACOMPA	VARCHAR(20)      '$.TELEFONOACOMPA'
			, PARENTESCOACOMPA	VARCHAR(20)      '$.PARENTESCOACOMPA'
			, CLASEORDEN		VARCHAR(20)      '$.CLASEORDEN'
			, IDPESPECIAL		VARCHAR(20)      '$.IDPESPECIAL'
			, IDTERCEROCA		VARCHAR(20)      '$.IDTERCEROCA'
			, IDPLAN			VARCHAR(6)       '$.IDPLAN'
			, NOAUTORIZACION	VARCHAR(45)      '$.NOAUTORIZACION'
			, PARTICULAR		BIT              '$.PARTICULAR'
			, EMBARAZO			VARCHAR(10)             '$.EMBARAZO'
			, PARTICULAR_TIME	DECIMAL(14,2)     '$.PARTICULAR_TIME' 
			, PROGRAMA_POSIBLE	VARCHAR(20)		'$.PROGRAMA_POSIBLE' 
			, CANTIDAD_SERVICIO		DECIMAL (14,2)				'$.CANTIDAD_SERVICIO' 
			, SERVICIO_2		NVARCHAR(MAX)		AS JSON
			, FDESEADA			DATE			'$.FDESEADA'
			, HDESEADA					VARCHAR(8) '$.HDESEADA'
		)
		SELECT * INTO #SERVICIO_2 FROM OPENJSON (@SERVICIO_2)
		WITH(
		IDSERVICIO						VARCHAR(20)						'$.value'
		,DESCSERVICIO					VARCHAR(200)					'$.label'
		,IDEMEDICA						VARCHAR(20)						'$.IDEMEDICA'
		,TIPO							VARCHAR(20)						'$.TIPO'
		,DURACIONCITA					INT								'$.DURACIONCITA'
		)
		SELECT @FECHADESEADA = (SELECT CONVERT(DATETIME, @FDESEADA) + CONVERT(DATETIME, @HDESEADA))
		SELECT @FECHA1  = CIT.FECHA FROM CIT WHERE  CONSECUTIVO = @CONSECUTIVO

		IF NOT EXISTS (SELECT * FROM PPT WHERE IDPLAN = @IDPLAN AND IDTERCERO = @IDTERCEROCA AND ESTADO = 'Activo') AND DBO.FNK_VALORVARIABLE('VALIIDA_PPT') = 'SI'
		BEGIN
			PRINT 'ERROR: La relacion entre el plan y la aseguradora, se encunetra No se encuentra Activa - PPT'
			INSERT INTO @TBLERRORES(ERROR)
			SELECT 'La relacion entre el plan y la aseguradora, se encunetra No se encuentra Activa - PPT'
		END
		IF @FECHADESEADA < @FECHA1
		BEGIN
			PRINT 'ERROR: La fecha deseada, no puede ser menor a la fecha de la CITA.'
			INSERT INTO @TBLERRORES(ERROR)
			SELECT 'La fecha deseada, no puede ser menor a la fecha de la CITA.'
		END
		IF EXISTS(SELECT   * FROM SER WHERE IDSERVICIO IN (SELECT IDSERVICIO FROM #SERVICIO_2) AND COALESCE(SER.AMBITO,'') <> '' AND COALESCE(SER.AMBITO,'') = '' )
		BEGIN
			PRINT 'ERROR: ¡Importante! Solo se permiten agendar múltiples servicios cuando son todos de apoyo diagnóstico en una misma cita'
			INSERT INTO @TBLERRORES(ERROR)
			SELECT '¡Importante! Solo se permiten agendar múltiples servicios cuando son todos de apoyo diagnóstico en una misma cita'
		END
		--SELECT TOP 100   * FROM #SERVICIO_2
		
		IF EXISTS(SELECT   * FROM SER WHERE IDSERVICIO IN (SELECT IDSERVICIO FROM #SERVICIO_2) AND COALESCE(SER.AMBITO,'') = '' )
			AND (SELECT COUNT(*) FROM #SERVICIO_2) > 1 
		BEGIN
			IF NOT EXISTS (  SELECT  * FROM MESS, #SERVICIO_2 
							WHERE MESS.IDSERVICIO = #SERVICIO_2.IDSERVICIO AND MESS.IDEMEDICA = #SERVICIO_2.IDEMEDICA 
							AND MESS.IDEMEDICA IN    (SELECT ITEM FROM dbo.FNK_SPLIT ((SELECT DATO FROM  USVGS WHERE  IDVARIABLE = 'MES_ODNONTOLOGIA'),',','',''  )) )
			BEGIN
				PRINT 'ERROR: ¡Importante! Solo se permiten agendar múltiples servicios cuando son todos de apoyo diagnóstico en una misma cita..'
				INSERT INTO @TBLERRORES(ERROR)
				SELECT '¡Importante! Solo se permiten agendar múltiples servicios cuando son todos de apoyo diagnóstico en una misma cita..'
			END
		END

		SELECT @FECHA2 = CONVERT(DATE,FECHA) ,@FECHA1 = FECHA FROM CIT WHERE CONSECUTIVO = @CONSECUTIVO

		IF @PARTICULAR = 1
			SELECT @TOTAL_DURACION = @PARTICULAR_TIME + @CANTIDAD_SERVICIO
		ELSE
			SELECT @TOTAL_DURACION =  @CANTIDAD_SERVICIO
			
		SELECT @FECHAINCIO = CIT.FECHA, @FECHAFINAL = DATEADD([MINUTE], @TOTAL_DURACION, CIT.FECHA) FROM CIT WHERE  CONSECUTIVO = @CONSECUTIVO

		IF  COALESCE(DBO.FNK_VALORVARIABLE('CIT_VALIDA_EMBARAZO'),'SI') = 'SI' AND  COALESCE(@EMBARAZO,'') ='' AND(SELECT SEXO FROM AFI WHERE  IDAFILIADO = @IDAFILIADO) = 'Femenino' AND (SELECT count(*) FROM MESS WHERE  IDSERVICIO IN (SELECT IDSERVICIO FROM #SERVICIO_2) AND PREGUNTAPOR = 1)>0
		BEGIN
			PRINT 'ERROR: El servicio requiere que responda la pregunta con respecto al embarazo.'
			INSERT INTO @TBLERRORES(ERROR)
			SELECT 'El servicio requiere que responda la pregunta con respecto al embarazo..'
		END
      

		IF (SELECT COUNT(1) FROM CIT WHERE IDMEDICO = @IDMEDICO AND CONVERT(DATE,  CIT.FECHA) =CONVERT(DATE, @FECHAINCIO)
			AND CIT.FECHA > CONVERT(DATETIME,@FECHAINCIO) AND CIT.FECHA < CONVERT(DATETIME,@FECHAFINAL) AND CIT.IDAFILIADO IS NOT NULL) > 0
		BEGIN
		PRINT 'ERROR: El tiempo brindado para la atencion, tiene conflicto con citas que se encuentran mas adelante'
		INSERT INTO @TBLERRORES(ERROR)
		SELECT 'El tiempo brindado para la atencion, tiene conflicto con citas que se encuentran mas adelante'

		END


--  1. Validacion que cita no este ocupada:
		IF EXISTS(SELECT * FROM CIT WHERE CONSECUTIVO = @CONSECUTIVO AND COALESCE(IDAFILIADO,'')<>'')
		BEGIN
			PRINT 'ERROR: La cita ya ha sido asignada.'
			INSERT INTO @TBLERRORES(ERROR)
			SELECT 'La cita ya ha sido asignada.'
		END

-- 2. Valida el estado del paciente:
		IF EXISTS(SELECT * FROM AFI WHERE IDAFILIADO = @IDAFILIADO AND ESTADO NOT IN('Activo','Autorizado')) 
		BEGIN
			PRINT 'El paciente no se encuentra Activo ni Autorizado.'
			INSERT INTO @TBLERRORES(ERROR)
			SELECT 'El paciente no se encuentra Activo ni Autorizado.'
		END

-- 3. Valida dias de diferencia 
		

		SELECT  @NDIAS=CONVERT(INT,LTRIM(RTRIM(DBO.FNK_VALORVARIABLE('ALERT_CIT_DIAS'))))

		SELECT @NRO = COUNT(*) 
		FROM   CIT 
		WHERE  IDAFILIADO=@IDAFILIADO AND IDSERVICIO IN (SELECT IDSERVICIO FROM #SERVICIO_2)
		AND    CONSECUTIVO<>@CONSECUTIVO 
		AND    CONVERT(DATE,FECHA) <= @FECHA2 
		AND    DATEDIFF(DAY,FECHA,@FECHA2) < @NDIAS

		IF @NRO>0
		BEGIN
			PRINT  'no se ha cumplido el minimo de dias antes de una nueva cita con el mismo servicio '
			INSERT INTO @TBLERRORES(ERROR)
			SELECT 'No se ha cumplido el minimo de dias antes de una nueva cita con el mismo servicio '
		END

--4. Valida la misma hora
		SELECT @NRO= COUNT(*) FROM CIT 
		WHERE IDAFILIADO  =  @IDAFILIADO
		AND   FECHA       =  @FECHA2
		AND   CONSECUTIVO <> @CONSECUTIVO

		IF @NRO>0
		BEGIN
			INSERT INTO @TBLERRORES(ERROR)
			SELECT 'Paciente con una cita previa en el mismo dia y hora '
		END
--5. Fecha anterior al sistema
		IF @FECHA1 < DBO.FNK_GETDATE()
		BEGIN
			IF DBO.FNK_VALORVARIABLE('CITAHORAANTERIORHOY')<>'SI'  
			BEGIN
				INSERT INTO @TBLERRORES(ERROR)
				SELECT ' Cita con fecha de asignación Menor a la fecha del sistema.'
			END
		END
--6. Datos del acompañante
		IF DBO.FNK_VALORVARIABLE('DATRESPOBLIGA')='SI'
		BEGIN
			SELECT @NRO=CASE WHEN LEN(@NOMBREACOMPA)<7 OR LEN(@TELEFONOACOMPA)<7 OR LEN(@PARENTESCOACOMPA)<3 THEN 1 ELSE 0 END
			IF @NRO>0
			BEGIN
			PRINT 'Cita con fecha de asignación Menor a la fecha del sistema '
   			INSERT INTO @TBLERRORES(ERROR)
	   		SELECT 'Cita con fecha de asignación Menor a la fecha del sistema '
			END
		END
--7. Cita con el mismo medico
		IF DBO.FNK_VALORVARIABLE('PCITA_DIAMEDSER_IGU')='NO'
		BEGIN
			SELECT @NRO=COUNT(*) FROM CIT WHERE IDAFILIADO=@IDAFILIADO
			AND FECHA >= @FECHA2 AND FECHA < DATEADD(DAY,1,@FECHA2)
			AND IDSERVICIO IN (SELECT IDSERVICIO FROM #SERVICIO_2) AND IDMEDICO=@IDMEDICO
			AND CONSECUTIVO<>@CONSECUTIVO
			IF @NRO>0
			BEGIN
				PRINT 'El Afiliado Ya Tiene una Cita Asignada para Este Mismo Medico y Este Mismo Servicio'
					INSERT INTO @TBLERRORES(ERROR)
					SELECT 'El Afiliado Ya Tiene una Cita Asignada para Este Mismo Medico y Este Mismo Servicio'
			END        
		END
--8. Valida pyp

		IF @claseorden = 'PyP'
		BEGIN
			SELECT @NRO= COALESCE(COUNT(1),0)                                          
			FROM   SERPE INNER JOIN SER ON SERPE.IDSERVICIO = SER.IDSERVICIO     
			WHERE  SERPE.IDPESPECIAL = @PROGRAMA_POSIBLE               
			AND    SER.PREFIJO IN (SELECT ITEM FROM DBO.FNK_SPLIT(DBO.FNK_VALORVARIABLE('PREFIJOCITAS'),',',0,'')) --STORRES
			AND    SERPE.IDSERVICIO IN  (COALESCE((SELECT IDSERVICIO FROM #SERVICIO_2),@IDSERVICIO))

			IF @NRO=0
			BEGIN
				INSERT INTO @TBLERRORES(ERROR)
				SELECT 'Servicio No Corresponde a Consulta del Programa de PyP'
			END
			IF DBO.FNK_VALORVARIABLE('CITMPEMES')='SI'
			BEGIN
			SELECT @NRO=COUNT(*) FROM CIT WHERE CONSECUTIVO<>@CONSECUTIVO 
			AND YEAR(FECHA)=YEAR(@FECHA2) 
			AND MONTH(FECHA)=MONTH(@FECHA2)
			AND (CUMPLIDA=1 OR (CUMPLIDA IN (0,3) AND CONVERT(DATE,FECHA)>=CONVERT(DATE,@FECHA2)))
			AND IDAFILIADO=@IDAFILIADO 
			AND IDTERCEROCA=@IDTERCEROCA 
			AND IDPLAN=@IDPLAN 
			AND IDPESPECIAL=@PROGRAMA_POSIBLE 
			AND IDSERVICIO IN (SELECT IDSERVICIO FROM #SERVICIO_2)

			IF @NRO>0
				BEGIN
				PRINT 'Existe otra cita para este paciente durante el mes actual con el mismo tercero, plan, programa y servicio.'
					INSERT INTO @TBLERRORES(ERROR)
					SELECT 'Existe otra cita para este paciente durante el mes actual con el mismo tercero, plan, programa y servicio.'
				END                
			END
		END
		
-- Valida autorizacion
      
		IF NOT EXISTS(SELECT * FROM PPT WHERE IDTERCERO=@IDTERCEROCA AND IDPLAN=@IDPLAN AND CAPITADO<>1 AND PGP<>1)
		BEGIN
			IF DBO.FNK_VALORVARIABLE('CIT_VALIDA_AUT')='SI'
			BEGIN 
				IF COALESCE(@NOAUTORIZACION,'')=''
				BEGIN
						INSERT INTO @TBLERRORES(ERROR)
						SELECT 'Debe escoger obligatoriamente una Autorización dada por un Médico.'
				END
			END
			IF DBO.FNK_VALORVARIABLE('SOLOUN_CODAUTORIZA')='SI' AND COALESCE(@NOAUTORIZACION,'')<>''
			BEGIN
				SELECT @NRO=COUNT(*) 
				FROM CIT WHERE COALESCE(NOAUTORIZACION,'')=@NOAUTORIZACION 
				AND COALESCE(NOAUTORIZACION,'')<>''
				AND CONSECUTIVO<>@CONSECUTIVO
				IF @NRO>0
					BEGIN
						SELECT TOP 1 @FECHA = CONVERT(DATE,CIT.FECHA), @DOCIDAFILIADO = AFI.DOCIDAFILIADO, @NOMBREAFI = AFI.NOMBREAFI
						FROM CIT
						INNER JOIN AFI ON CIT.IDAFILIADO = AFI.IDAFILIADO
						WHERE COALESCE(NOAUTORIZACION,'')=@NOAUTORIZACION 
						AND COALESCE(NOAUTORIZACION,'')<>''
						AND CONSECUTIVO<>@CONSECUTIVO

						INSERT INTO @TBLERRORES(ERROR)
						SELECT 'Ya existe una cita con este nro de Autorización: '+@NOAUTORIZACION + ' .El cual esta asignado a la cita con fecha: ' +@FECHA+ ' al paciente: ' + @DOCIDAFILIADO + '- ' + @NOMBREAFI
					END
				SELECT  @NRO=COUNT(*) FROM AUT WHERE COALESCE(NUMAUTORIZA,'')=@NOAUTORIZACION 
				IF @NRO>0
				BEGIN
					INSERT INTO @TBLERRORES(ERROR)
					SELECT 'Ya existe un servicio ambulatorio con este mismo número de Autorización.. Autorización No Valida...'+@NOAUTORIZACION
				END
			END
		END
-- VALIDA CAPITA
		IF EXISTS(SELECT * FROM PPT WHERE IDTERCERO=@IDTERCEROCA AND IDPLAN=@IDPLAN AND COALESCE(CAPITADO,0)=1) AND DBO.FNK_VALORVARIABLE('VALMES_CITA_CAPITADA')='SI'
		BEGIN
			IF ( SELECT DATEDIFF(DAY,COALESCE(MAX(FECHA),'01/01/2001'),@FECHA) 
				FROM CIT WHERE COALESCE(IDAFILIADO,'')=@IDAFILIADO
				AND IDSERVICIO IN (SELECT IDSERVICIO FROM #SERVICIO_2)
				AND FECHA<@FECHA)<30
			BEGIN
			IF ( SELECT MONTH(MAX(FECHA)) FROM CIT 
					WHERE COALESCE(IDAFILIADO,'') IN (SELECT IDSERVICIO FROM #SERVICIO_2)
					AND IDSERVICIO IN (SELECT IDSERVICIO FROM #SERVICIO_2)
					AND FECHA<@FECHA)=MONTH(@FECHA)
				BEGIN
					INSERT INTO @TBLERRORES(ERROR)
					SELECT 'El Paciente ya Tubo una Cita para Este Mes'
				END
			END
		END
-- CITAS MISMO DIA
		IF DBO.FNK_VALORVARIABLE('CIT_PER_ESPIDSERMDIA')='NO'
		BEGIN
			SELECT @NRO=COUNT(*) 
			FROM CIT INNER JOIN MED ON CIT.IDMEDICO=MED.IDMEDICO
			WHERE CIT.IDAFILIADO=@IDAFILIADO
			AND CONVERT(DATE,FECHA)=@FECHA
			AND MED.IDEMEDICA=@IDEMEDICA
			AND CIT.IDSERVICIO IN (SELECT IDSERVICIO FROM #SERVICIO_2)
			AND CIT.CONSECUTIVO<>@CONSECUTIVO  
			IF @NRO>0
			BEGIN
				INSERT INTO @TBLERRORES(ERROR)
				SELECT 'No se Puede Asigar el Mismo Servicio Para la Misma Especialidad en el Mismo Dia'
			END          
		END

		IF (SELECT COUNT(*) FROM @TBLERRORES)> 0
		BEGIN
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END 
		ELSE
		BEGIN
			SELECT 'OK'OK

			--IF @PARTICULAR = 1 /* SI EN CASO SE AMPLIA EL TIEMPO, ELMINA LAS CITAS VACIAS SEGUIDAS, PARA CUBRIR EL TIEMPO INGRESADO*/
			--BEGIN
				
			--END
		END

		RETURN
	END
	IF @METODO = 'VALIDA_PREV'
	BEGIN
		SELECT @IDMEDICO = IDMEDICO, @IDAFILIADO= IDAFILIADO, @CONSECUTIVO = CONSECUTIVO
		FROM OPENJSON(@PARAMETROS)
		WITH( IDMEDICO			VARCHAR(20)		'$.IDMEDICO'
			, CONSECUTIVO	   VARCHAR(20)	   '$.CONSECUTIVO'
			, IDAFILIADO		VARCHAR(20)    '$.IDAFILIADO'
		) 
		--BEGIN JEDM_001_20230105
		--TOMAMOS LA ESPECIALIDAD QUE ESTA BUSCANDO EN LA DISPONIBILIDAD DE CITA Y EL PROGRAMA ESPECIAL DEL PACIENTE
		SELECT @IDESPECIALIDAD = JSON_VALUE(@PARAMETROS,'$.ESPECIALIDAD')
		--END JEDM_001_20230105

		SELECT @FECHA1=FECHA FROM CIT WHERE CONSECUTIVO=@CONSECUTIVO
		--VALIDA SI ESTA DISPONIBLE
		--Validar el tipo de Cita por paciente
		SELECT @TIPOCITA = (SELECT TIPOCITA FROM CIT WHERE CONSECUTIVO =  @CONSECUTIVO)
		SELECT @MODELOCITA = (SELECT MODELOS FROM CIT WHERE CONSECUTIVO =  @CONSECUTIVO)
		SELECT @NOMBRE = (SELECT USUSU.NOMBRE  FROM CIT INNER JOIN USUSU ON CIT.USUARIOENUSO = USUSU.USUARIO  WHERE  CONSECUTIVO = @CONSECUTIVO)
		
		PRINT '@TIPOCITA	='+@TIPOCITA
		PRINT '@MODELOCITA	='+@MODELOCITA

		IF @TIPOCITA = 'Prio'
			IF (SELECT  COUNT(1) FROM USGRUH WHERE  IDPROCEDIMIENTO = 'BrwCitas' AND IDCONTROL = 'AsignarPrio' AND PERMISO = 1 AND GRUPO = @GRUPO ) = 0
			BEGIN
					INSERT INTO @TBLERRORES(ERROR)
					SELECT 'Usted no posee los permisos necesarios para asignar una Cita Piroritaria ' ERROR    
			END
		IF @TIPOCITA = 'Ges'
		BEGIN
				INSERT INTO @TBLERRORES(ERROR)
				SELECT 'No se permite apartar una cita. cuando el tipo de disponibilidad es Gestión' ERROR    
		END
		IF @TIPOCITA = 'Mode'
		BEGIN
			IF (SELECT  GRUPO FROM USGRUH WHERE  IDPROCEDIMIENTO = 'BrwCitas' AND IDCONTROL = 'AsignarModelo' AND PERMISO = 1 AND GRUPO = @GRUPO GROUP BY GRUPO) = ''
			BEGIN
					INSERT INTO @TBLERRORES(ERROR)
					SELECT 'Usted no posee los permisos necesarios para asignar una Cita Modelo ' ERROR    
			END
			IF  ( SELECT count(*) FROM AFIPE WHERE IDAFILIADO=@IDAFILIADO AND IDPESPECIAL IN (SELECT ITEM FROM DBO.FNK_SPLIT(@MODELOCITA,',',0,NULL))) = 0
			BEGIN
					INSERT INTO @TBLERRORES(ERROR)
					SELECT 'Este paciente no pertenece a ningun modelo permitido.'
			END
			IF  ( SELECT count(*) FROM AFIPE WHERE IDAFILIADO=@IDAFILIADO AND IDPESPECIAL IN (SELECT ITEM FROM DBO.FNK_SPLIT(@MODELOCITA,',',0,NULL))) = 0
			BEGIN
					INSERT INTO @TBLERRORES(ERROR)
					SELECT  ((SELECT LEFT(STUFF(( SELECT CHAR(10) + MPE.IDPESPECIAL+ ' - ' + MPE.DESCESPECIAL FROM DBO.FNK_SPLIT(( SELECT MODELOS FROM CIT C WHERE C.CONSECUTIVO = @CONSECUTIVO),',',0,NULL) A  INNER JOIN MPE ON MPE.IDPESPECIAL=A.ITEM FOR XML PATH('')),1,0,''),1040) ) )
			END
		END
      IF EXISTS(SELECT * FROM AFI INNER JOIN PLN ON AFI.IDPLAN=PLN.IDPLAN AND PLN.ESTADO<>'Activo' AND AFI.IDAFILIADO=@IDAFILIADO) OR
         EXISTS(SELECT * FROM AFI INNER JOIN PPT ON AFI.IDADMINISTRADORA=PPT.IDTERCERO AND AFI.IDPLAN=PPT.IDPLAN AND PPT.ESTADO<>'Activo' AND AFI.IDAFILIADO=@IDAFILIADO)
      BEGIN
			INSERT INTO @TBLERRORES(ERROR)
			SELECT 'El Contrato para Este Afiliado se encuentra Inactivo. Valide los dados del Afiliado'         
      END
		IF @TIPOCITA = 'Control'
		BEGIN
			
			IF NOT EXISTS( -- EZERPA 05.12.2023 Citas de control solo deben ser agendadas por el mismo profesional - CEM
				SELECT 1 
				FROM CIT INNER JOIN USUSU ON USUSU.IDMEDICO = CIT.IDMEDICO
				WHERE CONSECUTIVO = @CONSECUTIVO
				AND USUSU.USUARIO = @USUARIO
			)
			BEGIN
				INSERT INTO @TBLERRORES(ERROR)
				SELECT 'Las citas de control solo deben ser agendadas por el profesional' ERROR 
			END
		END

		IF (SELECT COUNT(1) FROM CIT INNER JOIN MAGPRP ON CIT.IDMEDICO = MAGPRP.IDMEDICO AND CIT.FECHA  >= MAGPRP.FECHAINICIAL AND CIT.FECHA< MAGPRP.FECHAFINAL WHERE  CIT.CONSECUTIVO = @CONSECUTIVO) > 0
		BEGIN
			INSERT INTO @TBLERRORES(ERROR)
			SELECT 'Se ha restringido para este medico en este horario, Verifique..'
		END
		IF (SELECT COUNT(1)  FROM CIT WHERE  CONSECUTIVO = @CONSECUTIVO AND ENUSO = 1 AND USUARIOENUSO <> @USUARIO) >0
		BEGIN
			INSERT INTO @TBLERRORES(ERROR)
			SELECT 'Cita en uso por '+@NOMBRE AS ERROR    
		END
		IF DBO.FNK_VALORVARIABLE('VALFECHACIT')='SI' 
		BEGIN
			IF (CAST(@FECHA1 AS DATE)<CAST(DBO.FNK_GETDATE() AS DATE)) /*VALIDO EL DIA*/
			BEGIN
				INSERT INTO @TBLERRORES(ERROR)
				SELECT 'Fecha de la cita menor a la actual, no se puede continuar' 
			END
			ELSE
			BEGIN
				IF DBO.FNK_VALORVARIABLE('CITAHORAANTERIORHOY')='NO' AND @FECHA1 <DBO.FNK_GETDATE() /*VALIDO EL DIA Y LA HORA*/
				BEGIN
					INSERT INTO @TBLERRORES(ERROR)
					SELECT 'Hora de la cita Anterior a la actual' 					
				END
			END
		END
		IF (SELECT COUNT(*) FROM CIT WHERE IDAFILIADO=@IDAFILIADO 
			AND    CONVERT(DATETIME,CONVERT(CHAR(10),FECHA,101),101)= CONVERT(DATETIME,CONVERT(CHAR(10),@FECHA1,101),101) 
			AND    DBO.FNK_VALORVARIABLE('BLOQUEARVCITASDIA')='SI')> 0
		BEGIN
			INSERT INTO @TBLERRORES(ERROR)
			SELECT 'Afiliado ya tiene cita hoy con otro Médico'
		END
		IF (SELECT COUNT(*) FROM CIT WHERE IDAFILIADO=@IDAFILIADO AND IDMEDICO=@IDMEDICO AND  CONVERT(DATETIME,CONVERT(CHAR(10),FECHA,101),101)= CONVERT(DATETIME,CONVERT(CHAR(10),@FECHA1,101),101) 
			AND    DBO.FNK_VALORVARIABLE('RCITASMISMOMED')='SI') > 0
		BEGIN
			INSERT INTO @TBLERRORES(ERROR)
			SELECT 'Afiliado ya tiene cita hoy con el mismo Médico'
		END
		IF (SELECT COUNT(*)
			FROM   USUSU INNER JOIN UBEQ ON USUSU.SYS_COMPUTERNAME = UBEQ.SYS_COMPUTERNAME
							INNER JOIN CEN  ON UBEQ.CCOSTO = CEN.CCOSTO
			WHERE  USUARIO = @USUARIO) <= 0
		BEGIN
			INSERT INTO  @TBLERRORES(ERROR)
			SELECT 'Usuario No tiene Centro de Costo Valido Configurado'
		END

		IF (SELECT COUNT(*) FROM @TBLERRORES)> 0
		BEGIN
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END

		SELECT 'OK' OK
		--Datos de Centro de costo y Area (Default)
		SELECT USUSU.SYS_COMPUTERNAME , UBEQ.IDAREA, UBEQ.CCOSTO, CEN.DESCRIPCION
		FROM   USUSU INNER JOIN UBEQ ON USUSU.SYS_COMPUTERNAME = UBEQ.SYS_COMPUTERNAME
						INNER JOIN CEN  ON UBEQ.CCOSTO = CEN.CCOSTO
		WHERE  USUARIO = @USUARIO
		--Centros de costo de esa IDAREA (Opciones)
		SELECT CEN.CCOSTO value, concat(CEN.CCOSTO, ' ', CEN.DESCRIPCION) label
		FROM   USUSU INNER JOIN UBEQ ON USUSU.SYS_COMPUTERNAME = UBEQ.SYS_COMPUTERNAME
						INNER JOIN CEN ON UBEQ.IDAREA = CEN.IDAREA
		WHERE  USUARIO = @USUARIO

		SELECT COUNT(1) PROGRAMAS FROM AFIPE WHERE IDAFILIADO = @IDAFILIADO
		UPDATE CIT SET ENUSO = 1, USUARIOENUSO = @USUARIO WHERE CONSECUTIVO = @CONSECUTIVO
      
			SELECT TOP 1 @IDPESPECIAL = AFIPE.IDPESPECIAL FROM AFIPE WHERE IDAFILIADO=@IDAFILIADO
			IF EXISTS (SELECT IDMEDICO FROM AFIPEMES WHERE IDAFILIADO = @IDAFILIADO AND IDPESPECIAL = @IDPESPECIAL AND IDEMEDICA = @IDESPECIALIDAD) 
				AND    (SELECT IDMEDICO FROM AFIPEMES WHERE IDAFILIADO = @IDAFILIADO AND IDPESPECIAL = @IDPESPECIAL AND IDEMEDICA = @IDESPECIALIDAD) <> @IDMEDICO

					SELECT 'MEDICODIFERENTE' VALIDAMEDICOCABECERA , MED.NOMBRE MEDICOCABECERA 
				FROM   AFIPEMES INNER JOIN MED ON AFIPEMES.IDMEDICO = MED.IDMEDICO
				WHERE  AFIPEMES.IDAFILIADO = @IDAFILIADO AND AFIPEMES.IDPESPECIAL = @IDPESPECIAL AND AFIPEMES.IDEMEDICA = @IDESPECIALIDAD
				ELSE
				SELECT 'MEDICOIGUAL' VALIDAMEDICOCABECERA 
		RETURN
	END
	IF @METODO = 'LLEGADA_PTE'
	BEGIN
		SELECT @CONSECUTIVO=CONSECUTIVO FROM OPENJSON(@PARAMETROS)
		WITH( CONSECUTIVO			VARCHAR(20)		'$.CONSECUTIVO'
		)
		IF DBO.FNK_VALORVARIABLE('HAB_AUTORIZACION')='SI'
		BEGIN
			IF EXISTS(SELECT * FROM CIT INNER JOIN PPT ON CIT.IDTERCEROCA=PPT.IDTERCERO AND CIT.IDPLAN=PPT.IDPLAN 
					WHERE COALESCE(PPT.PNUMAUTORIZA_OBL,0)=1
					AND COALESCE(CIT.NOAUTORIZACION,'')='')
			BEGIN
				INSERT INTO @TBLERRORES(ERROR)
				SELECT 'Afiliado ya tiene cita hoy con el mismo Médico'            
			END
         
		END
		DECLARE @MINUTOS INT
		SELECT @MINUTOS= CASE WHEN ISNUMERIC(LTRIM(RTRIM(DBO.FNK_VALORVARIABLE('MINUTOS_DESPUES_CITA'))))=1 THEN LTRIM(RTRIM(DBO.FNK_VALORVARIABLE('MINUTOS_DESPUES_CITA'))) ELSE  0 END
		IF EXISTS(SELECT * FROM CIT WHERE CONSECUTIVO=@CONSECUTIVO AND DATEADD(MINUTE,@MINUTOS,FECHA)>DBO.FNK_GETDATE())
		BEGIN
			INSERT INTO @TBLERRORES(ERROR)
			SELECT 'La Hora Actual Supera el Máximo Permitido para La Llegada de Paciente.... No Se Puede Continuar'            
		END
		ELSE
		BEGIN
			BEGIN TRY 
			UPDATE CIT SET FECHALLEGA=DBO.FNK_GETDATE(),CUMPLIDA=CASE WHEN DBO.FNK_VALORVARIABLE('CITA_LLEGARESCUMPLIR')='SI' THEN 1 ELSE 0 END
			WHERE CONSECUTIVO=@CONSECUTIVO
			END TRY  
			BEGIN CATCH 
				INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE() ;  
			END CATCH
		END
		/*
		IF (SELECT COUNT(*) FROM @TBLERRORES)=0 AND DBO.FNK_VALORVARIABLE('GENERA_COPAGO_CITAS')='LLEGA'
		BEGIN
			DECLARE @PART BIT=0
			IF EXISTS(SELECT * FROM CIT WHERE CONSECUTIVO=@CONSECUTIVO AND IDPLAN IN(
			SELECT DBO.FNK_VALORVARIABLE('IDPLANPART')
			UNION ALL 
			SELECT DBO.FNK_VALORVARIABLE('IDPLANPART2')
			UNION ALL 
			SELECT DBO.FNK_VALORVARIABLE('IDPLANPART3')
			UNION ALL 
			SELECT DBO.FNK_VALORVARIABLE('IDPLANPART4')
			UNION ALL 
			SELECT DBO.FNK_VALORVARIABLE('IDPLANPART5')
			))
			BEGIN
			SELECT @PART=1
			END
			SET @COMPANIA ='01'
			SELECT @SYS_COMPUTERNAME=COALESCE(SYS_COMPUTERNAME,HOST_NAME())
			FROM USUSU WHERE USUARIO=@USUARIO
			SELECT @SEDE=IDSEDE FROM CIT WHERE CONSECUTIVO=@CONSECUTIVO
			BEGIN TRY
			EXEC SPK_PAGOSCAJA_CIT @CONSECUTIVO,@SYS_COMPUTERNAME,@COMPANIA,@SEDE,@USUARIO,@PART
			END TRY  
			BEGIN CATCH 
				INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE() ;  
			END CATCH         
		END
		*/
		IF (SELECT COUNT(*) FROM @TBLERRORES)> 0
		BEGIN
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
		RETURN
		END 
		ELSE
		BEGIN
			SELECT 'OK'OK
		END

	END
	IF @METODO = 'CANCELAR_CITAS'
	BEGIN
		SELECT @CONSECUTIVO=CONSECUTIVO ,@IDCAUSAL = IDCAUSAL, @OBSERVACION = OBSERVACION , @IDAUTSES = IDAUTSES, @MOTIVO = MOTIVO, @RECORDATORIO = RECORDATORIO, @CALIFICA = CALIFICA, @BARRERA = BARRERA
		FROM OPENJSON(@PARAMETROS)
		WITH( CONSECUTIVO			VARCHAR(20)		    '$.CONSECUTIVO', MOTIVO			VARCHAR(100)		    '$.MOTIVO',
				IDAUTSES			    INT		         '$.IDAUTSES',  RECORDATORIO			VARCHAR(100)		    '$.RECORDATORIO',
				IDCAUSAL			    VARCHAR(20)		'$.IDCAUSAL',  CALIFICA			VARCHAR(100)		    '$.CALIFICA',
				OBSERVACION			VARCHAR(200)		'$.OBSERVACION' , BARRERA			VARCHAR(100)		    '$.BARRERA'			)

		SELECT @CUMPLIDA = CUMPLIDA,@TIPOCAJA=TIPOCAJA,@NORECIBOCAJA=NORECIBOCAJA,@IDAFILIADO=IDAFILIADO,@IDSERVICIO=IDSERVICIO FROM CIT 
		WHERE CONSECUTIVO=@CONSECUTIVO
		IF @CUMPLIDA=3
		BEGIN
			INSERT INTO @TBLERRORES(ERROR)
			SELECT 'No se puede Cancelar Cita, por que ya fue Tomada Por el Médico desde su agenda.'            
		END 

		IF EXISTS(SELECT * FROM IZSOL INNER JOIN IMOV ON IZSOL.CNSIZSOL = IMOV.NODOCUMENTO WHERE IZSOL.NOADMISION = @CONSECUTIVO )
		BEGIN
			INSERT INTO @TBLERRORES(ERROR)
			SELECT 'No se puede Cancelar la Cita, tiene insumos solicitados.'   
		END
		IF @CUMPLIDA = 1
		BEGIN
			INSERT INTO @TBLERRORES(ERROR)
			SELECT 'No se puede Cancelar la Cita, por que ya fue Atendida Por el Médico.'            
		END 

		SELECT @ESTADO_FCJ = ESTADO, @CERRADA_FCJ = CERRADA   FROM FCJ WHERE  NOADMISION = @CONSECUTIVO

		IF (SELECT TIPOCAJA FROM CIT WHERE  CONSECUTIVO = @CONSECUTIVO) = 'FCJ'
		BEGIN
			IF (SELECT COUNT(1) FROM CIT WHERE   CONSECUTIVO = @CONSECUTIVO AND TIPOCAJA = 'FCJ' AND @CERRADA_FCJ <> 1 ) > 0
			BEGIN
			INSERT INTO @TBLERRORES(ERROR) SELECT 'EL Recibo de Caja para esta Cita Ya Fue Traido en la Caja y esta sin Confirmar... Se Debe Regresar Recibo Primero'
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
			END
			IF (SELECT COUNT(1) FROM CIT WHERE   CONSECUTIVO = @CONSECUTIVO AND TIPOCAJA = 'FCJ' AND @CERRADA_FCJ = 1 AND @ESTADO_FCJ<> 'A' ) > 0
			BEGIN
			INSERT INTO @TBLERRORES(ERROR) SELECT 'No se puede Cancelar llegada del paciente , por que ya fue Cancelada en Caja.'
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
			END
		END
		IF @TIPOCAJA='FCJ'
		BEGIN
			SELECT @CERRADA=CERRADA,@ESTADO=ESTADO FROM FCJ WHERE CNSFACJ=@NORECIBOCAJA
			IF @ESTADO='A' OR @CERRADA=1
			BEGIN
				INSERT INTO @TBLERRORES(ERROR)
				SELECT 'No se puede Cancelar cita del Paciente,Copago Traido en caja'            
			END
			ELSE
			BEGIN 
				IF DBO.FNK_VALORVARIABLE('ENVIA_SMS_CITA')='SI'
				BEGIN
					EXEC SPK_CANCELA_CITA_SMS 'CANCELA',@IDAFILIADO,@CONSECUTIVO, @IDSERVICIO
				END
			END
		END

		IF (SELECT COUNT(*) FROM @TBLERRORES)> 0
		BEGIN
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END 
		ELSE
		BEGIN
			BEGIN TRY
				SELECT    CONSECUTIVO, FECHASOL, FECHA, FECHAATENCION, IDAFILIADO, NUMCARNET, TIPOCITA, TIPOSOLICITUD, IDSERVICIO, IDSERVICIOPROC
						, ATENCION, PVEZ, IDCONTRATANTE, IDSEDE, IDMEDICO, IDPLAN, URGENCIA, VALORTOTAL, VALORCOPAGO, VALOREXEDENTE, VALORTOTALCOS, VALORCOPAGOCOSTO
						, IMPRESO, CUMPLIDA, IDPESPECIAL, IDESTADOE, ESTADO, CAUSALBLOQUEO, GENEROCAJA, IDSEDEATENCION, TELEFONOAVISO, IDCAUSAL, DISPONIBILIDAD, SPD
						, NORECIBOCAJA, CLASEORDEN, USUARIO, NOADMISION, GENPRESTACION, FINCONSULTA, CODCAJA, FECHALLEGA, USUARIOLLEGA, OBSERVACIONES, NOAUTORIZACION
						, IDSEDEORIGEN, IDIPSSOLICITA, IDMEDICOSOLICITA, AUTORIZADOPOR, FECHAAUTORIZACION, CNSAFIAA, TIPOCOPAGO, PROCEDENCIA, IDAREAH, IDAREA, CCOSTO
						, SUBCCOSTO, NIVELATENCION, FACTURADA, N_FACTURA, CNSFCT, VFACTURAS, FACTURABLE, DESCUENTO, TIPODTO, MARCAFAC, IDIPS, CLASECONTRATO, ENPAQUETE
						, IDCIRUGIA, CNSFACT, SOAT, COPAGOPROPIO, CNSHACTRAN, ALTOCOSTO, IDDX, IDEMEDICA, IDTERCEROCA, FINALIDAD, TIPOCAJA, CONSECUTIVOHCA, AQUIENCOBRO
						, VALORPROV, CODUNG, CODPRG, NOCITA, REASIGNADA, IDCONTRATO, ITFC, CNSITFC, SYS_COMPUTERNAME, NOCOBRAR, CCONTRATANTE, CONTABILIZADA, NROCOMPROBANTE
						, MARCACONT, QXCONSECUTIVO, FECHACIRUGIA, FECHAREASIG, USUARIOREASIG, CODCUPS, IDPLAN_AFI, IDTERCERO_AFI, NOMBREACOMPA, TELEFONOACOMPA, PARENTESCOACOMPA
						, NOMBRERESPO, TELEFONORESPO, PARENTESCORESPO, USUARIONOFACTURABLE, FECHA_NOFAC, PVEZANO, F_REQUERIDA, RIESGO, DURACION, MVARIAS, NROCITAS, CNSORIGINAL
						, PREGUNTAPOR, MPLAN, IDPLANDISP, WEB, DIRECCION, CIUDAD, CORREGIMIENTO, LAT_DIR, LNG_DIR, IDBARRIO, MODALIDAD, TIPOAFILIADO, IDAUTSE, COVID, USUATENCION
						, USURESPONSABLE, USUGENAGENDA, FGENERACION, IDKPAGE, COMERCIAL, HORADESDE, HORAHASTA, RESULTADOLLAMADA, USUPREANALITICA, FECHAPREANALITICA, FECHAENVIOLAB
						, ESTADOPREANALITICA, USUNOPROCESA, FECHANOPROCESA, RAZONNOPROCESA, ESPROGRAMAS, URLVIDEOLLAMADA, CANTIDADC, IDFIRMAPTE, IDFIRMARESP, MODELOS, RCAMBIO
					, NOASISTIO_IDCAUSAL, NOASISTIO_OBSERVACION
				INTO #DATOCITA
				FROM CIT   WHERE  CIT.CONSECUTIVO = @CONSECUTIVO
			SELECT @IDAFILIADO = IDAFILIADO, @IDSERVICIO = IDSERVICIO  FROM CIT WHERE CONSECUTIVO = @CONSECUTIVO
			IF DBO.FNK_VALORVARIABLE('ENVIA_SMS_CITA')='SI'
				BEGIN
					EXEC SPK_CANCELA_CITA_SMS 'CANCELA',@IDAFILIADO,@CONSECUTIVO, @IDSERVICIO
				END
				--SELECT * FROM #DATOCITA
        
				IF (SELECT COUNT(*) FROM CITSE WHERE CONSECUTIVO = @CONSECUTIVO) = 0 
					SET @CONT = 1
				ELSE 
					SELECT @CONT = (SELECT COUNT(1) FROM CITSE WHERE CONSECUTIVO = @CONSECUTIVO) + 1
            
				INSERT INTO CITSE (CONSECUTIVO, ITEM, USUARIO, SYS_COMPUTERNAME, OBSERVACION, PROCEDENCIA, FECHA, IDAFILIADO, TIPO)
				VALUES (@CONSECUTIVO, @CONT,@USUARIO,@SYS_COMPUTERNAME, 'Cancelado - ' + @OBSERVACION, 'AGENDA_MED', DBO.FNK_GETDATE() , @IDAFILIADO, 'Cancelado' )

				SELECT @CONSECUTIVOCAN = NULL
				EXEC SPK_GENCONSECUTIVO '01','01','@CITCI', @CONSECUTIVOCAN OUTPUT  
				SELECT @CONSECUTIVOCAN = '01' + REPLACE(SPACE(8 - LEN(@CONSECUTIVOCAN))+LTRIM(RTRIM(@CONSECUTIVOCAN)),SPACE(1),0)    

				INSERT INTO CITCI(CONSECUTIVOCAN,CONSECUTIVO,TIPO,IDCAUSAL,FECHASOL,FECHA,FECHAATENCION,IDAFILIADO,NUMCARNET,TIPOCITA,TIPOSOLICITUD,IDSERVICIO,ATENCION,
									PVEZ,IDCONTRATANTE,IDSEDE,IDMEDICO,IDPLAN,URGENCIA,VALORTOTAL,VALORCOPAGO,VALOREXEDENTE,VALORTOTALCOS,VALORCOPAGOCOSTO,IMPRESO,CUMPLIDA,
									/*IDPESPECIAL,*/IDESTADOE,ESTADO,GENEROCAJA,USUARIO,RAZON,VALORMULTA,TIPOCAJA,CODCAJA,CNSFACJ,PAGADAMULTA,SYS_COMPUTERNAME_ANU,FECHA_ANU,
									OBSERVACIONES, NOADMISION, USUASIGNA,MODALIDAD, NOASISTIO_IDCAUSAL, NOASISTIO_OBSERVACION, IDAUTSES, MOTIVO, RECORDATORIO, CALIFICA, BARRERA)
				SELECT @CONSECUTIVOCAN, @CONSECUTIVO, 'C', @IDCAUSAL, FECHASOL,DBO.FNK_FECHA_SIN_MLS(FECHA),DBO.FNK_FECHA_SIN_MLS(FECHAATENCION),IDAFILIADO,NUMCARNET,TIPOCITA,TIPOSOLICITUD,IDSERVICIO,LEFT(ATENCION,1),
									PVEZ,IDCONTRATANTE,IDSEDE,IDMEDICO,IDPLAN,URGENCIA,VALORTOTAL,VALORCOPAGO,VALOREXEDENTE,VALORTOTALCOS,VALORCOPAGOCOSTO,IMPRESO,CUMPLIDA,
									/*IDPESPECIAL,*/IDESTADOE,ESTADO,GENEROCAJA, @USUARIO, NULL,NULL,TIPOCAJA,CODCAJA,NULL,NULL, @SYS_COMPUTERNAME, DBO.FNK_GETDATE(),
									@OBSERVACION, NOADMISION, CIT.USUARIO, CIT.MODALIDAD, CIT.NOASISTIO_IDCAUSAL, CIT.NOASISTIO_OBSERVACION, IDAUTSES,COALESCE(@MOTIVO,''), COALESCE(@RECORDATORIO,''), COALESCE(@CALIFICA,''), COALESCE(@BARRERA,'')
				FROM   CIT
				WHERE  CONSECUTIVO = @CONSECUTIVO

				SELECT @IDSEDE = (SELECT COALESCE(IDSEDE,'01') FROM #DATOCITA)

			IF NOT EXISTS(SELECT * FROM IZSOL INNER JOIN IMOV ON IZSOL.CNSIZSOL = IMOV.NODOCUMENTO WHERE IZSOL.NOADMISION = @CONSECUTIVO )
			AND EXISTS (SELECT * FROM IZSOL WHERE  IZSOL.NOADMISION = @CONSECUTIVO  )
			BEGIN
				SELECT @CNSIZSOL = CNSIZSOL FROM IZSOL WHERE NOADMISION = @CONSECUTIVO
				DELETE FROM IZSOLD WHERE CNSIZSOL = @CNSIZSOL
				DELETE FROM IZSOL WHERE CNSIZSOL = @CNSIZSOL
				UPDATE HCATDOD SET CONSECUTIVOCIT =  NULL , CNSIZSOL =  NULL, CUMPLIDO = 0 WHERE CONSECUTIVOCIT = @CONSECUTIVO
				UPDATE HCATDOM SET CONSECUTIVOCIT =  NULL , CNSIZSOL =  NULL WHERE CONSECUTIVOCIT = @CONSECUTIVO
				--HCATDOD
			END

			UPDATE HCATDOD SET CONSECUTIVOCIT =  NULL WHERE CONSECUTIVOCIT = @CONSECUTIVO 

			IF EXISTS (SELECT  * FROM CIT_EXTRA WHERE CONSECUTIVO_RES = @CONSECUTIVO)
			BEGIN
				SELECT ROW_NUMBER() OVER(ORDER BY CONSECUTIVO DESC) AS FILA_CITA, CONSECUTIVO, IDMEDICO, IDEMEDICA, FECHA, TIPOCITA, TIPOSOLICITUD, ATENCION, IDSEDE, DISPONIBILIDAD, CLASEORDEN, WEB, USUGENAGENDA, FGENERACION, ESPROGRAMAS, MODELOS, MODALIDAD 
				INTO #CIT_EXTRA FROM CIT_EXTRA WHERE CIT_EXTRA. CONSECUTIVO_RES = @CONSECUTIVO


				SELECT @ITEM_AUTD=1,@LIMITE_AU=0
				SELECT @LIMITE_AU=COUNT(*) FROM  #CIT_EXTRA
				WHILE @ITEM_AUTD<=@LIMITE_AU
				BEGIN
					SELECT @IDSEDE = IDSEDE FROM #CIT_EXTRA WHERE #CIT_EXTRA.FILA_CITA = @ITEM_AUTD
					EXEC SPK_GENCONSECUTIVO '01',@IDSEDE,'@CIT', @CONSECUTIVO_NEW OUTPUT  
					SELECT @CONSECUTIVO_NEW = @IDSEDE + REPLACE(SPACE(10 - LEN(@CONSECUTIVO_NEW))+LTRIM(RTRIM(@CONSECUTIVO_NEW)),SPACE(1),0) 

					IF NOT EXISTS (SELECT * FROM CIT,#CIT_EXTRA WHERE #CIT_EXTRA.FILA_CITA = @ITEM_AUTD AND CIT.IDMEDICO =#CIT_EXTRA.IDMEDICO AND CIT.FECHA = #CIT_EXTRA.FECHA  )
					BEGIN
						INSERT INTO CIT(CONSECUTIVO, IDMEDICO, IDEMEDICA, FECHA, TIPOCITA, TIPOSOLICITUD, ATENCION, IDSEDE, DISPONIBILIDAD, CLASEORDEN, WEB,USUGENAGENDA,FGENERACION ,ESPROGRAMAS,MODELOS,MODALIDAD, CLASECONTRATO)
						SELECT @CONSECUTIVO_NEW, IDMEDICO, IDEMEDICA, FECHA, TIPOCITA, TIPOSOLICITUD, ATENCION, IDSEDE, DISPONIBILIDAD, CLASEORDEN, WEB,USUGENAGENDA,FGENERACION ,ESPROGRAMAS,MODELOS,MODALIDAD,'E'
						FROM #CIT_EXTRA WHERE #CIT_EXTRA.FILA_CITA = @ITEM_AUTD 
					END

					SELECT @ITEM_AUTD = @ITEM_AUTD+1 
				END
			END
			IF EXISTS (SELECT * FROM CITSITEDS WHERE CONSECUTIVO = @CONSECUTIVO)
			BEGIN
				DELETE FROM CONSSITEDSD WHERE CONSECUTIVO = @CONSECUTIVO
				DELETE FROM CONSSITEDS WHERE CONSECUTIVO = @CONSECUTIVO
				DELETE FROM CITSITEDS WHERE CONSECUTIVO = @CONSECUTIVO
			END

			IF EXISTS(SELECT * FROM CITSER WHERE  CONSECUTIVO_CIT = @CONSECUTIVO)
			BEGIN
				DELETE FROM CITSER WHERE  CONSECUTIVO_CIT = @CONSECUTIVO
			END
				DELETE FROM CIT WHERE  CONSECUTIVO =@CONSECUTIVO  /* SE ELMINA LA CITA */ 

        		SELECT @CONSECUTIVO = NULL
				EXEC SPK_GENCONSECUTIVO '01',@IDSEDE,'@CIT', @CONSECUTIVO OUTPUT  
				SELECT @CONSECUTIVO = @IDSEDE + REPLACE(SPACE(10 - LEN(@CONSECUTIVO))+LTRIM(RTRIM(@CONSECUTIVO)),SPACE(1),0) 

				INSERT INTO CIT(CONSECUTIVO, IDMEDICO, IDEMEDICA, FECHA, TIPOCITA, TIPOSOLICITUD, ATENCION, IDSEDE, DISPONIBILIDAD, CLASEORDEN, WEB,USUGENAGENDA,FGENERACION
								,ESPROGRAMAS,MODELOS,MODALIDAD, CLASECONTRATO)
				SELECT @CONSECUTIVO, #DATOCITA.IDMEDICO, #DATOCITA.IDEMEDICA, DBO.FNK_FECHA_SIN_MLS(#DATOCITA.FECHA),#DATOCITA.TIPOCITA, #DATOCITA.TIPOSOLICITUD, #DATOCITA.ATENCION, @IDSEDE, #DATOCITA.DISPONIBILIDAD 
						,#DATOCITA.CLASEORDEN,#DATOCITA.WEB,@USUARIO,DBO.FNK_GETDATE(), #DATOCITA.ESPROGRAMAS,#DATOCITA.MODELOS
						,#DATOCITA.MODALIDAD, 'E'
				FROM   #DATOCITA 
			--SELECT @CONSECUTIVO

				-- EZERPA 25.05.2023 Habilitar de nuevo las citas de control cuando cancelan la cita
				UPDATE HCATDC SET CONSECUTIVOCIT = NULL, ESTADO = 0
				WHERE CONSECUTIVOCIT = @CONSECUTIVO
		     
			END TRY
			BEGIN CATCH 
				INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE() ;  
			END CATCH 
			IF (SELECT COUNT(*) FROM @TBLERRORES)> 0
			BEGIN
				SELECT 'KO' OK
				SELECT ERROR FROM @TBLERRORES
				RETURN
			END
			SELECT 'OK'OK, @CONSECUTIVO CONSECUTIVO
		END
	END
	IF @METODO = 'CANCEL_LLEGA_PTE'
	BEGIN
		SELECT @CONSECUTIVO=CONSECUTIVO FROM OPENJSON(@PARAMETROS)
		WITH( CONSECUTIVO			VARCHAR(20)		'$.CONSECUTIVO'
		)

		SELECT @CUMPLIDA = CUMPLIDA,@TIPOCAJA=TIPOCAJA,@NORECIBOCAJA=NORECIBOCAJA,@IDAFILIADO=IDAFILIADO,@IDSERVICIO=IDSERVICIO FROM CIT 
		WHERE CONSECUTIVO=@CONSECUTIVO
		IF @CUMPLIDA=3
		BEGIN
			INSERT INTO @TBLERRORES(ERROR)
			SELECT 'No se puede Deshacer La Llegada del Paciente, por que ya fue Tomada Por el Médico desde su agenda.'            
		END 
		IF @CUMPLIDA = 1
		BEGIN
			INSERT INTO @TBLERRORES(ERROR)
			SELECT 'No se puede Deshacer La Llegada del Paciente, por que ya fue Atendida Por el Médico.'            
		END 
		IF @TIPOCAJA='FCJ'
		BEGIN
			SELECT @CERRADA=CERRADA,@ESTADO=ESTADO FROM FCJ WHERE CNSFACJ=@NORECIBOCAJA
			IF @ESTADO<>'A'
			BEGIN
				INSERT INTO @TBLERRORES(ERROR)
				SELECT 'No se puede Deshacer La Llegada del Paciente,Copago Traido en caja'            
			END
			ELSE
			BEGIN 
			IF DBO.FNK_VALORVARIABLE('GENERA_COPAGO_CITAS')='LLEGA'
			BEGIN
				DELETE TFCJDD WHERE CNSFACJ=@NORECIBOCAJA
				DELETE TFCJD WHERE CNSFACJ=@NORECIBOCAJA
				DELETE TFCJ WHERE CNSFACJ=@NORECIBOCAJA
				UPDATE CIT SET GENEROCAJA=0,CODCAJA=NULL,NORECIBOCAJA=NULL,TIPOCAJA=NULL  WHERE CONSECUTIVO=@CONSECUTIVO
			END
			END
		END
		IF (SELECT COUNT(*) FROM @TBLERRORES)> 0
		BEGIN
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END 
		ELSE
		BEGIN
			UPDATE CIT SET FECHALLEGA=NULL,USUARIOLLEGA=NULL WHERE CONSECUTIVO=@CONSECUTIVO
			SELECT 'OK'OK
		END
	END
	IF @METODO = 'NOVEDADES_PTE'
	BEGIN
		PRINT 'NOVEDADES'  
	END
	IF @METODO = 'INFO_CITA'
	BEGIN 
		SELECT @CONSECUTIVO = CONSECUTIVO
		FROM OPENJSON(@PARAMETROS)
		WITH(CONSECUTIVO	VARCHAR(16)		'$.CONSECUTIVO')

		SELECT  --TIPOCITA SED FECHAAUTORIZACION NOAUTORIZACION
		'OK' OK,
			CIT.CONSECUTIVO,AFI.TIPO_DOC, TGEN.DESCRIPCION [DOCNOMBRE], AFI.DOCIDAFILIADO, AFI.NOMBREAFI, AFI.DIRECCION, AFI.SEXO, CIT.NOAUTORIZACION, CIT.FECHAAUTORIZACION, CIT.ESTADO
			, AFI.CELULAR,AFI.EDAD, CIT.FECHA, CIT.FECHASOL, CIT.CUMPLIDA, CIT.NORECIBOCAJA, CIT.IDAFILIADO, CIT.CONFIRMADA, CIT.FECHACONFIRMA
			,TER.IDTERCERO, TER.RAZONSOCIAL, PLN.IDPLAN, PLN.DESCPLAN ,AFI.NIVELSOCIOEC , T2.DESCRIPCION [NIVELDESC], CIT.FACTURADA, CIT.IDAREA
			, MED.NOMBRE, CIT.FECHALLEGA,CIT.USUARIOLLEGA,  COALESCE(CIT.VALORTOTAL,0) VALORTOTAL, COALESCE(CIT.VALORCOPAGO,0) VALORCOPAGO, COALESCE(CIT.DESCUENTO, 0)DESCUENTO
			, COALESCE(CIT.VALORTOTAL,0) - (COALESCE(CIT.VALORCOPAGO,0) - COALESCE(CASE WHEN  TIPODTO = 'V' THEN CIT.DESCUENTO WHEN TIPODTO='P' THEN (CIT.DESCUENTO * CIT.VALORTOTAL) / 100 END, 0)) VLR_FACTURAR
			, CASE WHEN COALESCE(CIT.N_FACTURA,'')<>'' THEN '1'
				WHEN (SELECT FCJ.CERRADA FROM FCJ WHERE  FCJ.NOADMISION = CIT.CONSECUTIVO AND ESTADO = 'P' AND PROCEDENCIA = 'CITAS') = 1 THEN '2'
				END [ESTADO_RECAUDADO_FACTURADO]
			, CIT.N_FACTURA, CIT.CANTIDADC
			,(SELECT FCJ.CERRADA FROM FCJ WHERE  FCJ.NOADMISION = CIT.CONSECUTIVO AND ESTADO = 'P' AND PROCEDENCIA = 'CITAS') [FCJ_CERRADA]
			,(SELECT FCJ.ESTADO FROM FCJ WHERE  FCJ.NOADMISION = CIT.CONSECUTIVO  AND ESTADO = 'P' AND PROCEDENCIA = 'CITAS') [FCJ_ESTADO]
			, MED.NOMBRE AS NOMBREMED
			, MED.NOMBRE AS PROFESIONAL
			, MED.IDMEDICO, MES.IDEMEDICA, MES.DESCRIPCION
			,SER.IDSERVICIO, SER.DESCSERVICIO, CIT.ATENCION, CIT.URGENCIA,CIT.CLASEORDEN,CIT.ESPROGRAMAS,CIT.OBSERVACIONES
			,CEN.DESCRIPCION [CENDESCRIPCION] ,CIT.CCOSTO, CASE WHEN CONVERT (DATE,CIT.FECHA) = CONVERT(DATE,DBO.FNK_GETDATE()) THEN '1' ELSE 0 END TIEMPO_LLEGADA
			,PNUMAUTORIZA_OBL=CAST(COALESCE(PPT.PNUMAUTORIZA_OBL, 0) AS BIT)
			,COPAGOIND=CAST(COALESCE(PPT.COPAGOIND, 0) AS BIT), CIT.IDPESPECIAL, MPE.DESCESPECIAL ,CIT.MODALIDAD, CIT.CODUNG, KUNG.DESCRIPCION [UN_NEG_DESC]
			,COPAGOPROPIO=CAST(COALESCE(CIT.COPAGOPROPIO, 0) AS BIT)
			,TIPOCAJA=COALESCE(CIT.TIPOCAJA, 'TFCJ')
			,VARIABLE_CAUSALCITANOASISTIO = COALESCE ((SELECT CASE WHEN UPPER (DATO) = 'SI' then 'SI' ELSE 'NO' END  FROM USVGS WHERE  IDVARIABLE = 'MANEJAOBS_ENCITCI'),'NO')
			,REQ_AUTORIZACION, TIENE_LAB
			, COALESCE(HACTRAND.CNSHACTRAN,'') CNSHACTRAN , COALESCE(HACTRAND.SIRAS,'') SIRAS
		, SED.IDSEDE, SED.DESCRIPCION [IDSEDE_DESC], CIT.TIPOCITA, T3.DESCRIPCION TIPOCITA_DESC, CIT.EXTRA, CIT.TIME_EXTRA
		, SERVICIOS = CASE WHEN  (SELECT  COUNT(*) FROM CITSER WHERE CITSER.CONSECUTIVO_CIT = CIT.CONSECUTIVO)>0
						THEN (SELECT SER.IDSERVICIO value, SER.DESCSERVICIO label, COALESCE(SER.DURACIONCITA,0) DURACIONCITA  
						FROM SER WHERE IDSERVICIO IN (SELECT CITSER.IDSERVICIO FROM CITSER WHERE CITSER.CONSECUTIVO_CIT = CIT.CONSECUTIVO)
						FOR JSON PATH )
					ELSE
						(SELECT SER.IDSERVICIO value, SER.DESCSERVICIO label, COALESCE(SER.DURACIONCITA,0) DURACIONCITA  
						FROM SER WHERE SER.IDSERVICIO = CIT.IDSERVICIO
						FOR JSON PATH )
					END
   					, IDAUTSES, CAST (CIT.FACTURABLE AS BIT) FACTURABLE, CAST(CIT.NOCOBRAR AS BIT) NOCOBRAR
					, COALESCE(CIT.PREGUNTAPOR,0) PREGUNTAPOR
			, CIT.NOMBREACOMPA
			, CIT.TELEFONOACOMPA
			, CIT.PARENTESCOACOMPA
			, AFI.URG_DIR DIRECCIONACOMPA, COALESCE(CIT.EXONERACION,0) EXONERACION, CIT.TIPO_EXONERACION, CIT.VALORCOPAGO_EXONERA
			FROM CIT 
				INNER JOIN MED     ON CIT.IDMEDICO     = MED.IDMEDICO
				INNER JOIN MES     ON MED.IDEMEDICA    = MES.IDEMEDICA
				LEFT JOIN TER     ON CIT.IDTERCEROCA  = TER.IDTERCERO
				LEFT JOIN PLN     ON CIT.IDPLAN       = PLN.IDPLAN
				LEFT JOIN SER     ON CIT.IDSERVICIO   = SER.IDSERVICIO
				LEFT JOIN AFI     ON CIT.IDAFILIADO   = AFI.IDAFILIADO
				LEFT JOIN SED     ON CIT.IDSEDE        = SED.IDSEDE
				LEFT JOIN KUNG    ON CIT.CODUNG       = KUNG.CODUNG
				LEFT JOIN CEN     ON CIT.CCOSTO       = CEN.CCOSTO
				LEFT JOIN TGEN    ON AFI.TIPO_DOC     = TGEN.CODIGO AND TGEN.TABLA = 'General' AND TGEN.CAMPO = 'TIPOIDENT'
				LEFT JOIN PPT     ON PPT.IDTERCERO    = CIT.IDTERCEROCA AND PPT.IDPLAN=CIT.IDPLAN
				LEFT JOIN MPE     ON CIT.IDPESPECIAL  = MPE.IDPESPECIAL
				LEFT JOIN TGEN T2 ON AFI.NIVELSOCIOEC = T2.CODIGO AND T2.TABLA = 'General' AND T2.CAMPO = 'NIVELSOCIOECO'
				LEFT JOIN TGEN T3 ON CIT.TIPOCITA = T3.CODIGO AND T3.TABLA = 'CITAS' AND T3.CAMPO = 'TIPOCITA'
				LEFT OUTER JOIN HACTRAND	ON CIT.CONSECUTIVO = HACTRAND.NOREFERENCIA AND HACTRAND.PROCEDENCIA ='CI'
		WHERE  CIT.CONSECUTIVO = @CONSECUTIVO

		--2DO SELECT
		SELECT CODIGO value, DESCRIPCION label FROM TGEN WHERE TABLA = 'CIT' AND CAMPO = 'EXONERACION'
	END
	IF @METODO = 'INFO_CITA_RECAUDAR'
	BEGIN 
		SELECT @CONSECUTIVO = CONSECUTIVO
		FROM OPENJSON(@PARAMETROS)
		WITH(CONSECUTIVO	VARCHAR(16)		'$.CONSECUTIVO')
  

		SELECT @CNSACJ =  CAJ.CNSACJ, @CODCAJERO = USUSU.CODCAJERO, @CODCAJA = UBEQ.CAJA  FROM  USUSU
			INNER JOIN UBEQ ON USUSU.SYS_ComputerName = UBEQ.SYS_ComputerName
			INNER JOIN CAJ ON UBEQ.CAJA = CAJ.CODCAJA
			WHERE  USUARIO = @USUARIO

		IF (SELECT DBO.FNK_VALIDA_TURNO_CAJA(@USUARIO,@SYS_COMPUTERNAME ) ) = 0
		BEGIN
			INSERT INTO @TBLERRORES(ERROR) SELECT 'No es Cajero.'
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END
		IF (SELECT DBO.FNK_VALIDA_TURNO_CAJA(@USUARIO,@SYS_COMPUTERNAME ) ) = 1
		BEGIN
			INSERT INTO @TBLERRORES(ERROR) SELECT 'La caja no existe.'
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END
		IF (SELECT DBO.FNK_VALIDA_TURNO_CAJA(@USUARIO,@SYS_COMPUTERNAME ) ) = 2
		BEGIN
			INSERT INTO @TBLERRORES(ERROR) SELECT 'Caja Cerrada.'
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END
		IF (SELECT DBO.FNK_VALIDA_TURNO_CAJA(@USUARIO,@SYS_COMPUTERNAME ) ) = 3
		BEGIN
			INSERT INTO @TBLERRORES(ERROR) SELECT 'Cajero diferente al que abrio la caja.'
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END
		IF (SELECT DBO.FNK_VALIDA_TURNO_CAJA(@USUARIO,@SYS_COMPUTERNAME ) ) = 4
		BEGIN
			INSERT INTO @TBLERRORES(ERROR) SELECT 'No tiene turno asignado.'
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END
		IF (SELECT DBO.FNK_VALIDA_TURNO_CAJA(@USUARIO,@SYS_COMPUTERNAME ) ) = 5
		BEGIN
			INSERT INTO @TBLERRORES(ERROR) SELECT 'El equipo no es caja.'
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END
		IF (SELECT DBO.FNK_VALIDA_TURNO_CAJA(@USUARIO,@SYS_COMPUTERNAME ) ) = 6
		BEGIN
			INSERT INTO @TBLERRORES(ERROR) SELECT 'No tiene turno para este horario.'
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END
		IF (SELECT CERRADA FROM FCJ  WHERE  NOADMISION =@CONSECUTIVO) = 1
		BEGIN
			INSERT INTO @TBLERRORES(ERROR) SELECT 'El recibo se encuentra recaudado.'
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END
		IF ( SELECT  COALESCE(DATO,'') FROM USVGS WHERE  IDVARIABLE = 'IDCJAPERTURACAJA' ) = ''
		BEGIN
			INSERT INTO @TBLERRORES(ERROR) SELECT 'ABRIR CAJA: Variable del Sistema IDCJAPERTURACAJA sin Definición.'
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END
		ELSE
		BEGIN
			IF  (SELECT COUNT(*) FROM CPCJ INNER JOIN USVGS ON CPCJ.CODIGO = USVGS.DATO WHERE  IDVARIABLE = 'IDCJAPERTURACAJA') = 0
			BEGIN
			INSERT INTO @TBLERRORES(ERROR) SELECT 'ABRIR CAJA: Concepto de Caja definido en la variable del Sistema IDCJAPERTURACAJA, No existe en la tabla conceptos de caja'
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
			END
		END
		IF (SELECT COUNT(*) FROM CAJ WHERE CODCAJA = @CODCAJA AND 1=2) > 0
		BEGIN
			INSERT INTO @TBLERRORES(ERROR) SELECT 'No valida aun.'
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END

--query2
--query2
		IF (SELECT COUNT(1)  FROM     CXT INNER JOIN TUR ON CXT.CODTURNO = TUR.CODTURNO WHERE  CODCAJA = @CODCAJA AND CODCAJERO =@CODCAJERO) = 0
		BEGIN
			INSERT INTO @TBLERRORES(ERROR) SELECT 'No tiene turnos configurados.'
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END
		IF (SELECT DATEPART ( dw,getdate())) = 1 
		BEGIN
			IF  (SELECT TUR.LUNES  FROM     CXT INNER JOIN TUR ON CXT.CODTURNO = TUR.CODTURNO WHERE  CODCAJA = @CODCAJA AND CODCAJERO =@CODCAJERO) IN (NULL, '', 0)
			BEGIN
			INSERT INTO @TBLERRORES(ERROR) SELECT 'No tiene turno configurado para hoy Lunes.'
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
			END
			END
		IF (SELECT DATEPART ( dw,getdate())) = 2 
		BEGIN
			IF  (SELECT TUR.MARTES  FROM     CXT INNER JOIN TUR ON CXT.CODTURNO = TUR.CODTURNO WHERE  CODCAJA = @CODCAJA AND CODCAJERO =@CODCAJERO) IN (NULL, '', 0) 
			BEGIN
			INSERT INTO @TBLERRORES(ERROR) SELECT 'No tiene turno configurado para hoy Martes.'
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
			END
			END
		IF (SELECT DATEPART ( dw,getdate())) = 3 
		BEGIN
			IF  (SELECT TUR.MIERCOLES  FROM     CXT INNER JOIN TUR ON CXT.CODTURNO = TUR.CODTURNO WHERE  CODCAJA = @CODCAJA AND CODCAJERO =@CODCAJERO) IN (NULL, '', 0) 
			BEGIN
			INSERT INTO @TBLERRORES(ERROR) SELECT 'No tiene turno configurado para hoy Miercoles.'
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
			END
			END
		IF (SELECT DATEPART ( dw,getdate())) = 4 
		BEGIN
			IF  (SELECT TUR.JUEVES  FROM     CXT INNER JOIN TUR ON CXT.CODTURNO = TUR.CODTURNO WHERE  CODCAJA = @CODCAJA AND CODCAJERO =@CODCAJERO)IN (NULL, '', 0) 
			BEGIN
			INSERT INTO @TBLERRORES(ERROR) SELECT 'No tiene turno configurado para hoy Jueves.'
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
			END
			END
		IF (SELECT DATEPART ( dw,getdate())) = 5 
		BEGIN
			IF  (SELECT TUR.VIERNES  FROM     CXT INNER JOIN TUR ON CXT.CODTURNO = TUR.CODTURNO WHERE  CODCAJA = @CODCAJA AND CODCAJERO =@CODCAJERO) IN (NULL, '', 0) 
			BEGIN
			INSERT INTO @TBLERRORES(ERROR) SELECT 'No tiene turno configurado para hoy Viernes.'
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
			END
			END
		IF (SELECT DATEPART ( dw,getdate())) = 6 
		BEGIN
			IF  (SELECT TUR.SABADO  FROM     CXT INNER JOIN TUR ON CXT.CODTURNO = TUR.CODTURNO WHERE  CODCAJA = @CODCAJA AND CODCAJERO =@CODCAJERO)IN (NULL, '', 0)
			--IF  1= 1
			BEGIN
			INSERT INTO @TBLERRORES(ERROR) SELECT 'No tiene turno configurado para hoy Sabado.'
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
			END
			END
		IF (SELECT DATEPART ( dw,getdate())) = 7 
		BEGIN
			IF  (SELECT TUR.DOMINGO  FROM     CXT INNER JOIN TUR ON CXT.CODTURNO = TUR.CODTURNO WHERE  CODCAJA = @CODCAJA AND CODCAJERO =@CODCAJERO) IN (NULL, '', 0) 
			BEGIN
			INSERT INTO @TBLERRORES(ERROR) SELECT 'No tiene turno configurado para hoy Domingo.'
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
			END
			END

		IF @IDPLAN IN (DBO.FNK_VALORVARIABLE('IDPLANPART'),DBO.FNK_VALORVARIABLE('IDPLANPART2'),DBO.FNK_VALORVARIABLE('IDPLANPART3')
				,DBO.FNK_VALORVARIABLE('IDPLANPART4'),DBO.FNK_VALORVARIABLE('IDPLANPART5'))
		BEGIN
			IF @PROCEDENCIA = 'CITAS'
			BEGIN
			IF (SELECT COUNT(*) FROM FTR WHERE NOREFERENCIA= @NOADMISION AND PROCEDENCIA='CI' AND ESTADO='P') <= 0
			BEGIN
				INSERT INTO @TBLERRORES(ERROR) SELECT 'La Cita No Ha sido Facturada... Es Particular Debe Facturar Primero'
				SELECT 'KO' OK
				SELECT ERROR FROM @TBLERRORES
				RETURN
			END
			END
		END
		IF (SELECT COUNT(1) FROM CIT WHERE  CONSECUTIVO = @CONSECUTIVO AND TIPOCAJA NOT IN ('FCJ','TFCJ') )>0 
		BEGIN
			INSERT INTO @TBLERRORES(ERROR) SELECT 'La cita no tiene monto a recaudar'
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END
		IF @IDPLAN NOT IN (DBO.FNK_VALORVARIABLE('IDPLANPART'),DBO.FNK_VALORVARIABLE('IDPLANPART2'),DBO.FNK_VALORVARIABLE('IDPLANPART3')
				,DBO.FNK_VALORVARIABLE('IDPLANPART4'),DBO.FNK_VALORVARIABLE('IDPLANPART5'))
		BEGIN
			IF (SELECT VALORCOPAGO FROM CIT WHERE  CONSECUTIVO = @CONSECUTIVO  )<=0 
			BEGIN
			INSERT INTO @TBLERRORES(ERROR) SELECT 'El monto de copago, debe de ser mayor a 0'
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
			END
		END
		IF @IDPLAN  IN (DBO.FNK_VALORVARIABLE('IDPLANPART'),DBO.FNK_VALORVARIABLE('IDPLANPART2'),DBO.FNK_VALORVARIABLE('IDPLANPART3')
				,DBO.FNK_VALORVARIABLE('IDPLANPART4'),DBO.FNK_VALORVARIABLE('IDPLANPART5'))
		BEGIN
			IF (SELECT COALESCE((SELECT VALORTOTAL FROM TFCJ WHERE NOADMISION = CIT.CONSECUTIVO),0)  FROM CIT WHERE  CONSECUTIVO = @CONSECUTIVO AND CIT.TIPOCAJA = 'TFCJ'  )>0 
			BEGIN
			INSERT INTO @TBLERRORES(ERROR) SELECT 'El monto de copago, debe de ser mayor a 0'
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
			END
			IF (SELECT COALESCE((SELECT VALORTOTAL FROM FCJ WHERE NOADMISION = CIT.CONSECUTIVO),0)  FROM CIT WHERE  CONSECUTIVO = @CONSECUTIVO AND CIT.TIPOCAJA = 'FCJ'  )>0 
			BEGIN
			INSERT INTO @TBLERRORES(ERROR) SELECT 'El monto de copago, debe de ser mayor a 0'
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
			END
		END
		IF 1 = 2
		BEGIN
			INSERT INTO @TBLERRORES(ERROR) SELECT 'La cita ya envio Copago.'
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END

		BEGIN TRY
			SELECT 'OK'OK, --VALORCOPAGO
				CIT.CONSECUTIVO,AFI.TIPO_DOC, TGEN.DESCRIPCION [DOCNOMBRE], AFI.DOCIDAFILIADO, AFI.NOMBREAFI, AFI.DIRECCION, AFI.SEXO, CIT.NOAUTORIZACION
				, AFI.CELULAR,AFI.EDAD, CIT.FECHA, CIT.FECHASOL, CIT.CUMPLIDA, CIT.TIPOCAJA, CIT.NORECIBOCAJA, CIT.IDAFILIADO, CIT.CONFIRMADA
				,TER.IDTERCERO, TER.RAZONSOCIAL, PLN.IDPLAN, PLN.DESCPLAN ,AFI.NIVELSOCIOEC , T2.DESCRIPCION [NIVELDESC], CIT.FACTURADA
				, MED.NOMBRE, @CODCAJA CODCAJA , FCJ.CNSFACJ,FCJ.CNSACJ, FCJ.CERRADA, CASE WHEN FCJ.CERRADA = 1 THEN 'Cerrada' ELSE 'Abierta' END [ESTADO_RECIBO]
			, (SELECT COALESCE(SUM(VALORTOTAL),0) FROM FCJ WHERE FCJ.NOADMISION = CIT.CONSECUTIVO) TOTALFCJ
			, (SELECT COALESCE( SUM(VALOR),0) FROM PCJ WHERE CNSACJ = FCJ.CNSACJ AND CNSFACJ = FCJ.CNSFACJ ) TOTAL_PAGADO
				, CASE WHEN CIT.TIPOCAJA = 'TFCJ' THEN 'Recibo sin enviar a caja' 
					WHEN CIT.TIPOCAJA = 'FCJ' AND (SELECT CERRADA FROM FCJ WHERE  FCJ.NOADMISION = CIT.CONSECUTIVO)<> 1 THEN 'Recibo sin recaudar'
					WHEN CIT.TIPOCAJA = 'FCJ' AND (SELECT CERRADA FROM FCJ WHERE  FCJ.NOADMISION = CIT.CONSECUTIVO)= 1 THEN 'Recibo recaudado' ELSE '' END [ESTADO_CAJA]
				, MED.NOMBRE AS NOMBREMED
				, MED.NOMBRE AS PROFESIONAL
				, MED.IDMEDICO, MES.IDEMEDICA, MES.DESCRIPCION
				,SER.IDSERVICIO, SER.DESCSERVICIO, CIT.ATENCION, CIT.URGENCIA,CIT.CLASEORDEN,CIT.ESPROGRAMAS,CIT.OBSERVACIONES
				,CEN.DESCRIPCION [CENDESCRIPCION] ,CIT.CCOSTO, CASE WHEN CONVERT (DATE,CIT.FECHA) = CONVERT(DATE,DBO.FNK_GETDATE()) THEN '1' ELSE 0 END TIEMPO_LLEGADA
				,PNUMAUTORIZA_OBL=CAST(COALESCE(PPT.PNUMAUTORIZA_OBL, 0) AS BIT), CASE WHEN CIT.IDPLAN = DBO.FNK_VALORVARIABLE('IDPLANPART') OR
																							CIT.IDPLAN = DBO.FNK_VALORVARIABLE('IDPLANPART2') OR
																							CIT.IDPLAN = DBO.FNK_VALORVARIABLE('IDPLANPART3') OR
																							CIT.IDPLAN = DBO.FNK_VALORVARIABLE('IDPLANPART4') OR
																							CIT.IDPLAN = DBO.FNK_VALORVARIABLE('IDPLANPART5') 
		THEN  CASE WHEN CIT.TIPOCAJA = 'TFCJ' THEN  (SELECT VALORTOTAL FROM TFCJ WHERE NOADMISION = CIT.CONSECUTIVO) 
					WHEN CIT.TIPOCAJA = 'FCJ' THEN  (SELECT VALORTOTAL FROM FCJ WHERE NOADMISION = CIT.CONSECUTIVO) END ELSE CIT.VALORCOPAGO END  VALORCOPAGO
			,COPAGOIND=CAST(COALESCE(PPT.COPAGOIND, 0) AS BIT), CIT.IDPESPECIAL, MPE.DESCESPECIAL ,CIT.MODALIDAD
				FROM CIT 
				INNER JOIN AFI     ON CIT.IDAFILIADO   = AFI.IDAFILIADO
				INNER JOIN PLN     ON CIT.IDPLAN       = PLN.IDPLAN
				INNER JOIN TER     ON CIT.IDTERCEROCA  = TER.IDTERCERO
				INNER JOIN MED     ON CIT.IDMEDICO     = MED.IDMEDICO
				INNER JOIN SER     ON CIT.IDSERVICIO   = SER.IDSERVICIO
				INNER JOIN MES     ON MED.IDEMEDICA    = MES.IDEMEDICA
				LEFT JOIN FCJ     ON CIT.CONSECUTIVO   = FCJ.NOADMISION
				LEFT JOIN CEN     ON CIT.CCOSTO       = CEN.CCOSTO
				LEFT JOIN TGEN    ON AFI.TIPO_DOC     = TGEN.CODIGO AND TGEN.TABLA = 'General' AND TGEN.CAMPO = 'TIPOIDENT'
				LEFT JOIN PPT     ON PPT.IDTERCERO    = CIT.IDTERCEROCA AND PPT.IDPLAN=CIT.IDPLAN
				LEFT JOIN MPE     ON CIT.IDPESPECIAL  = MPE.IDPESPECIAL
				LEFT JOIN TGEN T2 ON AFI.NIVELSOCIOEC = T2.CODIGO AND T2.TABLA = 'General' AND T2.CAMPO = 'NIVELSOCIOECO'
			WHERE  CIT.CONSECUTIVO = @CONSECUTIVO
		END TRY
		BEGIN CATCH
			INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE()
		END CATCH
		IF(SELECT COUNT(*) FROM @TBLERRORES)>0
		BEGIN
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END

		SELECT 'OK' OK
		RETURN
	END
	IF @METODO = 'INFO_CITA_PARTICULAR'
	BEGIN 
		SELECT @CONSECUTIVO = CONSECUTIVO
		FROM OPENJSON(@PARAMETROS)
		WITH(CONSECUTIVO	VARCHAR(16)		'$.CONSECUTIVO')
  
		SELECT @CNSACJ =  CAJ.CNSACJ, @CODCAJERO = USUSU.CODCAJERO, @CODCAJA = UBEQ.CAJA  FROM  USUSU
			INNER JOIN UBEQ ON USUSU.SYS_ComputerName = UBEQ.SYS_ComputerName
			INNER JOIN CAJ ON UBEQ.CAJA = CAJ.CODCAJA
			WHERE  USUARIO = @USUARIO

		IF 1 = 2
		BEGIN
			INSERT INTO @TBLERRORES(ERROR) SELECT 'La cita ya envio Copago.'
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END

		BEGIN TRY
			SELECT 'OK'OK, CIT.DESCUENTO, CIT.VALORTOTAL, CIT.VALOREXEDENTE, CASE WHEN COALESCE(CIT.DESCUENTO, NULL) IS NULL THEN 'SINDESCEUNTO' ELSE 'CONDESCUENTO' END [DATO_DESCUENTO]  FROM
			CIT WHERE  CONSECUTIVO = @CONSECUTIVO
		END TRY
		BEGIN CATCH
			INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE()
		END CATCH
		IF(SELECT COUNT(*) FROM @TBLERRORES)>0
		BEGIN
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END

		SELECT 'OK' OK
		RETURN
	END
	IF @METODO = 'INFO_CITA_COPAGO'
	BEGIN 
		SELECT @CONSECUTIVO = CONSECUTIVO
		FROM OPENJSON(@PARAMETROS)
		WITH(CONSECUTIVO	VARCHAR(16)		'$.CONSECUTIVO')

		IF (SELECT COUNT(1) FROM CIT WHERE  CONSECUTIVO = @CONSECUTIVO AND  CIT.CUMPLIDA <> 1 )= 1 
		BEGIN
			IF (SELECT COUNT(1) FROM CIT WHERE  CONSECUTIVO = @CONSECUTIVO AND CIT.FECHALLEGA IS NULL ) =1 
			BEGIN
			INSERT INTO @TBLERRORES(ERROR) SELECT 'La cita no tiene llegada o no fue atendida.'
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
			END
		END
		--IF (SELECT COUNT(1) FROM CIT WHERE  CONSECUTIVO = @CONSECUTIVO AND TIPOCAJA IN ('FCJ','TFCJ') )>0 
		--BEGIN
		--   INSERT INTO @TBLERRORES(ERROR) SELECT 'La cita ya envio Copago.'
		--   SELECT 'KO' OK
		--   SELECT ERROR FROM @TBLERRORES
		--   RETURN
		--END
		IF (SELECT COUNT(1) FROM CIT WHERE  CONSECUTIVO = @CONSECUTIVO AND TIPOCAJA IN ('FCJ') )>0  AND EXISTS(SELECT * FROM FCJ WHERE  NOADMISION = @CONSECUTIVO)
		BEGIN
			INSERT INTO @TBLERRORES(ERROR) SELECT 'La cita tiene registro en FCJ.'
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END
		IF (SELECT COUNT(1) FROM CIT WHERE  CONSECUTIVO = @CONSECUTIVO AND TIPOCAJA IN ('TFCJ') )>0  AND EXISTS(SELECT * FROM TFCJ WHERE  NOADMISION = @CONSECUTIVO)
		BEGIN
			INSERT INTO @TBLERRORES(ERROR) SELECT 'La cita tiene registro en TFCJ.'
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END
		BEGIN TRY
			SELECT 'OK'OK,
				CIT.CONSECUTIVO,AFI.TIPO_DOC, TGEN.DESCRIPCION [DOCNOMBRE], AFI.DOCIDAFILIADO, AFI.NOMBREAFI, AFI.DIRECCION, AFI.SEXO, CIT.NOAUTORIZACION
				, AFI.CELULAR,AFI.EDAD, CIT.FECHA, CIT.FECHASOL, CIT.CUMPLIDA, CIT.TIPOCAJA, CIT.NORECIBOCAJA, CIT.IDAFILIADO, CIT.CONFIRMADA
				,TER.IDTERCERO, TER.RAZONSOCIAL, PLN.IDPLAN, PLN.DESCPLAN ,AFI.NIVELSOCIOEC , T2.DESCRIPCION [NIVELDESC], CIT.FACTURADA
				, MED.NOMBRE
				, MED.NOMBRE AS NOMBREMED
				, MED.NOMBRE AS PROFESIONAL
				, MED.IDMEDICO, MES.IDEMEDICA, MES.DESCRIPCION
				,SER.IDSERVICIO, SER.DESCSERVICIO, CIT.ATENCION, CIT.URGENCIA,CIT.CLASEORDEN,CIT.ESPROGRAMAS,CIT.OBSERVACIONES
				,CEN.DESCRIPCION [CENDESCRIPCION] ,CIT.CCOSTO, 
				CASE WHEN CONVERT (DATE,CIT.FECHA) = CONVERT(DATE,DBO.FNK_GETDATE()) THEN '1' ELSE 0 END TIEMPO_LLEGADA
				,PNUMAUTORIZA_OBL=CAST(COALESCE(PPT.PNUMAUTORIZA_OBL, 0) AS BIT), 
				CASE WHEN CIT.IDPLAN =   DBO.FNK_VALORVARIABLE('IDPLANPART') OR
							CIT.IDPLAN = DBO.FNK_VALORVARIABLE('IDPLANPART2') OR
							CIT.IDPLAN = DBO.FNK_VALORVARIABLE('IDPLANPART3') OR
							CIT.IDPLAN = DBO.FNK_VALORVARIABLE('IDPLANPART4') OR
							CIT.IDPLAN = DBO.FNK_VALORVARIABLE('IDPLANPART5') 
					THEN  CASE WHEN CIT.TIPOCAJA = 'TFCJ' THEN  (SELECT VALORTOTAL FROM TFCJ WHERE NOADMISION = CIT.CONSECUTIVO) 
								WHEN CIT.TIPOCAJA = 'FCJ'  THEN  (SELECT VALORTOTAL FROM FCJ WHERE NOADMISION = CIT.CONSECUTIVO) 
					END 
					ELSE VALORCOPAGO
					END  VALORCOPAGO
			,COPAGOIND=CAST(COALESCE(PPT.COPAGOIND, 0) AS BIT), CIT.IDPESPECIAL, MPE.DESCESPECIAL ,CIT.MODALIDAD
				FROM CIT 
				INNER JOIN AFI     ON CIT.IDAFILIADO   = AFI.IDAFILIADO
				INNER JOIN PLN     ON CIT.IDPLAN       = PLN.IDPLAN
				INNER JOIN TER     ON CIT.IDTERCEROCA  = TER.IDTERCERO
				INNER JOIN MED     ON CIT.IDMEDICO     = MED.IDMEDICO
				INNER JOIN SER     ON CIT.IDSERVICIO   = SER.IDSERVICIO
				INNER JOIN MES     ON MED.IDEMEDICA    = MES.IDEMEDICA
				LEFT JOIN CEN     ON CIT.CCOSTO       = CEN.CCOSTO
				LEFT JOIN TGEN    ON AFI.TIPO_DOC     = TGEN.CODIGO AND TGEN.TABLA = 'General' AND TGEN.CAMPO = 'TIPOIDENT'
				LEFT JOIN PPT     ON PPT.IDTERCERO    = CIT.IDTERCEROCA AND PPT.IDPLAN=CIT.IDPLAN
				LEFT JOIN MPE     ON CIT.IDPESPECIAL  = MPE.IDPESPECIAL
				LEFT JOIN TGEN T2 ON AFI.NIVELSOCIOEC = T2.CODIGO AND T2.TABLA = 'General' AND T2.CAMPO = 'NIVELSOCIOECO'
			WHERE  CIT.CONSECUTIVO = @CONSECUTIVO
		END TRY
		BEGIN CATCH
			INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE()
		END CATCH
		IF(SELECT COUNT(*) FROM @TBLERRORES)>0
		BEGIN
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END

		SELECT 'OK' OK
		RETURN
	END
	IF @METODO = 'INGRESANDO_NOTA'
	BEGIN
		SELECT @CONSECUTIVO =  CONSECUTIVO, @OBSERVACION = OBSERVACION
		FROM OPENJSON (@PARAMETROS)
		WITH (CONSECUTIVO    VARCHAR(20)    '$.CONSECUTIVO',
				OBSERVACION    VARCHAR(MAX)   '$.OBSERVACION')

			IF (SELECT COUNT(*) FROM CITSE WHERE CONSECUTIVO = @CONSECUTIVO) = 0 
			SET @CONT = 1
			ELSE 
			SELECT @CONT = (SELECT COUNT(1) FROM CITSE WHERE CONSECUTIVO = @CONSECUTIVO) + 1
        
			SELECT @IDAFILIADO = (SELECT IDAFILIADO FROM CIT WHERE CONSECUTIVO = @CONSECUTIVO)
			INSERT INTO CITSE (CONSECUTIVO, ITEM, USUARIO, SYS_COMPUTERNAME, OBSERVACION, PROCEDENCIA, FECHA, IDAFILIADO, TIPO)
			VALUES (@CONSECUTIVO, @CONT,@USUARIO,@SYS_COMPUTERNAME, @OBSERVACION, 'AGENDA_MED', DBO.FNK_GETDATE() , @IDAFILIADO, 'Nota' )
        
		SELECT 'OK'OK
	END
	IF @METODO = 'CONFIRMA_CITA'
	BEGIN
		SELECT @CONSECUTIVO =  CONSECUTIVO,  @OBSERVACION =  OBSERVACION, @VALORCOPAGO = VALORCOPAGO, @HABILITA_COPAGO = HABILITA_COPAGO
		FROM OPENJSON (@PARAMETROS)
		WITH (CONSECUTIVO       VARCHAR(20)    '$.CONSECUTIVO',
			VALORCOPAGO       VARCHAR(20)    '$.VALORCOPAGO',
				OBSERVACION       VARCHAR(100)   '$.OBSERVACION',
			HABILITA_COPAGO   BIT            '$.HABILITA_COPAGO')

		SELECT @OBSERVACION = COALESCE(@OBSERVACION,'')
		SELECT  @VLR_ANTERIOR = VALORCOPAGO FROM CIT WHERE  CONSECUTIVO = @CONSECUTIVO


		IF EXISTS (SELECT * FROM CIT INNER JOIN KPAGE ON CIT.IDKPAGE = KPAGE.IDKPAGE WHERE COALESCE(CIT.IDKPAGE,0)<>0  AND CIT.CONSECUTIVO = @CONSECUTIVO ) 
		AND COALESCE(@VALORCOPAGO,0) <> COALESCE(@VLR_ANTERIOR,0)
		BEGIN
			INSERT INTO @TBLERRORES(ERROR) SELECT 'No se puede editar el Copago, tiene un link de pago generado, favor de anular el link de Pago.'
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END

		IF @HABILITA_COPAGO = 1
		BEGIN
			IF @VALORCOPAGO <> (SELECT VALORCOPAGO FROM CIT WHERE  CONSECUTIVO = @CONSECUTIVO)
			BEGIN
			IF (SELECT COUNT(1) FROM USGRUH WHERE  GRUPO = (SELECT DBO.FNK_DESCIFRAR(USUSU.GRUPO) FROM USUSU WHERE  USUARIO = @USUARIO) AND USGRUH.PERMISO = 1 AND USGRUH.IDPROCEDIMIENTO = 'CONF_CONSULTA_EXTERNA' AND USGRUH.IDCONTROL = 'agrega_copago' ) <> 1
			BEGIN
				INSERT INTO @TBLERRORES(ERROR) SELECT 'Usted no cuenta con permisos, para modificar el Copago.'
				SELECT 'KO' OK
				SELECT ERROR FROM @TBLERRORES
				RETURN
			END
			END
		END
		BEGIN TRY
			UPDATE CIT SET CONFIRMADA = 1, CIT.FECHACONFIRMA = DBO.FNK_GETDATE(),OBS_CONFIRMADO = @OBSERVACION, CIT.USUCONFIRMA = @USUARIO   WHERE  CONSECUTIVO = @CONSECUTIVO

			IF @HABILITA_COPAGO = 1
			BEGIN
			UPDATE CIT SET VALORCOPAGO = @VALORCOPAGO  WHERE  CONSECUTIVO = @CONSECUTIVO
			SELECT @MENSAJE_COPAGO = 'Cambio copago, vlr anterior: $'+ STR(@VLR_ANTERIOR) + ' , vlr nuevo: $'+ STR(@VALORCOPAGO) 
			END
			IF (SELECT COUNT(*) FROM CITSE WHERE CONSECUTIVO = @CONSECUTIVO) = 0 
				SET @CONT = 1
			ELSE 
				SELECT @CONT = (SELECT COUNT(1) FROM CITSE WHERE CONSECUTIVO = @CONSECUTIVO) + 1
        
		IF @HABILITA_COPAGO = 1
			SELECT @MENSAJE_OBS = 'Cita Conf. - Obs: ' +@OBSERVACION + '- ' + @MENSAJE_COPAGO
		ELSE
			SELECT @MENSAJE_OBS = 'Cita Conf. - Obs: ' +@OBSERVACION

			SELECT @IDAFILIADO = (SELECT IDAFILIADO FROM CIT WHERE CONSECUTIVO = @CONSECUTIVO)
			INSERT INTO CITSE (CONSECUTIVO, ITEM, USUARIO, SYS_COMPUTERNAME, OBSERVACION, PROCEDENCIA, FECHA, IDAFILIADO, TIPO)
			VALUES (@CONSECUTIVO, @CONT,@USUARIO,@SYS_COMPUTERNAME, @MENSAJE_OBS , 'AGENDA_MED', DBO.FNK_GETDATE() , @IDAFILIADO , 'CONFIRMA' )
		END TRY
		BEGIN CATCH
			INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE()
		END CATCH
		IF(SELECT COUNT(*) FROM @TBLERRORES)>0
		BEGIN
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END

		SELECT 'OK' OK
		RETURN
	END
	IF @METODO = 'CANCELAR_CONFIRMA_CITA'
	BEGIN
		SELECT @CONSECUTIVO =  CONSECUTIVO,  @OBSERVACION =  OBSERVACION
		FROM OPENJSON (@PARAMETROS)
		WITH (CONSECUTIVO       VARCHAR(20)    '$.CONSECUTIVO',
				OBSERVACION       VARCHAR(100)   '$.OBSERVACION'
			)

		SELECT @OBSERVACION = COALESCE(@OBSERVACION,'')
		SELECT  @VLR_ANTERIOR = VALORCOPAGO FROM CIT WHERE  CONSECUTIVO = @CONSECUTIVO

		IF (SELECT COUNT(*) FROM CIT WHERE  CONSECUTIVO = @CONSECUTIVO AND FECHALLEGA IS NOT NULL)> 0
		BEGIN
			INSERT INTO @TBLERRORES(ERROR) SELECT 'Ya se confirmo llegada'
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END
        
		BEGIN TRY
			UPDATE CIT SET CONFIRMADA = 0 , CIT.FECHACONFIRMA = NULL, CIT.USUCONFIRMA =  NULL WHERE  CONSECUTIVO = @CONSECUTIVO

			IF (SELECT COUNT(*) FROM CITSE WHERE CONSECUTIVO = @CONSECUTIVO) = 0 
				SET @CONT = 1
			ELSE 
				SELECT @CONT = (SELECT COUNT(1) FROM CITSE WHERE CONSECUTIVO = @CONSECUTIVO) + 1
        

			SELECT @MENSAJE_OBS = 'Cita Can. Conf. - Obs: ' +@OBSERVACION

			SELECT @IDAFILIADO = (SELECT IDAFILIADO FROM CIT WHERE CONSECUTIVO = @CONSECUTIVO)
			INSERT INTO CITSE (CONSECUTIVO, ITEM, USUARIO, SYS_COMPUTERNAME, OBSERVACION, PROCEDENCIA, FECHA, IDAFILIADO, TIPO)
			VALUES (@CONSECUTIVO, @CONT,@USUARIO,@SYS_COMPUTERNAME, @MENSAJE_OBS , 'AGENDA_MED', DBO.FNK_GETDATE() , @IDAFILIADO , 'CAN_CONFIRMA')
		END TRY
		BEGIN CATCH
			INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE()
		END CATCH
		IF(SELECT COUNT(*) FROM @TBLERRORES)>0
		BEGIN
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END

		SELECT 'OK' OK
		RETURN
	END
 	IF @METODO = 'NO_ASISTIO'
	BEGIN
		SELECT @CONSECUTIVO =  CONSECUTIVO,  @OBSERVACION =  OBSERVACION, @IDCAUSAL = IDCAUSAL
		FROM OPENJSON (@PARAMETROS)
		WITH (CONSECUTIVO       VARCHAR(20)    '$.CONSECUTIVO',
			OBSERVACION       VARCHAR(MAX)   '$.OBSERVACION',
			IDCAUSAL          VARCHAR(100)   '$.IDCAUSAL')

		SELECT @OBSERVACION = COALESCE(@OBSERVACION,'')
		SELECT  @NORECIBOCAJA = NORECIBOCAJA, @IDAFILIADO = IDAFILIADO FROM CIT WHERE  CONSECUTIVO = @CONSECUTIVO
     
		IF (SELECT CUMPLIDA FROM CIT WHERE  CONSECUTIVO = @CONSECUTIVO) = 2
		BEGIN
			INSERT INTO @TBLERRORES(ERROR) SELECT 'La cita se encuentra con el estado No Asistio.'
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END
		IF (SELECT CUMPLIDA FROM CIT WHERE  CONSECUTIVO = @CONSECUTIVO) = 1
		BEGIN
			INSERT INTO @TBLERRORES(ERROR) SELECT 'La cita se encuentra atendida.'
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END
    
		BEGIN TRY

			IF EXISTS(SELECT 1 FROM CAU WHERE IDCAUSAL = @IDCAUSAL AND CREANOTA=1) -- EZERPA 17.07.2023 Crear NE cuando escogen una causal que genera una nota
			BEGIN
				IF EXISTS(SELECT 1 FROM MPL WHERE CLASEPLANTILLA='QRY_PNA')
				BEGIN
					IF OBJECT_ID('@CONSECUTIVOHCA') IS NULL DECLARE @CONSECUTIVOHCA VARCHAR(20)
					IF OBJECT_ID('@ITEMRED') IS NULL DECLARE @ITEMRED INT
					EXEC SPK_GENCONSECUTIVO '01',@SEDE,'@HCNE',@CONSECUTIVOHCA OUTPUT
					SELECT @CONSECUTIVOHCA = 'NE' + @SEDE + REPLACE(SPACE(8 - LEN(@CONSECUTIVOHCA)) + LTRIM(RTRIM(@CONSECUTIVOHCA)), SPACE(1), 0)
					
					SELECT @ITEMRED = MAX(ITEMRED) + 1 FROM HCA

					EXEC DBO.SPK_CREA_HC @CONSECUTIVO = @CONSECUTIVOHCA, @CLASEPLANTILLA = 'QRY_PNA', @ITEMRED = @ITEMRED

					UPDATE HCA SET 
						IDMEDICO=USUSU.IDMEDICO
						,IDAFILIADO=CIT.IDAFILIADO
						,NOADMISION=CIT.NOADMISION
						,IDDX=(SELECT TOP 1 IDDX FROM HCA WHERE IDAFILIADO=CIT.IDAFILIADO AND ANULADA=0 ORDER BY FECHA DESC)
						,TIPODX=(SELECT TOP 1 TIPODX FROM HCA WHERE IDAFILIADO=CIT.IDAFILIADO AND ANULADA=0 ORDER BY FECHA DESC)
						,EDAD = CAST(DATEDIFF(DAY, AFI.FNACIMIENTO, current_timestamp) / (365.23076923074) AS INT)
						,IDMEDICODILIGENCIA = USUSU.IDMEDICO
						,MED_ESPEC=MED.IDEMEDICA
						,CONSECUTIVOCIT=@CONSECUTIVO
					FROM HCA 
					INNER JOIN CIT ON CIT.CONSECUTIVO=@CONSECUTIVO
					INNER JOIN AFI  ON CIT.IDAFILIADO=AFI.IDAFILIADO
					INNER JOIN MPL  ON MPL.CLASEPLANTILLA=HCA.CLASEPLANTILLA
					INNER JOIN USUSU ON USUSU.USUARIO=@USUARIO
					INNER JOIN MED  ON USUSU.IDMEDICO=MED.IDMEDICO 
					WHERE HCA.CONSECUTIVO=@CONSECUTIVOHCA
					
					UPDATE HCAD SET MEMO=@OBSERVACION WHERE CONSECUTIVO=@CONSECUTIVOHCA
				END
			END

			UPDATE CIT SET CUMPLIDA = 2, CIT.FACTURABLE = 0   WHERE  CONSECUTIVO = @CONSECUTIVO

			DELETE FROM TFCJDD WHERE  CNSFACJ = @NORECIBOCAJA
			DELETE FROM TFCJD WHERE  CNSFACJ = @NORECIBOCAJA
			DELETE FROM TFCJ WHERE  CNSFACJ = @NORECIBOCAJA

			IF (SELECT COUNT(*) FROM CITSE WHERE CONSECUTIVO = @CONSECUTIVO) = 0 
				SET @CONT = 1
			ELSE 
				SELECT @CONT = (SELECT COUNT(1) FROM CITSE WHERE CONSECUTIVO = @CONSECUTIVO) + 1
        
			SELECT @MENSAJE_OBS = 'Cita No Asistio. - Obs: ' +@OBSERVACION

			INSERT INTO CITSE (CONSECUTIVO, ITEM, USUARIO, SYS_COMPUTERNAME, OBSERVACION, PROCEDENCIA, FECHA, IDAFILIADO, TIPO)
			VALUES (@CONSECUTIVO, @CONT,@USUARIO,@SYS_COMPUTERNAME, @MENSAJE_OBS , 'AGENDA_MED', DBO.FNK_GETDATE() , @IDAFILIADO , 'NO_ASISTE' )
			
			
			IF  DBO.FNK_VALORVARIABLE('COBRAMULTA_CIT') = 'SI' -- EZERPA 20230724 Si es una cita que marcan como inasistencia no debe ir a cancelada
			BEGIN
				--OBSERVACION
				PRINT 'INSERTA A CITCI =======>>>> '
				SELECT @CONSECUTIVOCAN = NULL
				EXEC SPK_GENCONSECUTIVO '01','01','@CITCI', @CONSECUTIVOCAN OUTPUT  
				SELECT @CONSECUTIVOCAN = '01' + REPLACE(SPACE(8 - LEN(@CONSECUTIVOCAN))+LTRIM(RTRIM(@CONSECUTIVOCAN)),SPACE(1),0)    

				INSERT INTO CITCI(CONSECUTIVOCAN,CONSECUTIVO,TIPO,IDCAUSAL,FECHASOL,FECHA,FECHAATENCION,IDAFILIADO,NUMCARNET,TIPOCITA,TIPOSOLICITUD,IDSERVICIO,ATENCION,
									PVEZ,IDCONTRATANTE,IDSEDE,IDMEDICO,IDPLAN,URGENCIA,VALORTOTAL,VALORCOPAGO,VALOREXEDENTE,VALORTOTALCOS,VALORCOPAGOCOSTO,IMPRESO,CUMPLIDA,
									IDESTADOE,ESTADO,GENEROCAJA,USUARIO,RAZON,VALORMULTA,TIPOCAJA,CODCAJA,CNSFACJ,PAGADAMULTA,SYS_COMPUTERNAME_ANU,FECHA_ANU,
									OBSERVACIONES, NOADMISION, USUASIGNA,MODALIDAD, NOASISTIO_IDCAUSAL, NOASISTIO_OBSERVACION, IDAUTSES)
				SELECT @CONSECUTIVOCAN, @CONSECUTIVO, 'I',  DBO.FNK_VALORVARIABLE ('CAU_NO_ASISTIO'), FECHASOL,DBO.FNK_FECHA_SIN_MLS(FECHA),DBO.FNK_FECHA_SIN_MLS(FECHAATENCION),IDAFILIADO,NUMCARNET,TIPOCITA,TIPOSOLICITUD,IDSERVICIO,LEFT(ATENCION,1),
									PVEZ,IDCONTRATANTE,IDSEDE,IDMEDICO,IDPLAN,URGENCIA,VALORTOTAL,VALORCOPAGO,VALOREXEDENTE,VALORTOTALCOS,VALORCOPAGOCOSTO,IMPRESO,CUMPLIDA,
									IDESTADOE,ESTADO,GENEROCAJA, @USUARIO, NULL,NULL,TIPOCAJA,CODCAJA,NULL,0, @SYS_COMPUTERNAME, DBO.FNK_GETDATE(),
									@OBSERVACION, NOADMISION, CIT.USUARIO, CIT.MODALIDAD, CIT.NOASISTIO_IDCAUSAL, CIT.NOASISTIO_OBSERVACION, IDAUTSES
				FROM   CIT
				WHERE  CONSECUTIVO = @CONSECUTIVO
			END

		END TRY
		BEGIN CATCH
			INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE()
		END CATCH
		IF(SELECT COUNT(*) FROM @TBLERRORES)>0
		BEGIN
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END

		SELECT 'OK' OK
		RETURN
	END  
 	IF @METODO = 'QUITAR_NO_ASISTIO'
	BEGIN
		SELECT @CONSECUTIVO =  CONSECUTIVO,  @OBSERVACION =  OBSERVACION
		FROM OPENJSON (@PARAMETROS)
		WITH (CONSECUTIVO       VARCHAR(20)    '$.CONSECUTIVO',
				OBSERVACION       VARCHAR(100)   '$.OBSERVACION')

		SELECT @OBSERVACION = COALESCE(@OBSERVACION,'')
		SELECT   @NORECIBOCAJA = NORECIBOCAJA, @IDAFILIADO = IDAFILIADO FROM CIT WHERE  CONSECUTIVO = @CONSECUTIVO
     
		--IF (SELECT CUMPLIDA FROM CIT WHERE  CONSECUTIVO = @CONSECUTIVO) = 2
		--BEGIN
		--   INSERT INTO @TBLERRORES(ERROR) SELECT 'La cita se encuentra con el estado No Asistio.'
		--   SELECT 'KO' OK
		--   SELECT ERROR FROM @TBLERRORES
		--   RETURN
		--END
    
		BEGIN TRY
			UPDATE CIT SET CUMPLIDA = 0, CIT.FACTURABLE = 1    WHERE  CONSECUTIVO = @CONSECUTIVO

			IF (SELECT COUNT(*) FROM CITSE WHERE CONSECUTIVO = @CONSECUTIVO) = 0 
				SET @CONT = 1
			ELSE 
				SELECT @CONT = (SELECT COUNT(1) FROM CITSE WHERE CONSECUTIVO = @CONSECUTIVO) + 1
        
			SELECT @MENSAJE_OBS = 'Cita Quitar No Asistio. - Obs: ' +@OBSERVACION

			INSERT INTO CITSE (CONSECUTIVO, ITEM, USUARIO, SYS_COMPUTERNAME, OBSERVACION, PROCEDENCIA, FECHA, IDAFILIADO, TIPO)
			VALUES (@CONSECUTIVO, @CONT,@USUARIO,@SYS_COMPUTERNAME, @MENSAJE_OBS , 'AGENDA_MED', DBO.FNK_GETDATE() , @IDAFILIADO , 'QUITA_NO_ASISTIO' )

			DELETE FROM CITCI WHERE  CONSECUTIVO  = @CONSECUTIVO
        
		END TRY
		BEGIN CATCH
			INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE()
		END CATCH
		IF(SELECT COUNT(*) FROM @TBLERRORES)>0
		BEGIN
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END

		SELECT 'OK' OK
		RETURN
	END 
	IF @METODO = 'APLICA_DESCUENTO'
	BEGIN
		SELECT @CONSECUTIVO =  CONSECUTIVO,  @TIPODESCUENTO = TIPODESCUENTO, @VALORDESCUENTO = VALORDESCUENTO
		FROM OPENJSON (@PARAMETROS)
		WITH (CONSECUTIVO        VARCHAR(20)    '$.CONSECUTIVO',
				TIPODESCUENTO      BIT   '$.TIPODESCUENTO',
				VALORDESCUENTO     DECIMAL(14,2)   '$.VALORDESCUENTO'
			)

		IF 1 = 2
		BEGIN
			INSERT INTO @TBLERRORES(ERROR) SELECT '1 ES IGUAL A 1'
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END
        
		BEGIN TRY
			IF @TIPODESCUENTO = 0
			BEGIN
			UPDATE CIT SET DESCUENTO = @VALORDESCUENTO, TIPODTO = 'V' WHERE  CONSECUTIVO = @CONSECUTIVO
			END
			IF @TIPODESCUENTO = 1
			BEGIN
			DECLARE @PORCETAJE_CALCULO DECIMAL(14,9)
			SELECT @PORCETAJE_CALCULO = (@VALORDESCUENTO * (SELECT CIT.VALORTOTAL FROM CIT WHERE  CONSECUTIVO = @CONSECUTIVO)) / 100
			UPDATE CIT SET DESCUENTO = @VALORDESCUENTO, TIPODTO = 'P' WHERE  CONSECUTIVO = @CONSECUTIVO
			END
		END TRY
		BEGIN CATCH
			INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE()
		END CATCH
		IF(SELECT COUNT(*) FROM @TBLERRORES)>0
		BEGIN
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END

		SELECT 'OK' OK
		RETURN
	END
	IF @METODO = 'RETIRAR_COPAGO'
	BEGIN
		SELECT @CONSECUTIVO  =  CONSECUTIVO
		FROM OPENJSON (@PARAMETROS)
		WITH (CONSECUTIVO       VARCHAR(20)    '$.CONSECUTIVO') 

		IF (SELECT TIPOCAJA FROM CIT WHERE  CONSECUTIVO = @CONSECUTIVO) <> 'TFCJ'
			INSERT INTO @TBLERRORES(ERROR) SELECT 'El registro diferente a TFCJ'

			BEGIN TRY
			SELECT @NORECIBOCAJA = (SELECT NORECIBOCAJA FROM CIT WHERE  CONSECUTIVO = @CONSECUTIVO)
				UPDATE CIT SET TIPOCAJA =  NULL, NORECIBOCAJA =  NULL, VALORCOPAGO = 0 , GENEROCAJA =0 , COPAGOPROPIO=0  -- SE AGREGA , GENEROCAJA =0 , COPAGOPROPIO=0 EEMC78 REQ: 9614
			WHERE CONSECUTIVO = @CONSECUTIVO
				DELETE FROM TFCJDD WHERE CNSFACJ=@NORECIBOCAJA
			DELETE FROM TFCJD WHERE  CNSFACJ = @NORECIBOCAJA
			DELETE FROM TFCJ WHERE  CNSFACJ = @NORECIBOCAJA

			END TRY
			BEGIN CATCH
			INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE()
			END CATCH
			IF(SELECT COUNT(*) FROM @TBLERRORES)>0
			BEGIN
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
			END
			SELECT 'OK' OK
			RETURN
      
	END
	IF @METODO = 'EDITAR_CITA'  --NOAUTORIZACION FECHAAUTORIZACION
	BEGIN
		SELECT @CONSECUTIVO  =  CONSECUTIVO, @IDSERVICIO = IDSERVICIO, @OBSERVACION =  OBSERVACIONES, @CLASEORDEN = CLASEORDEN, @NOAUTORIZACION = NOAUTORIZACION, @FECHA_AUT = FECHA_AUT, @HORA_AUT = HORA_AUT
				,@ATENCION     = ATENCION, @CCOSTO = CCOSTO ,@IDPESPECIAL = IDPESPECIAL, @MODALIDAD = MODALIDAD, @IDPLAN = IDPLAN , @IDTERCERO = IDTERCERO 
			,@NIVELSOCIOEC = NIVELSOCIOEC ,@UNIDAD_NEGOCIO = UNIDAD_NEGOCIO,  @CNSHACTRAN =COALESCE(CNSHACTRAN,''),  @SIRAS = COALESCE(SIRAS,''), @IDSEDE = IDSEDE 
			,@TIPOCITA = TIPOCITA, @PARTICULAR_TIME = PARTICULAR_TIME	,@PARTICULAR = PARTICULAR, @SERVICIO_2 = SERVICIO_2, @FACTURABLE = FACTURABLE , @NOCOBRAR = NOCOBRAR
			,@COPAGOPROPIO = COPAGOPROPIO, @VALORCOPAGO = TRY_CAST(VALORCOPAGO AS DECIMAL(14,2)), @PREGUNTAPOR = PREGUNTAPOR , @NOMBREACOMPA = NOMBREACOMPA 
			,@TELEFONOACOMPA = TELEFONOACOMPA, @PARENTESCOACOMPA = PARENTESCOACOMPA, @DIRECCIONACOM = DIRECCIONACOMPA, @CANTIDADC = CANTIDADC
		FROM OPENJSON (@PARAMETROS)
		WITH (	CONSECUTIVO			VARCHAR(20)		'$.CONSECUTIVO',
			  	IDSERVICIO			VARCHAR(50)		'$.IDSERVICIO',			OBSERVACIONES		VARCHAR(MAX)	'$.OBSERVACIONES',
			  	CLASEORDEN			VARCHAR(50)		'$.CLASEORDEN',			ATENCION			VARCHAR(50)		'$.ATENCION',
			  	NOAUTORIZACION		VARCHAR(50)		'$.NOAUTORIZACION',		CCOSTO				VARCHAR(50)		'$.CCOSTO',
				FECHA_AUT			VARCHAR(10)		'$.FECHA_AUT',			HORA_AUT			VARCHAR(5)		'$.HORA_AUT',
			  	IDPESPECIAL			VARCHAR(5)		'$.IDPESPECIAL',		MODALIDAD			VARCHAR(10)		'$.MODALIDAD',
			  	IDPLAN				VARCHAR(6)		'$.PLAN',			  	IDTERCERO			VARCHAR(20)		'$.TERCERO',
			  	UNIDAD_NEGOCIO		VARCHAR(10)		'$.UNIDAD_NEGOCIO',		NIVELSOCIOEC		VARCHAR(2)		'$.NIVELSOCIOEC'
			  	,CNSHACTRAN			VARCHAR(20)		'$.CNSHACTRAN',			SIRAS				VARCHAR(20)		'$.SIRAS'
			  	,IDSEDE				VARCHAR(5)		'$.IDSEDE',				TIPOCITA			VARCHAR(20)		'$.TIPOCITA'
			  	,CONSECUTIVO		VARCHAR(20)		'$.CONSECUTIVO',		PARTICULAR_TIME		INT				'$.PARTICULAR_TIME'
			  	,PARTICULAR			BIT				'$.PARTICULAR',			COPAGOPROPIO		BIT				'$.COPAGOPROPIO'
			  	,VALORCOPAGO		VARCHAR(20)		'$.VALORCOPAGO',		SERVICIO_2			NVARCHAR(MAX)   AS JSON
				,FACTURABLE			BIT				'$.FACTURABLE',			NOCOBRAR			BIT				'$.NOCOBRAR'
				,PREGUNTAPOR		INT				'$.PREGUNTAPOR',		CANTIDADC			INT				'$.CANTIDADC'
				,NOMBREACOMPA		VARCHAR(20)		'$.NOMBREACOMPA'
				,DIRECCIONACOMPA	VARCHAR(20)		'$.DIRECCIONACOMPA' 
				,TELEFONOACOMPA		VARCHAR(20)		'$.TELEFONOACOMPA'
				,PARENTESCOACOMPA	VARCHAR(20)		'$.PARENTESCOACOMPA'
			) 
		SELECT * INTO #SERVICIO_ FROM OPENJSON (@SERVICIO_2)
		WITH(
		IDSERVICIO						VARCHAR(20)						'$.value'
		,DESCSERVICIO					VARCHAR(200)					'$.label'
		,DURACIONCITA					INT								'$.DURACIONCITA'
		)
		SELECT @FECHA_AUT= REPLACE(@FECHA_AUT,'-','') 
		SELECT @FECHA_AUTORIZACION = CONVERT(DATETIME,CONCAT(@FECHA_AUT,' ',@HORA_AUT))
		
		SELECT @IDSERVICIO = COALESCE(@IDSERVICIO,(SELECT TOP 1 IDSERVICIO FROM #SERVICIO_))

		SELECT @CANTIDAD_SERVICIO = COALESCE( (SELECT SUM (SER.DURACIONCITA) FROM SER WHERE  IDSERVICIO IN (SELECT IDSERVICIO FROM #SERVICIO_)),0)
		IF @PARTICULAR = 1
		BEGIN
			IF @CANTIDAD_SERVICIO>0
				SELECT @TOTAL_DURACION = 0 + @CANTIDAD_SERVICIO
			IF @CANTIDAD_SERVICIO= 0
				SELECT @TOTAL_DURACION = 0 + @PARTICULAR_TIME
		END
		ELSE
			SELECT @TOTAL_DURACION =  @CANTIDAD_SERVICIO
			
		SELECT @FECHAINCIO = CIT.FECHA, @FECHAFINAL = DATEADD([MINUTE], @TOTAL_DURACION, CIT.FECHA) , @IDMEDICO = IDMEDICO FROM CIT WHERE  CONSECUTIVO = @CONSECUTIVO
      IF EXISTS(SELECT * FROM PLN WHERE IDPLAN=@IDPLAN AND ESTADO<>'Activo') OR 
         EXISTS(SELECT * FROM PPT WHERE IDTERCERO=@IDTERCERO AND IDPLAN=@IDPLAN AND ESTADO<>'Activo')
      BEGIN
			INSERT INTO @TBLERRORES(ERROR)
			SELECT 'El Contrato para Este Afiliado se encuentra Inactivo. Valide los dados del Afiliado'           
      END
		--SELECT @FECHAINCIO = CIT.FECHA, @FECHAFINAL = DATEADD([MINUTE],@PARTICULAR_TIME, CIT.FECHA), @IDMEDICO = IDMEDICO FROM CIT WHERE  CONSECUTIVO = @CONSECUTIVO
	
		IF (SELECT COUNT(1) FROM CIT WHERE IDMEDICO = @IDMEDICO AND CONVERT(DATE,  CIT.FECHA) =CONVERT(DATE, @FECHAINCIO)
			AND CIT.FECHA > CONVERT(DATETIME,@FECHAINCIO) AND CIT.FECHA < CONVERT(DATETIME,@FECHAFINAL) AND CIT.IDAFILIADO IS NOT NULL) > 0
		INSERT INTO @TBLERRORES(ERROR) SELECT 'El tiempo agregado de atencion, tiene conflicto con citas que se encuentran mas adelante'  
		 
		IF DBO.FNK_VALORVARIABLE('SOLOUN_CODAUTORIZA')='SI' AND COALESCE(@NOAUTORIZACION,'')<>''
		BEGIN
			SELECT @NRO=COUNT(*) 
			FROM CIT WHERE COALESCE(NOAUTORIZACION,'')=@NOAUTORIZACION 
			AND COALESCE(NOAUTORIZACION,'')<>''
			AND CONSECUTIVO<>@CONSECUTIVO
			IF @NRO>0
			BEGIN
				INSERT INTO @TBLERRORES(ERROR)
				SELECT 'Ya existe una cita con este nro de Autorización: '+@NOAUTORIZACION
				
			END
		END
		IF EXISTS (SELECT 1 FROM CIT WHERE CONSECUTIVO = @CONSECUTIVO AND COALESCE(FACTURADA,0) = 1 )
		BEGIN
			INSERT INTO @TBLERRORES(ERROR)
			SELECT 'La cita se encuentra Facturada'
		END
		IF (SELECT COUNT(*) FROM @TBLERRORES)> 0
		BEGIN
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			IF DBO.FNK_VALORVARIABLE('SOLOUN_CODAUTORIZA')='SI' AND COALESCE(@NOAUTORIZACION,'')<>''
			BEGIN
				IF EXISTS (SELECT *
				FROM CIT WHERE COALESCE(NOAUTORIZACION,'')=@NOAUTORIZACION 
				AND COALESCE(NOAUTORIZACION,'')<>''
				AND CONSECUTIVO<>@CONSECUTIVO
				)
				BEGIN
					SELECT TOP 1 'AUTO'CASO, CIT.CONSECUTIVO, CIT.FECHA, AFI.NOMBREAFI
					FROM CIT INNER JOIN AFI ON CIT.IDAFILIADO = AFI.IDAFILIADO WHERE COALESCE(NOAUTORIZACION,'')=@NOAUTORIZACION 
					AND COALESCE(NOAUTORIZACION,'')<>'' AND COALESCE(CIT.IDAFILIADO,'')<> ''
					AND CIT.CONSECUTIVO<>@CONSECUTIVO 
				END
			END
			RETURN
		END
		ELSE
		BEGIN

			BEGIN TRY --CCOSTO IDAREA
				IF COALESCE(@UNIDAD_NEGOCIO , '') = ''
				BEGIN
					SELECT @UNIDAD_NEGOCIO = (SELECT TOP 1 CODUNG FROM SEDUNG WHERE IDSEDE = @IDSEDE AND CCOSTO = @CCOSTO AND ESTADO = 'Activo'  )
				END
				
				IF EXISTS (SELECT 1 FROM CIT WHERE CONSECUTIVO=@CONSECUTIVO AND COALESCE(CIT.GENEROCAJA,0)=1 
							AND COALESCE(VALORCOPAGO,0)<>COALESCE(@VALORCOPAGO,0) AND COALESCE(CIT.TIPOCAJA,'TFCJ')<>'FCJ')-- OSOLANO 20240111 REQ CEM
				BEGIN
					SELECT @NORECIBOCAJA=NORECIBOCAJA FROM CIT WHERE CONSECUTIVO=@CONSECUTIVO
					UPDATE CIT SET GENEROCAJA=0, NORECIBOCAJA='', CODCAJA='', TIPOCAJA=NULL 
					
					WHERE CONSECUTIVO=@CONSECUTIVO
					DELETE FROM TFCJDD WHERE CNSFACJ=@NORECIBOCAJA
					DELETE FROM TFCJD WHERE CNSFACJ=@NORECIBOCAJA
					DELETE FROM TFCJ WHERE CNSFACJ=@NORECIBOCAJA
				END	
				UPDATE CIT SET IDSERVICIO = @IDSERVICIO ,IDTERCEROCA = @IDTERCERO ,IDPLAN = @IDPLAN, IDCONTRATANTE = @IDTERCERO
							,OBSERVACIONES  = COALESCE(@OBSERVACION,'') 
							,CLASEORDEN     = CASE WHEN COALESCE(@CLASEORDEN,'')         <> '' THEN @CLASEORDEN           ELSE CLASEORDEN     END
							,ATENCION       = CASE WHEN COALESCE(@ATENCION,'')           <> '' THEN @ATENCION             ELSE ATENCION       END
							,CCOSTO         = CASE WHEN COALESCE(@CCOSTO,'')             <> '' THEN @CCOSTO               ELSE CCOSTO         END
							,NOAUTORIZACION = COALESCE(@NOAUTORIZACION,'') 
							,FECHAAUTORIZACION = @FECHA_AUTORIZACION
							,CANTIDADC		= COALESCE(@CANTIDADC,1) 
							,IDPESPECIAL    = CASE WHEN COALESCE(@IDPESPECIAL,'')        <> '' THEN @IDPESPECIAL          ELSE IDPESPECIAL    END
							,MODALIDAD      = CASE WHEN COALESCE(@MODALIDAD,'')          <> '' THEN @MODALIDAD            ELSE MODALIDAD      END
							,CODUNG         = CASE WHEN COALESCE(@UNIDAD_NEGOCIO,'')     <> '' THEN @UNIDAD_NEGOCIO       ELSE CODUNG         END
							,CNSHACTRAN	  = CASE WHEN COALESCE(@CNSHACTRAN,'')	       <> '' THEN @CNSHACTRAN			ELSE CNSHACTRAN     END
							,IDSEDE		  = CASE WHEN COALESCE(@IDSEDE,'')			   <> '' THEN @IDSEDE			    ELSE IDSEDE     END
							,TIPOCITA		  = CASE WHEN COALESCE(@TIPOCITA,'')			   <> '' THEN @TIPOCITA			    ELSE TIPOCITA     END
							,IDAREA		  = (SELECT TOP 1 IDAREA FROM CEN WHERE CCOSTO = @CCOSTO )
							,EXTRA = COALESCE(@PARTICULAR,0)
							,TIME_EXTRA = COALESCE(@TOTAL_DURACION,0), DURACION = COALESCE(@TOTAL_DURACION,0)
							,TIPOCOPAGO   =COALESCE(TIPOCOPAGO,'C')							
							,COPAGOPROPIO =IIF(COALESCE(CIT.FACTURADA,0)=0 AND COALESCE(CIT.TIPOCAJA,'TFCJ')<>'FCJ',@COPAGOPROPIO,COPAGOPROPIO)
							,VALORCOPAGO  =IIF(COALESCE(CIT.FACTURADA,0)=0 AND COALESCE(CIT.TIPOCAJA,'TFCJ')<>'FCJ',@VALORCOPAGO,VALORCOPAGO)
							,FACTURABLE	= @FACTURABLE, NOCOBRAR = @NOCOBRAR, PREGUNTAPOR = COALESCE(@PREGUNTAPOR,0)
							,NOMBREACOMPA = @NOMBREACOMPA 
							,TELEFONOACOMPA = @TELEFONOACOMPA
							,PARENTESCOACOMPA = @PARENTESCOACOMPA
			WHERE CONSECUTIVO = @CONSECUTIVO

			--SELECT TELEFONOACOM FROM #DATOS
			
			IF ( COALESCE(@IDAFILIADO,'')='' )  	SELECT @IDAFILIADO = IDAFILIADO FROM CIT WHERE CONSECUTIVO = @CONSECUTIVO
			
			SELECT @NOMBREACOM NOMBREACOM, @DIRECCIONACOM DIRECCIONACOM,  @TELEFONOACOM TELEFONOACOM, @PARENTESCOACOM PARENTESCOACOM INTO #DATOS

			UPDATE AFI SET	URG_DIR = CASE WHEN COALESCE((SELECT DIRECCIONACOM FROM #DATOS),'') <> '' THEN  (SELECT DIRECCIONACOM FROM #DATOS) ELSE URG_DIR END
							,URG_NOMBRE = CASE WHEN COALESCE((SELECT NOMBREACOM FROM #DATOS),'') <> '' THEN  (SELECT NOMBREACOM FROM #DATOS) ELSE URG_NOMBRE END  
							,URG_TELE = CASE WHEN COALESCE((SELECT TELEFONOACOM FROM #DATOS),'') <> '' THEN  (SELECT TELEFONOACOM FROM #DATOS) ELSE URG_TELE END     
							,URG_VINCULO = CASE WHEN COALESCE((SELECT PARENTESCOACOM FROM #DATOS),'') <> '' THEN  (SELECT PARENTESCOACOM FROM #DATOS) ELSE URG_VINCULO END   
			FROM AFI WHERE IDAFILIADO = @IDAFILIADO
	

			IF EXISTS (SELECT * FROM HCA WHERE CONSECUTIVOCIT = @CONSECUTIVO)
			BEGIN
				UPDATE HCA SET IDPLAN = @IDPLAN WHERE  CONSECUTIVOCIT = @CONSECUTIVO
			END
			-- PARA EL ACCIDENTE DE TRANSITO					
				
				IF ( COALESCE(@CNSHACTRAN ,'' ) <>'' )
				BEGIN
					IF ( SELECT COUNT(*) FROM HACTRAND WHERE  CNSHACTRAN	=@CNSHACTRAN AND PROCEDENCIA='CI'	AND NOREFERENCIA = @CONSECUTIVO ) >0  -- YA EXISTE EL MISMO CNSHACTRAN PARA ESA CITA SOLO ACTUALIZO EL SIRAS
					BEGIN
							PRINT 'SOLO CAMBIO EL SIRAS '
							UPDATE HACTRAND SET  SIRAS = @SIRAS  WHERE  CNSHACTRAN	=@CNSHACTRAN AND PROCEDENCIA='CI'	AND NOREFERENCIA = @CONSECUTIVO
						END
					ELSE
					BEGIN
					-- YA HAY UN CNSHACTRAN PARA LA CITA PERO NO ES EL MISMO POR LO QUE LO ESTAMOS CAMBIANDO
						IF ( SELECT COUNT(*) FROM HACTRAND WHERE  PROCEDENCIA='CI'	AND NOREFERENCIA = @CONSECUTIVO ) >0  
						BEGIN
							PRINT 'CAMBIO EL CNSHACTRAN Y EL SIRAS'
							UPDATE HACTRAND SET  SIRAS = @SIRAS , CNSHACTRAN	= @CNSHACTRAN   WHERE   PROCEDENCIA='CI'	AND NOREFERENCIA = @CONSECUTIVO
						END
						ELSE
						BEGIN
							PRINT 'AGREGO UN NUEVO DETALLE DE HACTRAND CON EL NUEVO CONSUMO'

							SELECT @ITEM = COUNT(ITEM)+1 FROM HACTRAND WHERE  CNSHACTRAN	=@CNSHACTRAN 
							INSERT INTO HACTRAND ( CNSHACTRAN, ITEM, PROCEDENCIA,  NOREFERENCIA , N_FCT_ASEG, VLRGASTADO, SIRAS	)
								VALUES  ( @CNSHACTRAN ,  @ITEM , 'CI' , @CONSECUTIVO , NULL , @VALORTOTAL  , @SIRAS   )
						END
					END
				END
			ELSE
			BEGIN
				PRINT 'LE QUITO QUE ES CITA SOAT'
				UPDATE CIT SET CNSHACTRAN = NULL WHERE  CONSECUTIVO = @CONSECUTIVO
				DELETE HACTRAND WHERE  CNSHACTRAN = @CNSHACTRAN AND PROCEDENCIA = 'CI' AND  NOREFERENCIA = @CONSECUTIVO 

			END


			IF @CLASEORDEN = 'Normal'
				UPDATE CIT SET IDPESPECIAL =  NULL WHERE  CONSECUTIVO = @CONSECUTIVO

			SELECT @IDAFILIADO = IDAFILIADO FROM CIT WHERE CONSECUTIVO = @CONSECUTIVO

			IF COALESCE(@NIVELSOCIOEC,'') <> ''
			BEGIN
				UPDATE AFI SET NIVELSOCIOEC = @NIVELSOCIOEC WHERE IDAFILIADO = @IDAFILIADO
			END
            
			IF (SELECT COUNT(*) FROM CIT WHERE  CONSECUTIVO = @CONSECUTIVO AND FECHALLEGA IS NOT NULL) > 0
			BEGIN
				--IF (SELECT COUNT(*) FROM CIT WHERE  CIT.VALORCOPAGO >0 AND CIT.GENEROCAJA = 0)    >0
				--BEGIN
					SELECT @VALORCOPAGO = VALORCOPAGO FROM CIT WHERE  CONSECUTIVO =@CONSECUTIVO

						IF (SELECT COUNT(*) FROM CITSE WHERE CONSECUTIVO = @CONSECUTIVO) = 0 
							SET @CONT = 1
						ELSE 
							SELECT @CONT = (SELECT COUNT(1) FROM CITSE WHERE CONSECUTIVO = @CONSECUTIVO) + 1
        
						SELECT @MENSAJE_OBS = 'Edicion. - Obs: Edicion de Cita generada '

						--SELECT @OBSERVACION
						SELECT @IDAFILIADO = (SELECT IDAFILIADO FROM CIT WHERE CONSECUTIVO = @CONSECUTIVO)
						INSERT INTO CITSE (CONSECUTIVO, ITEM, USUARIO, SYS_COMPUTERNAME, OBSERVACION, PROCEDENCIA, FECHA, IDAFILIADO, TIPO)
						VALUES (@CONSECUTIVO, @CONT,@USUARIO,@SYS_COMPUTERNAME, @MENSAJE_OBS, 'AGENDA_MED', DBO.FNK_GETDATE() , @IDAFILIADO , 'EDITA')
        
				--END
			END
			/* SE RETIRA, ELIMINABA TFCJ, DESPUES DE MARCAR LLEGADA Y ENVIAR A TFCJ 20231003  */
			--IF (SELECT COUNT(*) FROM CIT WHERE CIT.GENEROCAJA = 1 AND CONSECUTIVO = @CONSECUTIVO) >0
			--BEGIN
			--	IF DBO.FNK_VALORVARIABLE('GENERA_COPAGO_CITAS')='LLEGA'
			--	BEGIN
			--		DELETE FROM TFCJDD WHERE CNSFACJ = (SELECT NORECIBOCAJA FROM CIT WHERE  CONSECUTIVO = @CONSECUTIVO)
			--		DELETE FROM TFCJD WHERE CNSFACJ = (SELECT NORECIBOCAJA FROM CIT WHERE  CONSECUTIVO = @CONSECUTIVO)
			--		DELETE FROM TFCJ WHERE CNSFACJ = (SELECT NORECIBOCAJA FROM CIT WHERE  CONSECUTIVO = @CONSECUTIVO)
			--	END
			--END

          	SELECT @IDAFILIADO         = IDAFILIADO 
					,@IDAUT              = CONSECUTIVO
					,@NO_ITEM            = 1
					,@IDSERVICIO         = IDSERVICIO
					,@PYP                = 0 --si no tiene dats como clase orden (pyp)
					,@ALTOCOSTO          = CASE WHEN ALTOCOSTO = 'Si' then 1 else 0 end
					,@VALORAUTD          = 0
					,@PROCEDENCIA        = 'CI'
					--,@SYS_COMPUTERNAME   = 
					,@COMPANIA           = '01'
					,@IDSEDE             = IDSEDE
					--,@USUARIO            = 
					,@IDPROVEEDOR        = NULL
					,@IDAREA             = NULL
					,@FECHAAUT           = NULL
					,@COPAGOPROPIO       = COALESCE(COPAGOPROPIO,0) --SI EL CHECK DE COPAGO PROPIO ESTA MARCADO
					,@SOAT               = COALESCE(SOAT,0)
			FROM CIT WHERE  CONSECUTIVO = @CONSECUTIVO
            
			EXEC SPK_COPAGO_AUT_CEHOSP @IDAFILIADO,@IDAUT, @NO_ITEM,@IDSERVICIO  , @PYP, @ALTOCOSTO,@VALORAUTD, @PROCEDENCIA, @SYS_COMPUTERNAME, @COMPANIA, @IDSEDE, @USUARIO  , @IDPROVEEDOR, @IDAREA , @FECHAAUT ,@COPAGOPROPIO  , @SOAT
			UPDATE CIT SET  FACTURABLE = @FACTURABLE, NOCOBRAR = @NOCOBRAR FROM CIT WHERE  CONSECUTIVO = @CONSECUTIVO

			/********/
			IF EXISTS(SELECT * FROM CIT WHERE IDMEDICO = @IDMEDICO AND CONVERT(DATE,  CIT.FECHA) =CONVERT(DATE, @FECHAINCIO)
			AND CIT.FECHA > CONVERT(DATETIME,@FECHAINCIO) AND CIT.FECHA < CONVERT(DATETIME,@FECHAFINAL) AND CIT.IDAFILIADO IS NULL)
			BEGIN
				INSERT INTO CIT_EXTRA (CONSECUTIVO, IDMEDICO, IDEMEDICA, FECHA, TIPOCITA, TIPOSOLICITUD, ATENCION, IDSEDE, DISPONIBILIDAD, CLASEORDEN, WEB,USUGENAGENDA,FGENERACION ,ESPROGRAMAS,MODELOS,MODALIDAD,CONSECUTIVO_RES,USUARIO_RES,FECHA_RES   )
				SELECT CONSECUTIVO, IDMEDICO, IDEMEDICA, FECHA, TIPOCITA, TIPOSOLICITUD, ATENCION, IDSEDE, DISPONIBILIDAD, CLASEORDEN, WEB,USUGENAGENDA,FGENERACION ,ESPROGRAMAS,MODELOS,MODALIDAD, @CONSECUTIVO, @USUARIO, GETDATE()
				FROM CIT WHERE IDMEDICO = @IDMEDICO AND CONVERT(DATE,  CIT.FECHA) =CONVERT(DATE, @FECHAINCIO)
				AND CIT.FECHA > CONVERT(DATETIME,@FECHAINCIO) AND CIT.FECHA < CONVERT(DATETIME,@FECHAFINAL) AND CIT.IDAFILIADO IS NULL

				DELETE FROM CIT WHERE  IDMEDICO = @IDMEDICO AND CONVERT(DATE,  CIT.FECHA) =CONVERT(DATE, @FECHAINCIO)
				AND CIT.FECHA > CONVERT(DATETIME,@FECHAINCIO) AND CIT.FECHA < CONVERT(DATETIME,@FECHAFINAL) AND CIT.IDAFILIADO IS NULL
			END

			DELETE FROM CITSER WHERE CONSECUTIVO_CIT = @CONSECUTIVO
			INSERT INTO CITSER (CONSECUTIVO_CIT, IDSERVICIO,CANTIDAD, FECHA,USUARIO, ESTADO,PROCEDENCIA)
			SELECT @CONSECUTIVO, #SERVICIO_.IDSERVICIO, 1 , DBO.FNK_GETDATE(), @USUARIO, 'Activo', 'AGENDA'
			FROM #SERVICIO_

			IF @MODALIDAD = 'Virtual' AND EXISTS (SELECT  * FROM SED WHERE IDSEDE =  DBO.FNK_VALORVARIABLE('SEDE_VIRTUAL'))
				UPDATE CIT SET IDSEDE =  DBO.FNK_VALORVARIABLE('SEDE_VIRTUAL') WHERE CONSECUTIVO = @CONSECUTIVO

			IF @IDTERCERO =   DBO.FNK_VALORVARIABLE('IDTERCEROPARTICULAR')
			BEGIN
				UPDATE CIT SET VALORCOPAGO = 0  WHERE CONSECUTIVO = @CONSECUTIVO
			END
			/* SE QUITA LA ACTUALIZACION AUTOMATICA POR SEDE, YA QUE EL USUARIO PUEDE EDITR LA SEDE A CRITERIO 20230926 */
			/*IF EXISTS (SELECT * FROM SEDUNG WHERE CODUNG = @UNIDAD_NEGOCIO AND CCOSTO = @CCOSTO AND ESTADO = 'Activo' )
			BEGIN
				UPDATE CIT SET IDSEDE = (SELECT TOP 1 IDSEDE FROM SEDUNG WHERE CODUNG = @UNIDAD_NEGOCIO AND CCOSTO = @CCOSTO AND ESTADO = 'Activo') WHERE CONSECUTIVO = @CONSECUTIVO
			END*/

			END TRY
			BEGIN CATCH
			INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE()
			END CATCH
			IF(SELECT COUNT(*) FROM @TBLERRORES)>0
			BEGIN
				SELECT 'KO' OK
				SELECT ERROR FROM @TBLERRORES
				
				RETURN
			END
				SELECT 'OK' OK
			RETURN
		END
	END

--query 3
--query 3
	IF @METODO = 'ENVIAR_COPAGO'
	BEGIN
		SELECT @CONSECUTIVO =  CONSECUTIVO, @OBSERVACION = OBSERVACION, @NOAUTORIZACION =  NOAUTORIZACION, @VALORCOPAGO = VALORCOPAGO, @HABILITA_COPAGO = HABILITA_COPAGO
		FROM OPENJSON (@PARAMETROS)
		WITH (CONSECUTIVO       VARCHAR(20)    '$.CONSECUTIVO',
				NOAUTORIZACION    VARCHAR(50)    '$.NOAUTORIZACION',
				VALORCOPAGO       DECIMAL(14,2)   '$.VALORCOPAGO',
				HABILITA_COPAGO   BIT            '$.HABILITA_COPAGO',
				OBSERVACION       VARCHAR(100)   '$.OBSERVACION')
   

		SELECT  @VLR_ANTERIOR = VALORCOPAGO FROM CIT WHERE  CONSECUTIVO = @CONSECUTIVO
		IF (SELECT COUNT(1) FROM CIT WHERE  CONSECUTIVO = @CONSECUTIVO AND  CIT.CUMPLIDA <> 1 )= 1 
		BEGIN
			IF (SELECT COUNT(1) FROM CIT WHERE  CONSECUTIVO = @CONSECUTIVO AND CIT.FECHALLEGA IS NULL ) =1 
			BEGIN
			INSERT INTO @TBLERRORES(ERROR) SELECT 'La cita no tiene llegada o no fue atendida.'
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
			END
		END
		IF (SELECT COUNT(1) FROM CIT WHERE  CONSECUTIVO = @CONSECUTIVO AND TIPOCAJA IN ('FCJ','TFCJ') )>0 
		BEGIN
			INSERT INTO @TBLERRORES(ERROR) SELECT 'La cita ya envio Copago.'
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END
		IF (SELECT COUNT(1) FROM CIT WHERE  CONSECUTIVO = @CONSECUTIVO AND GENEROCAJA = 1 )>0 
		BEGIN
			INSERT INTO @TBLERRORES(ERROR) SELECT 'La cita ya envio Copago.'
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END
		IF @HABILITA_COPAGO = 1
		BEGIN
			IF @VALORCOPAGO <> (SELECT VALORCOPAGO FROM CIT WHERE  CONSECUTIVO = @CONSECUTIVO)
			BEGIN
			IF (SELECT COUNT(1) FROM USGRUH WHERE  GRUPO = (SELECT DBO.FNK_DESCIFRAR(USUSU.GRUPO) FROM USUSU WHERE  USUARIO = @USUARIO) AND USGRUH.PERMISO = 1 AND USGRUH.IDPROCEDIMIENTO = 'CONF_CONSULTA_EXTERNA' AND USGRUH.IDCONTROL = 'agrega_copago' ) <> 1
			BEGIN
				INSERT INTO @TBLERRORES(ERROR) SELECT 'Usted no cuenta con permisos, para modificar el Copago.'
				SELECT 'KO' OK
				SELECT ERROR FROM @TBLERRORES
				RETURN
			END
			END
		END
		IF @VALORCOPAGO< 1
		BEGIN
			INSERT INTO @TBLERRORES(ERROR) SELECT 'El monto debe de ser mayor a 0.'
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END
		IF @VALORCOPAGO in (null,  0) 
		BEGIN
			INSERT INTO @TBLERRORES(ERROR) SELECT 'Ingrese un monto'
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END
		BEGIN TRY
			IF @HABILITA_COPAGO = 1
				UPDATE CIT SET VALORCOPAGO = @VALORCOPAGO , NOAUTORIZACION = @NOAUTORIZACION  WHERE  CONSECUTIVO = @CONSECUTIVO

			IF  DBO.FNK_VALORVARIABLE('GENERA_COPAGO_CITAS')='LLEGA'
			BEGIN
				IF EXISTS(SELECT * FROM CIT WHERE CONSECUTIVO=@CONSECUTIVO AND IDPLAN IN(
				SELECT DBO.FNK_VALORVARIABLE('IDPLANPART')
				UNION ALL 
				SELECT DBO.FNK_VALORVARIABLE('IDPLANPART2')
				UNION ALL 
				SELECT DBO.FNK_VALORVARIABLE('IDPLANPART3')
				UNION ALL 
				SELECT DBO.FNK_VALORVARIABLE('IDPLANPART4')
				UNION ALL 
				SELECT DBO.FNK_VALORVARIABLE('IDPLANPART5')
				))
				BEGIN
					SELECT @PART=1
				END
				SET @COMPANIA ='01'
				SELECT @SYS_COMPUTERNAME=COALESCE(SYS_COMPUTERNAME,HOST_NAME())
				FROM USUSU WHERE USUARIO=@USUARIO
				SELECT @SEDE=IDSEDE FROM CIT WHERE CONSECUTIVO=@CONSECUTIVO

				PRINT 'INGRESA A SPK_PAGOSCAJA_CIT'
				EXEC SPK_PAGOSCAJA_CIT @CONSECUTIVO,@SYS_COMPUTERNAME,@COMPANIA,@SEDE,@USUARIO,@PART
			END

			IF (SELECT COUNT(*) FROM CITSE WHERE CONSECUTIVO = @CONSECUTIVO) = 0 
				SET @CONT = 1
			ELSE 
				SELECT @CONT = (SELECT COUNT(1) FROM CITSE WHERE CONSECUTIVO = @CONSECUTIVO) + 1
        
		IF @HABILITA_COPAGO = 1
			BEGIN
			UPDATE CIT SET VALORCOPAGO = @VALORCOPAGO  WHERE  CONSECUTIVO = @CONSECUTIVO
			SELECT @MENSAJE_COPAGO = 'Cambio copago, vlr anterior: $'+ STR(@VLR_ANTERIOR) + ' , vlr nuevo: $'+ STR(@VALORCOPAGO) 
			END
        
		IF @HABILITA_COPAGO = 1
			SELECT @MENSAJE_OBS = 'Envia Copago. - Obs: ' +@OBSERVACION + '- ' + @MENSAJE_COPAGO
		ELSE
			SELECT @MENSAJE_OBS = 'Envia Copago. - Obs: ' +@OBSERVACION

			SELECT @IDAFILIADO = (SELECT IDAFILIADO FROM CIT WHERE CONSECUTIVO = @CONSECUTIVO)
			INSERT INTO CITSE (CONSECUTIVO, ITEM, USUARIO, SYS_COMPUTERNAME, OBSERVACION, PROCEDENCIA, FECHA, IDAFILIADO)
			VALUES (@CONSECUTIVO, @CONT,@USUARIO,@SYS_COMPUTERNAME, @MENSAJE_OBS, 'AGENDA_MED', DBO.FNK_GETDATE() , @IDAFILIADO )
        
		END TRY
		BEGIN CATCH
			INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE()
		END CATCH
		IF(SELECT COUNT(*) FROM @TBLERRORES)>0
		BEGIN
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END

		SELECT 'OK' OK
		RETURN
	END
	IF @METODO = 'CERRAR_VENTANA'
	BEGIN
		SELECT @CONSECUTIVO =  CONSECUTIVO
		FROM OPENJSON (@PARAMETROS)
		WITH (CONSECUTIVO       VARCHAR(20)    '$.CONSECUTIVO')
			UPDATE CIT SET USUARIOENUSO = NULL, ENUSO =  NULL WHERE  CONSECUTIVO =  @CONSECUTIVO
	END
	IF @METODO = 'DATOS_ORDEN_CITA' --SED_NOMBRE CLASEORDEN
	BEGIN
		SELECT @CONSECUTIVO =  CONSECUTIVO
		FROM OPENJSON (@PARAMETROS)
		WITH (CONSECUTIVO       VARCHAR(20)    '$.CONSECUTIVO') --IPS
      
			SELECT 'DATOS'DATOS, CIT.CONSECUTIVO,AFI.TIPO_DOC, AFI.DOCIDAFILIADO, LTRIM(RTRIM(AFI.NOMBREAFI))NOMBREAFI, LTRIM(RTRIM(AFI.DIRECCION))DIRECCION, AFI.SEXO, CIT.NOAUTORIZACION, CIT.MODALIDAD
					, AFI.CELULAR, AFI.TELEFONORES,AFI.EDAD, COALESCE( AFI.IDALTERNA,'')IDALTERNA , CIUAFI.NOMBRE [CIU_NOMBRE], AFI.EMAIL, AFI.IDTIPOAFILIACION,AFI.ESTADO_CIVIL
					,CIUMED.NOMBRE [CIU_NOMBRE_MED]
				, (SELECT FECHA FROM   ( 
				SELECT  ROW_NUMBER() OVER(ORDER BY C.FECHA DESC) AS FILA, C.CONSECUTIVO,C.FECHA FROM CIT C WHERE C.IDAFILIADO = CIT.IDAFILIADO AND C.IDEMEDICA = CIT.IDEMEDICA AND C.CUMPLIDA = 1 AND C.CONSECUTIVO <> CIT.CONSECUTIVO  
				) X WHERE X.FILA = 1 ) CITA_1
				, (SELECT FECHA FROM   ( 
				SELECT  ROW_NUMBER() OVER(ORDER BY C.FECHA DESC) AS FILA, C.CONSECUTIVO, C.FECHA FROM CIT C WHERE C.IDAFILIADO = CIT.IDAFILIADO AND C.IDEMEDICA = CIT.IDEMEDICA AND C.CUMPLIDA = 1 AND C.CONSECUTIVO <> CIT.CONSECUTIVO  
				) X WHERE X.FILA = 2 ) CITA_2
				, (SELECT FECHA FROM   ( 
				SELECT  ROW_NUMBER() OVER(ORDER BY C.FECHA DESC) AS FILA, C.CONSECUTIVO, C.FECHA FROM CIT C WHERE C.IDAFILIADO = CIT.IDAFILIADO AND C.IDEMEDICA = CIT.IDEMEDICA AND C.CUMPLIDA = 1 AND C.CONSECUTIVO <> CIT.CONSECUTIVO  
				) X WHERE X.FILA = 3 ) CITA_3
				, CASE WHEN CIT.CLASEORDEN = 'PyP' THEN 'Clase Orden PyP - ' +COALESCE( UPPER(LEFT(MPE.DESCESPECIAL, 1)) + LOWER(SUBSTRING(MPE.DESCESPECIAL, 2, LEN(MPE.DESCESPECIAL))),'')
				WHEN CIT.CLASEORDEN = 'Modelo' THEN 'Clase Orden Modelo - ' +COALESCE( UPPER(LEFT(MPE.DESCESPECIAL, 1)) + LOWER(SUBSTRING(MPE.DESCESPECIAL, 2, LEN(MPE.DESCESPECIAL))),'')
				WHEN CIT.CLASEORDEN = 'Normal' THEN 'Clase Orden Normal - '
					ELSE 'Clase Orden '+ CIT.CLASEORDEN + ' - ' + COALESCE( UPPER(LEFT(SER.DESCSERVICIO, 1)) + LOWER(SUBSTRING(SER.DESCSERVICIO, 2, LEN(SER.DESCSERVICIO))),'') END [CLASE_ORDEN]
					,CONVERT (DATE ,CIT.FECHA) FECHA, CONVERT (DATETIME ,CIT.FECHA) FECHACOMPLETA, DATEPART(HOUR, CIT.FECHA) HORA
			   		, (case DATEPART(dw,CIT.FECHA) when 2 then 'Lunes' when 3 then 'Martes' when 4 then 'Miércoles' when 5 then 'Jueves' when 6 then 'Viernes' when 7 then 'Sábado' when 1 then 'Domingo' end)+' '+Format(CIT.FECHA,'dd/MM/yyyy hh:mm tt') AS FECHA_HORARIO -- , CONVERT(varchar,CIT.FECHA,120) FECHA_HORARIO --muestra el nombre del dia DEIVER
					,CONVERT(DATE, CIT.FECHASOL)FECHASOL
					, CIT.CUMPLIDA, CIT.TIPOCAJA, CIT.NORECIBOCAJA, CIT.IDAFILIADO, CIT.CONFIRMADA, CIT.OBSERVACIONES, CIT.IDSEDE, SED.DESCRIPCION [SED_NOMBRE], SED.DIRECCION [SED_DIRECCION]
					, SED.TELEFONOS [SED_TELEFONOS],  CIUSED.NOMBRE [SED_CIUDAD], SED.NIT [SED_NIT], SED.DV [SED_DV]
					,TER.IDTERCERO, TER.RAZONSOCIAL, PLN.IDPLAN, PLN.DESCPLAN
					, MED.NOMBRE, MED.IDMEDICO, MES.IDEMEDICA, MES.DESCRIPCION, MED.DIRECCION [MED_DIRECCION], MED.TELEFONOS
					,SER.IDSERVICIO, SER.DESCSERVICIO, @USUARIO USUARIO
				, CONVERT(varchar,  DBO.FNK_GETDATE(), 120) FECHA_ACTUAL
				, 'El/la usuario(a) '+''+RTRIM(LTRIM(dbo.FNK_CAPITALIZAR_TEXTO( NOMBREAFI)))+''+' identificado(a) con '+''+AFI.TIPO_DOC+' '+DOCIDAFILIADO+''+' con EPS: '+ LTRIM(RTRIM(TER.RAZONSOCIAL)) +' asistio a cita de '+''+SER.DESCSERVICIO+''+' asignado(a) a nuestra institucion el dia '+''+
				convert(varchar,FECHA,100)+''+ ' con la especialidad de '+''+LTRIM(RTRIM(MES.DESCRIPCION))+' - '+LTRIM(RTRIM(dbo.FNK_CAPITALIZAR_TEXTO(MED.NOMBRE)))+''+' de forma '+' '+COALESCE(CIT.MODALIDAD,'')+' '+ CASE WHEN CIT.MODALIDAD = 'Virtual' THEN '' ELSE SED.DIRECCION END AS TEXTO
					,Format(CIT.FECHASOL,'dd/MM/yyyy hh:mm tt') AS FECHASOL_HORARIO
				,'Para la verificación y constancia de lo escrito, se pueden comunicar al número telefónico '+SED.TELEFONOS  PIE_PAGINA
				, 'Yo '+ RTRIM(LTRIM(dbo.FNK_CAPITALIZAR_TEXTO( NOMBREAFI))) + ' con EPS: '+ LTRIM(RTRIM(TER.RAZONSOCIAL))+' , confirmo que recibí la prestación efectiva de los servicios médicos de esta institución en la modalidad de ' + SER.DESCSERVICIO + ' por ' + MES.DESCRIPCION +'.' [TEXTO_COMPROBANTE]
				,FIRMA_PACIENTE
				,FIRMA_ACUDIENTE, COALESCE( (SELECT DBO.FNK_VALORVARIABLE('CITA_TIEMPO_ESPERA')),'Señor usuario por favor llegue 30 minutos antes a su cita medica y acerquese al punto de atención.') [CITA_TIEMPO_ESPERA]
				,COALESCE(CIT.NOMBREACOMPA,'') NOMBREACOMPA, COALESCE(CIT.PARENTESCOACOMPA,'') PARENTESCOACOMPA, COALESCE(CIT.TELEFONOACOMPA,'')TELEFONOACOMPA , COALESCE(AFI.URG_DIR ,'')DIRECCIONACOMPA
				, MED_FIRMA.NOMBRE [NOM_FIRMA], ARCHIVOS.DICOM
				FROM CIT 
					INNER JOIN AFI ON CIT.IDAFILIADO =  AFI.IDAFILIADO
					INNER JOIN PLN ON CIT.IDPLAN = PLN.IDPLAN
					INNER JOIN TER ON CIT.IDTERCEROCA = TER.IDTERCERO
					INNER JOIN MED ON CIT.IDMEDICO =  MED.IDMEDICO
					INNER JOIN SER ON CIT.IDSERVICIO = SER.IDSERVICIO
					INNER JOIN MES ON MED.IDEMEDICA = MES.IDEMEDICA
					INNER JOIN SED ON SED.IDSEDE = CIT.IDSEDE
					LEFT JOIN MED MED_FIRMA ON MED_FIRMA.IDMEDICO = DBO.FNK_VALORVARIABLE('FIRMA_CONS_ASIS')
					LEFT JOIN ARCHIVOS ON MED_FIRMA.IDFIRMA = ARCHIVOS.ID
					LEFT JOIN MPE ON CIT.IDPESPECIAL = MPE.IDPESPECIAL
					LEFT JOIN CIU CIUSED ON SED.CIUDAD = CIUSED.CIUDAD
					LEFT JOIN CIU CIUAFI ON AFI.CIUDAD = CIUAFI.CIUDAD
					LEFT JOIN CIU CIUMED ON MED.CIUDAD = CIUMED.CIUDAD
				WHERE  CIT.CONSECUTIVO = @CONSECUTIVO
          
	END
	IF @METODO = 'DATO_IMPRIMIR_FACTURA' 
	BEGIN
		SELECT @CONSECUTIVO =  CONSECUTIVO
		FROM OPENJSON (@PARAMETROS)
		WITH (CONSECUTIVO       VARCHAR(20)    '$.CONSECUTIVO')
			SELECT @N_FACTURA = N_FACTURA FROM CIT WHERE  CONSECUTIVO = @CONSECUTIVO
			SELECT 'OK'OK, CIT.FACTURABLE, CIT.FACTURADA,  CIT.CONSECUTIVO,AFI.TIPO_DOC, AFI.DOCIDAFILIADO, AFI.NOMBREAFI, AFI.DIRECCION, AFI.SEXO, CIT.NOAUTORIZACION
					, AFI.CELULAR, AFI.TELEFONORES,AFI.EDAD, COALESCE( AFI.IDALTERNA,'')IDALTERNA , CIUAFI.NOMBRE [CIU_NOMBRE], AFI.EMAIL, AFI.IDTIPOAFILIACION,AFI.ESTADO_CIVIL
					,CIUMED.NOMBRE [CIU_NOMBRE_MED], NIVELSOCIOEC, CIT.NUMCARNET, AFI.TIPOAFILIADO
				, CASE   WHEN AFI.TIPOAFILIADO = 'C' THEN 'Cotizante'
						WHEN AFI.TIPOAFILIADO = 'B' THEN 'Beneficiario'
						WHEN AFI.TIPOAFILIADO = 'J' THEN 'Jubilado'
						WHEN AFI.TIPOAFILIADO = 'A' THEN 'Adicional'
						WHEN AFI.TIPOAFILIADO = 'S' THEN 'Sustitución Pensional'
						WHEN AFI.TIPOAFILIADO = 'Sb' THEN 'Subsidiado'
						WHEN AFI.TIPOAFILIADO = 'SR' THEN 'Sin régimen'
						WHEN AFI.TIPOAFILIADO = 'TA' THEN 'Tomador/Amparado'
						WHEN AFI.TIPOAFILIADO = 'RE' THEN 'Régimen Especiales o de Excepción'
						WHEN AFI.TIPOAFILIADO = 'SN' THEN 'S/N'
						WHEN AFI.TIPOAFILIADO = 'S/' THEN 'S/N'
						WHEN AFI.TIPOAFILIADO = 'S/N' THEN 'S/N' ELSE '' END [TIPOAFI_NOMBRE]
					,CONVERT (DATE ,CIT.FECHA) FECHA, CONVERT(varchar,CIT.FECHA,104) FECHAFORMATO, CONVERT (DATETIME ,CIT.FECHA) FECHACOMPLETA, DATEPART(HOUR, CIT.FECHA) HORA
			   		, Format(CIT.FECHA,'dd/MM/yyyy hh:mm tt') AS FECHA_HORARIO
					,CONVERT(DATE, CIT.FECHASOL)FECHASOL
					, CIT.CUMPLIDA, CIT.TIPOCAJA, CIT.NORECIBOCAJA, CIT.IDAFILIADO, CIT.CONFIRMADA, CIT.OBSERVACIONES, CIT.IDSEDE, SED.DESCRIPCION [SED_NOMBRE], SED.DIRECCION [SED_DIRECCION]
					, SED.TELEFONOS [SED_TELEFONOS],  CIUSED.NOMBRE [SED_CIUDAD], SED.NIT [SED_NIT], SED.DV [SED_DV]
					,TER.IDTERCERO, TER.RAZONSOCIAL, PLN.IDPLAN, PLN.DESCPLAN,PLN.TIPOSISTEMA, CONVERT(varchar,CIT.FECHASOL,104) FECHASOLFORMATO, CONVERT(varchar,CIT.FECHAATENCION,104) FECHAATENCIONFORMATO
					, MED.NOMBRE, MED.IDMEDICO, MES.IDEMEDICA, MES.DESCRIPCION, MED.DIRECCION [MED_DIRECCION], MED.TELEFONOS
					,SER.IDSERVICIO, SER.DESCSERVICIO, @USUARIO USUARIO
				, CONVERT(varchar,  DBO.FNK_GETDATE(), 120) FECHA_ACTUAL, Format(CIT.FECHASOL,'dd/MM/yyyy hh:mm tt') AS FECHASOL_HORARIO
				,  CONVERT(varchar,FTR.FECHAFAC,104) FECHAFACTURA ,FTR.N_FACTURA, FTR.FECHAFAC,FTR.USUARIOFACTURA,FTR.ESTADO, dbo.FNK_MontoEscrito(FTR.VR_TOTAL) [MONTO_TEXTO], FTR.VR_TOTAL, CONVERT(VARCHAR, CONVERT(VARCHAR, CAST(FTR.VR_TOTAL  AS MONEY), 1)) [VR_TOTAL_FORMATO]
				,TER.NIT,TER.IDALTERNA2,CIU.NOMBRE [CIUNOMBRE], TER.DV,FTR.VALORCOPAGO [RECUPERACION],FTR.DESCUENTO,PPT.IDCONTRATO
				, CONCAT   (floor(cast(datediff(day, FNACIMIENTO, getdate()) as float)/365),' años ', floor((cast(datediff(day, FNACIMIENTO, getdate()) as float)/365-(floor(cast(datediff(day, FNACIMIENTO, getdate()) as float)/365)))*12), ' meses ', floor((((cast(datediff(day, FNACIMIENTO, getdate()) as float)/365-(floor(cast(datediff(day, FNACIMIENTO, getdate()) as float)/365)))*12)-floor((cast(datediff(day, FNACIMIENTO, getdate()) as float)/365-(floor(cast(datediff(day, FNACIMIENTO, getdate()) as float)/365)))*12))*(365/12)), ' dias' ) AS EDAD_LARGO

				FROM CIT 
				INNER JOIN FTR ON CIT.N_FACTURA = FTR.N_FACTURA
					INNER JOIN AFI ON CIT.IDAFILIADO =  AFI.IDAFILIADO
					INNER JOIN PLN ON CIT.IDPLAN = PLN.IDPLAN
					INNER JOIN TER ON CIT.IDTERCEROCA = TER.IDTERCERO
					INNER JOIN MED ON CIT.IDMEDICO =  MED.IDMEDICO
					INNER JOIN SER ON CIT.IDSERVICIO = SER.IDSERVICIO
					INNER JOIN MES ON MED.IDEMEDICA = MES.IDEMEDICA
					INNER JOIN SED ON SED.IDSEDE = CIT.IDSEDE
				LEFT JOIN CIU ON TER.CIUDAD = CIU.CIUDAD
				LEFT JOIN PPT ON FTR.IDTERCERO = PPT.IDTERCERO AND FTR.IDPLAN = PPT.IDPLAN
					LEFT JOIN CIU CIUSED ON SED.CIUDAD = CIUSED.CIUDAD
					LEFT JOIN CIU CIUAFI ON AFI.CIUDAD = CIUAFI.CIUDAD
					LEFT JOIN CIU CIUMED ON MED.CIUDAD = CIUMED.CIUDAD
				WHERE  CIT.CONSECUTIVO = @CONSECUTIVO

			SELECT FTRD.CNSFTR, FTRD.PREFIJO,PRE.NOM_PREFIJO, FTRD.IDPROVEEDOR, FTRD.N_CUOTA, FTRD.DB_CR, FTRD.AREAPRESTACION, FTRD.VR_TOTAL, FTRD.CCOSTO
				, FTRD.ANEXO, FTRD.REFERENCIA, FTRD.CANTIDAD, FTRD.VALOR, FTRD.VLR_SERVICI, FTRD.NOADMISION, FTRD.NOPRESTACION, FTRD.N_FACTURA , 0 ADMINISTRATIVO, 0 RECUPERACION
			FROM FTRD 
			LEFT JOIN PRE ON FTRD.PREFIJO = PRE.PREFIJO
			WHERE  N_FACTURA = @N_FACTURA 

			SELECT SUM (VLR_SERVICI) VLR_SERVICI, SUM (VALOR) VALOR  FROM FTRD WHERE   N_FACTURA = @N_FACTURA 

	END
	IF @METODO = 'DATOS_EXCEL'
	BEGIN
		SELECT @FECHAINI = FECHAINI, @FECHAFIN = FECHAFIN, @IDESPECIALIDAD = IDESPECIALIDAD, @IDMEDICO = IDMEDICO 
		FROM OPENJSON(@PARAMETROS)WITH(
		FECHAINI          DATE '$.FECHAINI', 
		FECHAFIN          DATE '$.FECHAFIN', 
		IDESPECIALIDAD    VARCHAR(20) '$.IDESPECIALIDAD', 
		IDMEDICO          VARCHAR(20) '$.IDMEDICO')

		SELECT  --Se cambio el Select a pedido del Sr. Sander 2023-02-07 (select brindado por el) CLASEORDEN  TIPOCITA FECHASOL
				CIT.CONSECUTIVO, CASE WHEN COALESCE(CIT.PROCEDENCIA,'')='' THEN 'CITAS' ELSE CIT.PROCEDENCIA END Procedencia, 
				CASE WHEN CASE WHEN COALESCE(CIT.PROCEDENCIA,'')='' THEN 'CITAS' ELSE CIT.PROCEDENCIA END <> 'CITAS' THEN MED.NOMBRE ELSE ASIG.NOMBRE END AS USU_CREA, 
				/*CONVERT(VARCHAR(MAX), CIT.FECHA, 103) AS FECHA_ASIGNA, CONVERT(CHAR(5), CIT.FECHA, 108) AS HORA_ASIGNA,*/ CONVERT(VARCHAR,CIT.FECHASOL,20) [FECHA Y HORA SOLICITADO], CONVERT(VARCHAR,CIT.FECHA,20) [FECHA Y HORA CITA], 
				AFI.TIPO_DOC, AFI.DOCIDAFILIADO, AFI.NOMBREAFI, CONVERT(VARCHAR(MAX), AFI.FNACIMIENTO, 103) AS FNACIMIENTO, DBO.FNK_EDAD_ARS (AFI.FNACIMIENTO, CIT.FECHA, 'A') AS EDAD,
				AFI.ESTADO_CIVIL, REPLACE(REPLACE(LOWER(AFI.EMAIL),CHAR(13) + CHAR(10), ' '),CHAR(9), ' ')  AS EMAL, CONVERT(VARCHAR,CIT.FECHAATENCION,20) [FECHA Y HORA ATENCION],
				CASE WHEN  CIT.CUMPLIDA = 1                                                         THEN 'Asistio'
					WHEN  CIT.CUMPLIDA = 0 AND CIT.FECHALLEGA IS NULL AND CIT.FECHA >= GETDATE()   THEN 'Pendiente'
					WHEN (CIT.CUMPLIDA IN(0,2) OR CIT.CUMPLIDA IS NULL) AND CIT.FECHALLEGA IS NULL THEN 'No Asistio'
					WHEN  CIT.CUMPLIDA = 0 AND CIT.FECHALLEGA <> '' and CIT.FECHALLEGA IS NOT NULL THEN 'No Cumplida' END ESTADO,
			AFI.CELULAR, REPLACE(REPLACE(AFI.TELEFONORES,CHAR(13) + CHAR(10), ' '),CHAR(9), ' ')TELEFONORES , TER.RAZONSOCIAL, 
			CASE WHEN AFI.TIPOAFILIADO IN ('B', 'C', 'J') THEN 'Contributivo' 
					WHEN AFI.TIPOAFILIADO IN ('Sb', 'S') THEN 'Subsidiado'  
					WHEN AFI.TIPOAFILIADO IN ('RE') THEN 'Régimen Especiales o de Excepción' 
					ELSE 'Sin régimen'
			END REGIMEN, REPLACE(NIVELSO.DESCRIPCION,'CATEGORIA ','') AS CATEGORIA, CIT.VALORCOPAGO,MED.IDMEDICO, MED.NOMBRE AS PROFESIONAL, MES.IDEMEDICA, MES.DESCRIPCION AS ESPECIALIDAD, SER.DESCSERVICIO AS SERVICIO,
			REPLACE(REPLACE(UPPER(CIT.OBSERVACIONES),CHAR(13) + CHAR(10), ' '),CHAR(9), ' ')  AS OBS_AGENDA, 
			CASE WHEN CIT.CONFIRMADA = 1 THEN 'Cita Conf.' ELSE 'Cita NO Conf' end CITA_CONFIRMADA,CIT.USUARIOLLEGA,LLEGA.NOMBRE,
			UPPER(CASE WHEN CIT.CONFIRMADA = 1 THEN REPLACE(CONFIRMA.OBS_CONFIRMA,'Cita Conf. - ','') ELSE '' end) AS OBS_CONFIRMA, 
			CEN.DESCRIPCION AS CCOSTO, CIT.TIPOSOLICITUD,  CIT.MODALIDAD AS TIPOATENCION  , CIT.TIPOCITA ,CIT.CLASEORDEN ,MPE.DESCESPECIAL
			, CASE WHEN CIT.CONFIRMADA = 1 AND CIT.FECHALLEGA IS NULL THEN 'CITA CONFIRMADA' WHEN CIT.FECHALLEGA IS NOT NULL THEN 'CONFIRMO LLEGADA' ELSE 'SIN REGISTRO' END [ESTADO CITA]
			, HCA.IDDX, MDX.DESCRIPCION [DIAGNOSTICO]
		FROM CIT INNER JOIN AFI        ON CIT.IDAFILIADO = AFI.IDAFILIADO
				LEFT JOIN HCA	ON	CIT.CONSECUTIVO = HCA.CONSECUTIVOCIT
				LEFT JOIN MDX ON HCA.IDDX = MDX.IDDX
				LEFT JOIN USUSU ASIG ON CIT.USUARIO = ASIG.USUARIO
				LEFT JOIN TER        ON COALESCE(CIT.IDTERCEROCA,AFI.IDADMINISTRADORA) = TER.IDTERCERO
				LEFT JOIN TGEN NIVELSO ON NIVELSO.TABLA = 'General' AND NIVELSO.CAMPO = 'NIVELSOCIOECO' AND NIVELSO.CODIGO = AFI.NIVELSOCIOEC
				LEFT JOIN MED        ON MED.IDMEDICO = CIT.IDMEDICO 
				LEFT JOIN MES        ON MES.IDEMEDICA = COALESCE(CIT.IDEMEDICA, MED.IDEMEDICA)
				LEFT JOIN SER        ON SER.IDSERVICIO = CIT.IDSERVICIO
				LEFT JOIN MPE		ON CIT.IDPESPECIAL = MPE.IDPESPECIAL
				LEFT JOIN (SELECT  CITSE.CONSECUTIVO, MAX(ITEM) ITEM, USUARIO AS USU_CONFIRMA, OBSERVACION AS OBS_CONFIRMA , FECHA
							FROM CITSE WHERE CITSE.OBSERVACION LIKE 'Cita Conf. -%'
							GROUP BY CITSE.CONSECUTIVO, USUARIO , OBSERVACION , FECHA) AS  CONFIRMA      ON CIT.CONSECUTIVO = CONFIRMA.CONSECUTIVO 
				LEFT JOIN CEN        ON CIT.CCOSTO = CEN.CCOSTO
            LEFT JOIN USUSU LLEGA ON CIT.USUARIOLLEGA=LLEGA.USUARIO
		WHERE CIT.IDAFILIADO IS NOT NULL 
			AND CONVERT (DATE,CIT.FECHA) >=  CONVERT (DATE,@FECHAINI)
			AND CONVERT (DATE,CIT.FECHA) <=  CONVERT (DATE,@FECHAFIN) 
			AND CIT.IDMEDICO = CASE WHEN @IDMEDICO is NOT null THEN   @IDMEDICO ELSE CIT.IDMEDICO END
			AND CIT.IDEMEDICA = CASE WHEN @IDESPECIALIDAD is NOT null THEN   @IDESPECIALIDAD ELSE CIT.IDEMEDICA END

		UNION ALL

		SELECT 
				CITCI.CONSECUTIVO, 'CANCELADAS' Procedencia, ASIG.NOMBRE AS USU_CREA,/* CONVERT(VARCHAR(MAX), CITCI.FECHA, 103) AS FECHA_ASIGNA, CONVERT(CHAR(5), CITCI.FECHA, 108) AS HORA_ASIGNA, */ CONVERT(VARCHAR,CITCI.FECHASOL,20) [FECHA Y HORA SOLICITADO],CONVERT(VARCHAR,CITCI.FECHA,20) [FECHA Y HORA CITA],
				AFI.TIPO_DOC, AFI.DOCIDAFILIADO, AFI.NOMBREAFI, CONVERT(VARCHAR(MAX), AFI.FNACIMIENTO, 103) AS FNACIMIENTO, DBO.FNK_EDAD_ARS (AFI.FNACIMIENTO, CITCI.FECHA, 'A') AS EDAD,
				AFI.ESTADO_CIVIL, LOWER(AFI.EMAIL) AS EMAL, '' [FECHA Y HORA ATENCION],
				'Cancelada'  ESTADO,
			AFI.CELULAR, AFI.TELEFONORES, TER.RAZONSOCIAL, 
			CASE WHEN AFI.TIPOAFILIADO IN ('B', 'C', 'J') THEN 'Contributivo' 
					WHEN AFI.TIPOAFILIADO IN ('Sb', 'S') THEN 'Subsidiado'  
					WHEN AFI.TIPOAFILIADO IN ('SR', 'SN','S/') THEN 'Sin régimen'
					WHEN AFI.TIPOAFILIADO IN ('RE') THEN 'Régimen Especiales o de Excepción'
					ELSE 'Sin régimen'
			END REGIMEN, NIVELSO.DESCRIPCION AS CATEGORIA, CITCI.VALORCOPAGO,MED.IDMEDICO, MED.NOMBRE AS PROFESIONAL,MES.IDEMEDICA, MES.DESCRIPCION AS ESPECIALIDAD, SER.DESCSERVICIO AS SERVICIO,
			UPPER(CITCI.OBSERVACIONES) AS OBS_AGENDA, 
			'Cita Cancel'AS CITA_CONFIRMADA,'','',
			UPPER( REPLACE(CONFIRMA.OBS_CONFIRMA,'Cancelado - ','')) AS OBS_CONFIRMA, 
			'' AS CCOSTO, CITCI.TIPOSOLICITUD,  '' AS TIPOATENCION , CITCI.TIPOCITA, '' CLASEORDEN ,MPE.DESCESPECIAL    , 'Cancelado' [ESTADO CITA]
			, '' IDDX, '' [DIAGNOSTICO]
		FROM CITCI INNER JOIN AFI        ON CITCI.IDAFILIADO = AFI.IDAFILIADO
				LEFT JOIN USUSU ASIG ON CITCI.USUARIO = ASIG.USUARIO
				LEFT JOIN TER        ON COALESCE(CITCI.IDCONTRATANTE,AFI.IDADMINISTRADORA) = TER.IDTERCERO
				LEFT JOIN TGEN NIVELSO ON NIVELSO.TABLA = 'General' AND NIVELSO.CAMPO = 'NIVELSOCIOECO' AND NIVELSO.CODIGO = AFI.NIVELSOCIOEC
				LEFT JOIN MED        ON MED.IDMEDICO = CITCI.IDMEDICO 
				LEFT JOIN MES        ON MES.IDEMEDICA = COALESCE(MED.IDEMEDICA,'')
				LEFT JOIN SER        ON SER.IDSERVICIO = CITCI.IDSERVICIO
				LEFT JOIN MPE		ON CITCI.IDPESPECIAL = MPE.IDPESPECIAL
				LEFT JOIN (SELECT  CITSE.CONSECUTIVO, MAX(ITEM) ITEM, USUARIO AS USU_CONFIRMA, OBSERVACION AS OBS_CONFIRMA , FECHA, IDAFILIADO
							FROM CITSE WHERE CITSE.OBSERVACION LIKE 'Cancelado - %'
							GROUP BY CITSE.CONSECUTIVO, USUARIO , OBSERVACION , FECHA, IDAFILIADO
							) AS  CONFIRMA      ON CITCI.CONSECUTIVO = CONFIRMA.CONSECUTIVO AND CITCI.IDAFILIADO = CONFIRMA.IDAFILIADO
		WHERE  CONVERT (DATE,CITCI.FECHA) >=  CONVERT (DATE,@FECHAINI)
			AND CONVERT (DATE,CITCI.FECHA) <=  CONVERT (DATE,@FECHAFIN) 
			AND CITCI.IDMEDICO = CASE WHEN @IDMEDICO is NOT null THEN   @IDMEDICO ELSE CITCI.IDMEDICO END

	END
   
	IF @METODO = 'DATOS_EXCEL_ASISTENCIA'
	BEGIN
		SELECT @FECHAINI = FECHAINI, @FECHAFIN = FECHAFIN, @IDESPECIALIDAD = IDESPECIALIDAD, @IDMEDICO = IDMEDICO 
		FROM OPENJSON(@PARAMETROS)WITH(
		FECHAINI          DATE '$.FECHAINI', 
		FECHAFIN          DATE '$.FECHAFIN', 
		IDESPECIALIDAD    VARCHAR(20) '$.IDESPECIALIDAD', 
		IDMEDICO          VARCHAR(20) '$.IDMEDICO')

		SELECT CONVERT(DATE, CIT.FECHA) FECHA, CONVERT(VARCHAR(10), CIT.FECHA, 108) AS [HORA], MED.NOMBRE [MEDICO], MES.DESCRIPCION [ESPECIALIDAD]
		, AFI.TIPO_DOC [TIPO_DOC], AFI.DOCIDAFILIADO [DOCUMENTO], AFI.NOMBREAFI [PACIENTE]
			, TER.RAZONSOCIAL [ASEGURADORA], PLN.IDPLAN [PLAN], DBO.FNK_ESTADO_CITA(CIT.CONSECUTIVO) [ESTADO], USUGENERA.NOMBRE [USUARIO_CREA], USULLEGA.NOMBRE [USUARIO_LLEGADA]
			, MES.IDEMEDICA, MED.IDMEDICO, CIT.CONSECUTIVO
		FROM CIT 
			INNER JOIN AFI ON CIT.IDAFILIADO = AFI.IDAFILIADO
			INNER JOIN MED ON CIT.IDMEDICO =  MED.IDMEDICO 
			INNER JOIN MES ON CIT.IDEMEDICA = MES.IDEMEDICA
			INNER JOIN TER ON CIT.IDTERCEROCA =  TER.IDTERCERO
			INNER JOIN PLN ON CIT.IDPLAN = PLN.IDPLAN
			inner join SER  ON SER.IDSERVICIO=CIT.IDSERVICIO
			inner join sed  on SED.IDSEDE=CIT.IDSEDE
			LEFT JOIN USUSU USUGENERA ON USUGENERA.USUARIO = CIT.USUARIO
			LEFT JOIN USUSU USULLEGA   ON USULLEGA.USUARIO = CIT.USUARIOLLEGA

		WHERE CONVERT (DATE,CIT.FECHA) >=  CONVERT (DATE,@FECHAINI)
		AND CONVERT (DATE,CIT.FECHA) <=  CONVERT (DATE,@FECHAFIN) 
		AND CIT.IDMEDICO = CASE WHEN @IDMEDICO is NOT null THEN   @IDMEDICO ELSE CIT.IDMEDICO END
		AND CIT.IDEMEDICA = CASE WHEN @IDESPECIALIDAD is NOT null THEN   @IDESPECIALIDAD ELSE CIT.IDEMEDICA END

	END
	IF @METODO = 'LISTAR_PROFESIONALES'
	BEGIN
		SELECT 
				@FECHA = FECHA
			,@IDEMEDICA = IDEMEDICA
			,@MODALIDAD = MODALIDAD
			,@IDSEDE = IDSEDE
		FROM OPENJSON(@PARAMETROS)
		WITH(
				FECHA  DATE '$.FECHA'
				,IDEMEDICA VARCHAR(10) '$.IDEMEDICA' 
				,MODALIDAD VARCHAR(10) '$.MODALIDAD' 
				,IDSEDE	VARCHAR(2) '$.IDSEDE'
		)

		SELECT 'OK' OK

		SELECT	 IDMEDICO	,TIPO_USUARIO	,NOMBRE	,IDEMEDICA	,CELULAR
		FROM	MED
		WHERE	IDEMEDICA = COALESCE(@IDEMEDICA, IDEMEDICA)
		AND		ESTADO = 'Activo'
		AND	    IDMEDICO IN (
				SELECT	IDMEDICO 
				FROM	CIT 
				WHERE	CAST(FECHA AS DATE)=CAST(@FECHA AS DATE)  AND COALESCE(CIT.ESPROGRAMAS,0)=0
				AND		(COALESCE(@MODALIDAD,'')='' OR CASE WHEN CIT.MODALIDAD='' THEN 'Presencial' ELSE COALESCE(CIT.MODALIDAD,'Presencial') END = @MODALIDAD)
				AND		(COALESCE(@IDSEDE,'')='' OR  @IDSEDE=CIT.IDSEDE)
		)
		ORDER BY MED.NOMBRE
		RETURN
	END
	IF @METODO = 'LISTAR_SEDES'
	BEGIN
		SELECT 
				@FECHA = FECHA
			,@IDEMEDICA = IDEMEDICA
			,@MODALIDAD = MODALIDAD
			,@IDMEDICO = IDMEDICO
		FROM OPENJSON(@PARAMETROS)
		WITH(
				FECHA  DATE '$.FECHA'
				,IDEMEDICA VARCHAR(10) '$.IDEMEDICA' 
				,MODALIDAD VARCHAR(10) '$.MODALIDAD' 
				,IDMEDICO VARCHAR(20) '$.IDMEDICO' 
		)

		SELECT 'OK' OK

		SELECT IDSEDE, DESCRIPCION 
		FROM SED 
		WHERE IDSEDE IN (
			SELECT DISTINCT IDSEDE FROM CIT 
			WHERE	CAST(FECHA AS DATE)	=	@FECHA
			AND		IDMEDICO			=	@IDMEDICO
			AND		IDEMEDICA			=   @IDEMEDICA
			AND	(
				COALESCE(@MODALIDAD,'')='' 
				OR	CASE WHEN CIT.MODALIDAD='' THEN 'Presencial' 
					ELSE COALESCE(CIT.MODALIDAD,'Presencial') END = @MODALIDAD
				)
		)
	END
	IF @METODO = 'ENLACE_VIDEOLLAMADA'
	BEGIN
		DECLARE @NUMEROS VARCHAR(MAX) = ''
		DECLARE @PROFESIONAL BIT = 0
		DECLARE @TELEFONO VARCHAR(20)
		DECLARE @NUMERO VARCHAR(20)
		DECLARE @NOMBRE_PROFESIONAL VARCHAR(200)
		DECLARE @MENSAJE VARCHAR(MAX)
		DECLARE @SMS VARCHAR(MAX)
		DECLARE @RAZONSOCIAL VARCHAR(MAX)
		DECLARE @NOMBRE_SEDE VARCHAR(200)
		DECLARE @LINK VARCHAR(1000)
		DECLARE @FECHA_STRING VARCHAR(MAX)
		DECLARE @NOMBRE_MED VARCHAR(MAX)
		DECLARE @NOMBRE_SER VARCHAR(MAX)

		SELECT @NOMBRE_PROFESIONAL = COALESCE(MED.NOMBRE, USUSU.NOMBRE)
		FROM USUSU LEFT JOIN MED ON MED.IDMEDICO = USUSU.IDMEDICO

		SELECT @CONSECUTIVO = CONSECUTIVO
			,@PROFESIONAL = PROFESIONAL
			,@TELEFONO = TELEFONO
		FROM OPENJSON(@PARAMETROS)
		WITH(
			CONSECUTIVO		VARCHAR(20) '$.CONSECUTIVO'
			,PROFESIONAL	BIT '$.PROFESIONAL' -- Determina si se envia el enlace al profesional
			,TELEFONO			VARCHAR(20) '$.TELEFONO' -- Si este campo viene lleno el se envia el enlace a este numero
		)

		IF COALESCE(@PROFESIONAL, 0) = 0 --AND COALESCE(@TELEFONO, '') = ''
		BEGIN

			SELECT @IDAFILIADO = CIT.IDAFILIADO, @NOMBREAFI = AFI.NOMBREAFI
				,@DOCIDAFILIADO = TRIM(AFI.DOCIDAFILIADO)
				,@FECHA1 = CIT.FECHA
				,@NOMBRE_MED = dbo.FNK_CAPITALIZAR_TEXTO(TRIM(MED.NOMBRE))
				,@NOMBRE_SER = dbo.FNK_CAPITALIZAR_TEXTO(TRIM(SER.DESCSERVICIO))
			FROM CIT INNER JOIN AFI ON AFI.IDAFILIADO = CIT.IDAFILIADO
			LEFT JOIN MED ON MED.IDMEDICO = CIT.IDMEDICO
			LEFT JOIN SER ON SER.IDSERVICIO = CIT.IDSERVICIO
			WHERE CONSECUTIVO = @CONSECUTIVO

			SELECT @FECHA_STRING = CONCAT(
				''
				,FORMAT(@FECHA1, 'dddd', 'es-ES')
				,' '
				,DAY(@FECHA1)
				,' de '
				,FORMAT(@FECHA1, 'MMMM', 'es-ES') 
				,' de '
				,YEAR(@FECHA1) 
				,' a las '
				,FORMAT(@FECHA1, 'h:mmtt', 'es-ES')
				,' '
				,IIF(DATEPART(HOUR, @FECHA1) < 12,'am', 'pm')
			)

			SELECT @NOMBRE_SEDE = dbo.FNK_CAPITALIZAR_TEXTO(TRIM(DESCRIPCION))
			FROM SED INNER JOIN UBEQ ON UBEQ.IDSEDE = SED.IDSEDE
			INNER JOIN USUSU ON USUSU.SYS_ComputerName = UBEQ.SYS_ComputerName

			SELECT @RAZONSOCIAL = dbo.FNK_CAPITALIZAR_TEXTO(TRIM(RAZONSOCIAL)) 
			FROM TER
			WHERE IDTERCERO	= DBO.FNK_VALORVARIABLE('IDTERCEROINSTALADO')

			SELECT @LINK = 'https://meet.jit.si/' + @DOCIDAFILIADO

			SELECT @MENSAJE = DATO FROM USVGS WHERE IDVARIABLE = 'TMPL_SMS_LINK_CIT'
			SELECT @NOMBREAFI = dbo.FNK_CAPITALIZAR_TEXTO(TRIM(@NOMBREAFI))

			IF CHARINDEX('{{NOMBRE_AFI}}', @MENSAJE)> 0 AND COALESCE(@NOMBREAFI, '')<>''
				SELECT @MENSAJE = REPLACE(@MENSAJE, '{{NOMBRE_AFI}}', @NOMBREAFI)
				
			IF CHARINDEX('{{NOMBRE_IPS}}', @MENSAJE) > 0 AND COALESCE(@RAZONSOCIAL, '')<>''
				SELECT @MENSAJE = REPLACE(@MENSAJE, '{{NOMBRE_IPS}}', @RAZONSOCIAL)

			IF CHARINDEX('{{NOMBRE_SED}}', @MENSAJE) > 0 AND COALESCE(@NOMBRE_SEDE, '')<>''
				SELECT @MENSAJE = REPLACE(@MENSAJE, '{{NOMBRE_SED}}', @NOMBRE_SEDE)

			IF CHARINDEX('{{FECHA_CIT}}', @MENSAJE) > 0 AND COALESCE(@FECHA_STRING, '')<>''
				SELECT @MENSAJE = REPLACE(@MENSAJE, '{{FECHA_CIT}}', @FECHA_STRING)

			IF CHARINDEX('{{NOMBRE_MED}}', @MENSAJE) > 0 AND COALESCE(@NOMBRE_MED, '')<>''
				SELECT @MENSAJE = REPLACE(@MENSAJE, '{{NOMBRE_MED}}', @NOMBRE_MED)

			IF CHARINDEX('{{NOMBRE_SER}}', @MENSAJE) > 0 AND COALESCE(@NOMBRE_SER, '')<>''
				SELECT @MENSAJE = REPLACE(@MENSAJE, '{{NOMBRE_SER}}', @NOMBRE_SER)

			SELECT @MENSAJE = @MENSAJE +'\n\n'+ @LINK

			DECLARE @COUNT INT = 0
			DECLARE _CURSOR CURSOR FOR 
				SELECT X.NUMERO 
				FROM (SELECT @TELEFONO AS NUMERO UNION ALL
					  SELECT NUMERO FROM FNK_TELEFONOS_SMS(@IDAFILIADO) WHERE COALESCE(@TELEFONO,'')=''
					) X
				WHERE LEFT(X.NUMERO,1) IN ('3','9')

			OPEN _CURSOR  
			FETCH NEXT FROM _CURSOR INTO @NUMERO  
			  
			WHILE @@FETCH_STATUS = 0  
			BEGIN
				SET @COUNT += 1
				
				SET @NUMEROS += @NUMERO + IIF(@COUNT>1, ', ', '')
				
				EXEC SPK_SEND_WHATSAPP @NUMERO = @NUMERO, @MENSAJE = @MENSAJE, @LINK = @LINK
				EXEC DBO.SPK_SENDSMS @NUMERO, @MENSAJE, 'POST', @COPIA_WHATSAPP = 0

				FETCH NEXT FROM _CURSOR INTO @NUMERO
			END  
			  
			CLOSE _CURSOR  
			DEALLOCATE _CURSOR

			--IF LEN(@NUMEROS)>3 SET @NUMEROS = SUBSTRING(@NUMEROS, 0, LEN(@NUMEROS)-2)
			
			SELECT 'OK' AS OK, @NUMEROS AS NUMEROS_NOTIFICADOS
			RETURN
		END
	END
	IF @METODO = 'ADD_MEDICO_REMITENTE'
	BEGIN
		SELECT @CODIGO =  CODIGO,  @DESCRIPCION =  DESCRIPCION, @ESPECIALIDAD = ESPECIALIDAD
		FROM OPENJSON (@PARAMETROS)
		WITH (CODIGO       VARCHAR(20)    '$.CODIGO',
			DESCRIPCION       VARCHAR(100)    '$.DESCRIPCION',
				ESPECIALIDAD       VARCHAR(10)   '$.ESPECIALIDAD')

		IF 1 = 2
		BEGIN
			INSERT INTO @TBLERRORES(ERROR) SELECT 'Aun no tiene calculo.'
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END
		BEGIN TRY

		INSERT INTO TGEN (TABLA, CAMPO, CODIGO, DESCRIPCION,  DATO1)
			SELECT 'CITAS', 'MEDICOREMITE',@CODIGO, @DESCRIPCION, @ESPECIALIDAD 

		END TRY
		BEGIN CATCH
			INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE()
		END CATCH
		IF(SELECT COUNT(*) FROM @TBLERRORES)>0
		BEGIN
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END

		SELECT 'OK' OK
		RETURN
	END
	IF @METODO = 'ADD_TERCERO_REMITENTE'
	BEGIN
		SELECT @NIT =  NIT,  @DV =  DV, @RAZONSOCIAL = RAZONSOCIAL, @CIUDAD = CIUDAD, @TELEFONO = TELEFONO, @DIRECCION = DIRECCION
		FROM OPENJSON (@PARAMETROS)
		WITH (NIT            VARCHAR(20)    '$.NIT',
			DV             VARCHAR(10)    '$.DV',
				RAZONSOCIAL    VARCHAR(200)   '$.RAZONSOCIAL',
				CIUDAD         VARCHAR(20)   '$.CIUDAD',
				TELEFONO       VARCHAR(20)   '$.TELEFONO',
			DIRECCION      VARCHAR(200)   '$.DIRECCION')


		IF 1 = 2
		BEGIN
			INSERT INTO @TBLERRORES(ERROR) SELECT 'Aun no tiene calculo.'
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END
		BEGIN TRY

			SELECT @IDTERCERO = NULL 
			EXEC SPK_GENCONSECUTIVO '01', @SEDE, '@TER', @IDTERCERO OUTPUT  
			SELECT @IDTERCERO = @SEDE + REPLACE(SPACE(8 - LEN(@IDTERCERO))+LTRIM(RTRIM(@IDTERCERO)),SPACE(1),0)

			INSERT INTO TER (
			IDTERCERO, RAZONSOCIAL, NIT, DV, TIPO_ID, 
			CIUDAD, DIRECCION, TELEFONOS, NIT_R, ESTADO,  
			ENVIODICAJA, MODOCOPAGO, DIASVTO, ESEXTRANJERO, NATJURIDICA,
			TIPOREGIMEN, EMAIL, IDACTIVIDAD, COD_RESP_FISCAL, FORMAPRE, F_INSCRIPTO
			)  
			SELECT @IDTERCERO, @RAZONSOCIAL, @NIT, @DV, 'NIT',
			@CIUDAD, @DIRECCION, @TELEFONO, NULL, 'Activo', 
			NULL, 'Normal', 0, 0, 'Juridica',
			'C', NULL, '8699', 'O-47','N', '18010101'
     
		INSERT INTO TEXCA (IDTERCERO, IDCATEGORIA, ESTADO)
		SELECT @IDTERCERO, 'IPS' , 'Activo'

		END TRY
		BEGIN CATCH
			INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE()
		END CATCH
		IF(SELECT COUNT(*) FROM @TBLERRORES)>0
		BEGIN
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END

		SELECT 'OK' OK
		RETURN
	END
	IF @METODO = 'CREA_AGENDA'
	BEGIN
		SELECT @IDEMEDICA=IDEMEDICA ,@IDMEDICO=IDMEDICO ,@FECHA=FECHA ,@HORA=HORA ,@MODALIDAD=MODALIDAD , @IDSEDE = IDSEDE, @TIPOCITA = TIPOCITA
		FROM OPENJSON(@PARAMETROS)
			WITH( IDEMEDICA			VARCHAR(20)		'$.IDEMEDICA',
				IDMEDICO			VARCHAR(20)		'$.IDMEDICO', 
				FECHA			VARCHAR(10)		'$.FECHA',
				HORA			VARCHAR(10)		'$.HORA',
				MODALIDAD			VARCHAR(20)		'$.MODALIDAD',
				IDSEDE			VARCHAR(20)		'$.IDSEDE',
				TIPOCITA			VARCHAR(20)		'$.TIPOCITA'
			)
		SELECT @FECHA = REPLACE(@FECHA,'-','' )
		SELECT @HORA = CONVERT(VARCHAR(10), @HORA)      

		IF EXISTS(SELECT * FROM CIT WHERE   IDMEDICO = @IDMEDICO AND  CONVERT(DATETIME,CIT.FECHA)  = CONCAT(@FECHA, ' ',@HORA ) )
		BEGIN
			PRINT 'Ya cuenta con una agenda para este dia y hora.'  
			INSERT INTO @TBLERRORES(ERROR)
			SELECT 'Ya cuenta con una agenda para este dia y hora.'            
		END
		IF (SELECT COUNT(*) FROM @TBLERRORES)> 0
		BEGIN
			SELECT 'KO' OK
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END
		ELSE
		BEGIN
			BEGIN TRY
			SELECT @CONSECUTIVO = NULL
			EXEC SPK_GENCONSECUTIVO '01',@IDSEDE,'@CIT', @CONSECUTIVO OUTPUT  
			SELECT @CONSECUTIVO = @IDSEDE + REPLACE(SPACE(10 - LEN(@CONSECUTIVO))+LTRIM(RTRIM(@CONSECUTIVO)),SPACE(1),0)    

			INSERT INTO CIT(CONSECUTIVO, NOCITA, IDMEDICO, IDEMEDICA, FECHA, TIPOCITA, TIPOSOLICITUD, ATENCION, IDSEDE, DISPONIBILIDAD, CLASEORDEN, WEB,USUGENAGENDA,FGENERACION ,ESPROGRAMAS,MODELOS,MODALIDAD,CLASECONTRATO)
			SELECT @CONSECUTIVO, 'CIT_MANUAL', @IDMEDICO, @IDEMEDICA,  CONCAT(@FECHA, ' ',@HORA ), @TIPOCITA, 'Otra', 'Otras',@IDSEDE , 'Cita', 'Normal', 0, '', DBO.FNK_GETDATE(), NULL, '', @MODALIDAD,'E'

			END TRY  
			BEGIN CATCH 
				INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE() ;  
			END CATCH  
			IF (SELECT COUNT(*) FROM @TBLERRORES)> 0
			BEGIN
				SELECT 'KO' OK
				SELECT ERROR FROM @TBLERRORES
				RETURN
			END
			SELECT 'OK'OK
		END 
	END

	IF @METODO = 'CITAS_CONTROL_DISPONIBLES'
	BEGIN
		SELECT @IDMEDICO = JSON_VALUE(@PARAMETROS, '$.IDMEDICO')
			,@FECHA1 = JSON_VALUE(@PARAMETROS, '$.FECHA')
			,@CONSECUTIVOHCA = JSON_VALUE(@PARAMETROS, '$.CONSECUTIVOHCA')

		IF @CONSECUTIVOHCA IS NOT NULL
		BEGIN
			SELECT 
				@FECHA1 = FECHA
				-- ,@IDMEDICO = IDMEDICO
			FROM HCA
			WHERE CONSECUTIVO = @CONSECUTIVOHCA
		END

		IF @FECHA1 IS NULL
			SELECT @FECHA1 = GETDATE()

		IF @IDMEDICO IS NULL
		BEGIN
			SELECT @IDMEDICO = IDMEDICO
			FROM USUSU
			WHERE USUARIO = @USUARIO
		END

		IF @IDMEDICO IS NULL
		BEGIN

			SELECT OK = 'KO'
			SELECT ERROR = 'Debe enviar el ID del medico'
        
		END

		SELECT OK = 'OK'

		SELECT FECHA
			,TOTAL_AM = TOTAL_AM - TOTAL_AM_AGENDADOS
			,TOTAL_PM = TOTAL_PM - TOTAL_PM_AGENDADOS
			,PORCENTAJE_DISPONIBLES = (CAST(TOTAL_CITAS AS FLOAT) - TOTAL_AGENDADOS) / CAST(TOTAL_CITAS AS FLOAT) * 100
			,TOTAL_AGENDADOS
			,TOTAL_AM_AGENDADOS
			,TOTAL_PM_AGENDADOS
		FROM (
			SELECT 
				CAST([dbo].[CIT].[FECHA] AS DATE) AS FECHA,
				TOTAL_CITAS = COUNT(*)
				,TOTAL_AM = SUM(CASE WHEN DATEPART(HOUR, [dbo].[CIT].[FECHA]) BETWEEN 0 AND 12 THEN 1 ELSE 0 END)
				,TOTAL_PM = SUM(CASE WHEN DATEPART(HOUR, [dbo].[CIT].[FECHA]) BETWEEN 13 AND 23 THEN 1 ELSE 0 END)
				,TOTAL_AGENDADOS = (
					SELECT COUNT(1) FROM [dbo].[CIT] C
					WHERE CAST(C.FECHA AS DATE) = CAST(CIT.FECHA AS DATE) 
					AND C.IDMEDICO=@IDMEDICO 
					AND LEFT(C.TIPOCITA,3) IN ('Con', 'Cit', 'Mod')
					AND COALESCE(C.IDAFILIADO, '') <> ''
					AND NOT EXISTS( -- Fechas bloqueadas
						SELECT 1 
						FROM MAGPRP 
						WHERE MAGPRP.IDMEDICO = C.IDMEDICO 
						AND C.FECHA BETWEEN MAGPRP.FECHAINICIAL AND MAGPRP.FECHAFINAL 
					)
				)
				,TOTAL_AM_AGENDADOS = (
					SELECT COUNT(1) FROM [dbo].[CIT] C
					WHERE CAST(C.FECHA AS DATE) = CAST(CIT.FECHA AS DATE) 
					AND C.IDMEDICO=@IDMEDICO 
					AND LEFT(C.TIPOCITA,3) IN ('Con', 'Cit', 'Mod')
					AND COALESCE(C.IDAFILIADO, '') <> ''
					AND DATEPART(HOUR, C.FECHA) BETWEEN 0 AND 12
					AND NOT EXISTS( -- Fechas bloqueadas
						SELECT 1 
						FROM MAGPRP 
						WHERE MAGPRP.IDMEDICO = C.IDMEDICO 
						AND C.FECHA BETWEEN MAGPRP.FECHAINICIAL AND MAGPRP.FECHAFINAL 
					)
				)
				,TOTAL_PM_AGENDADOS = (
					SELECT COUNT(1) FROM [dbo].[CIT] C
					WHERE CAST(C.FECHA AS DATE) = CAST(CIT.FECHA AS DATE) 
					AND C.IDMEDICO=@IDMEDICO 
					AND LEFT(C.TIPOCITA,3) IN ('Con', 'Cit', 'Mod')
					AND COALESCE(C.IDAFILIADO, '') <> ''
					AND DATEPART(HOUR, C.FECHA) BETWEEN 13 AND 23
					AND NOT EXISTS( -- Fechas bloqueadas
						SELECT 1 
						FROM MAGPRP 
						WHERE MAGPRP.IDMEDICO = C.IDMEDICO 
						AND C.FECHA BETWEEN MAGPRP.FECHAINICIAL AND MAGPRP.FECHAFINAL 
					)
				)
			FROM [dbo].[CIT]
			WHERE IDMEDICO=@IDMEDICO
			AND LEFT(CIT.TIPOCITA,3) IN ('Con', 'Cit', 'Mod')
			--AND TIPOCITA IN ('Control', 'Cita', 'Cit')
			AND CAST(FECHA AS DATE) > CAST(@FECHA1 AS DATE)
			AND CIT.CONSECUTIVO NOT IN ( -- CITAS BLOQUEADAS
				SELECT C.CONSECUTIVO
				FROM CIT C 
				INNER JOIN MAGPRP ON C.IDMEDICO = MAGPRP.IDMEDICO 
					AND C.FECHA>=MAGPRP.FECHAINICIAL 
					AND C.FECHA<MAGPRP.FECHAFINAL 
				WHERE  C.IDMEDICO = CIT.IDMEDICO
			)
			--AND COALESCE(IDAFILIADO, '') = ''
			GROUP BY CAST([dbo].[CIT].[FECHA] AS DATE)
		) AS #T
	END
	IF @METODO = 'CONSULTA_SERVICIO_1'
	BEGIN
		SELECT @IDAREA = IDAREA  , @IDPLAN = IDPLAN, @IDTERCERO = IDTERCERO, @CLASEORDEN = CLASEORDEN, @IDEMEDICA = IDEMEDICA, @TIPOCITA = TIPOCITA
			,@CCONTRATANTE = CCONTRATANTE, @IDADMINISTRADORA_CONTRA = IDADMINISTRADORA_CONTRA ,@IDPLAN_CONTRA = IDPLAN_CONTRA
			,@CONSECUTIVO = CONSECUTIVO, @PROGRAMA_POSIBLE = PROGRAMA_POSIBLE, @IDAFILIADO = IDAFILIADO, @TVALORACION = TVALORACION
		FROM OPENJSON(@PARAMETROS)WITH( 
			 IDAREA               VARCHAR(20)               '$.IDAREA'
			,CONSECUTIVO          VARCHAR(20)               '$.CONSECUTIVO'
			,IDPLAN               VARCHAR(20)               '$.IDPLAN'
			,IDTERCERO            VARCHAR(20)               '$.IDTERCERO'
			,IDEMEDICA            VARCHAR(20)               '$.IDEMEDICA'
			,CLASEORDEN           VARCHAR(20)               '$.CLASEORDEN'
			,TIPOCITA             VARCHAR(20)               '$.TIPOCITA'
			,CCONTRATANTE         BIT						'$.CCONTRATANTE'
			,TVALORACION		  BIT						'$.TVALORACION'
			,IDADMINISTRADORA_CONTRA VARCHAR(20)			'$.IDADMINISTRADORA_CONTRA'
			,IDPLAN_CONTRA        VARCHAR(20)               '$.IDPLAN_CONTRA'
			,PROGRAMA_POSIBLE     VARCHAR(20)               '$.PROGRAMA_POSIBLE'
			,IDAFILIADO		      VARCHAR(20)               '$.IDAFILIADO'
		)

		DECLARE @ANOS VARCHAR(3), @MESES VARCHAR(10), @DIAS VARCHAR(10), @SEXO VARCHAR(20)

		SELECT @FECHA1 = FECHA FROM CIT WHERE CONSECUTIVO=@CONSECUTIVO

		SELECT @SEXO = SEXO, @ANOS = DBO.FNK_EDAD_ARS(FNACIMIENTO,@FECHA1,'A'), @MESES = DBO.FNK_EDAD_ARS(FNACIMIENTO,@FECHA1,'M'), @DIAS = DBO.FNK_EDAD_ARS(FNACIMIENTO,@FECHA1,'D')  
		FROM AFI WHERE IDAFILIADO=@IDAFILIADO
		--SELECT @SEXO, @ANOS
		IF COALESCE(@CCONTRATANTE,0)=1
		BEGIN
			SELECT @IDPLAN = COALESCE(@IDPLAN_CONTRA,@IDPLAN), @IDTERCERO=COALESCE(@IDADMINISTRADORA_CONTRA, @IDTERCERO)
		END
		SELECT 'OK' OK, @CONSECUTIVO AS CONSECUTIVO, @FECHA1 AS FECHA
		PRINT '@TIPOCITA: '+ @TIPOCITA
		PRINT '@CLASEORDEN: '+ @CLASEORDEN
		IF @TIPOCITA = 'PROC'
		BEGIN
			SELECT SER.IDSERVICIO value, SER.DESCSERVICIO label, COALESCE( SER.DURACIONCITA,0) DURACIONCITA, COALESCE(SER.AMBITO,'') AMBITO 
			FROM SER  WHERE  SER.ESTADO='Activo' AND COALESCE(SER.SEXO,'') IN ('','Ambos',@SEXO)
			AND SER.PREFIJO NOT IN (SELECT ITEM FROM dbo.FNK_SPLIT ((SELECT DATO FROM  USVGS WHERE  IDVARIABLE = 'prefijocitas'),',','',''  ))
			ORDER BY  SER.IDSERVICIO ASC
			RETURN
		END
		IF @TIPOCITA <> 'PROC' AND @CLASEORDEN='PyP'
		BEGIN
			IF DBO.FNK_VALORVARIABLE('PYP_POR_ANIO') = 'SI'
			BEGIN
				PRINT ' @TIPOCITA <> ''PROC'' AND @CLASEORDEN=''PyP'''
				SELECT MESS.IDSERVICIO value, SER.DESCSERVICIO label, MESS.IDEMEDICA, MESS.TIPO,COALESCE( SER.DURACIONCITA,0) DURACIONCITA, COALESCE(SER.AMBITO,'') AMBITO  FROM MESS
				INNER JOIN SER ON MESS.IDSERVICIO = SER.IDSERVICIO
				INNER JOIN SERPE ON SER.IDSERVICIO=SERPE.IDSERVICIO
				INNER JOIN MPE ON MPE.IDPESPECIAL=SERPE.IDPESPECIAL
				WHERE MESS.IDEMEDICA = @IDEMEDICA AND MESS.TIPO ='Servicio' AND SER.ESTADO='Activo' AND COALESCE(SER.SEXO,'') IN ('','Ambos',@SEXO)
					AND MPE.EDADINI<=CASE COALESCE(MPE.TEDAD,'Años') WHEN 'Meses' THEN @MESES WHEN 'Dias' THEN @DIAS ELSE @ANOS END
					AND MPE.EDADFIN>=CASE COALESCE(MPE.TEDAD,'Años') WHEN 'Meses' THEN @MESES WHEN 'Dias' THEN @DIAS ELSE @ANOS END
					AND MPE.IDPESPECIAL=@PROGRAMA_POSIBLE
					AND  EXISTS (			
						SELECT 1 FROM CPPAF 
						WHERE MESS.IDSERVICIO = CPPAF.IDSERVICIO AND CPPAF.IDPLAN = @IDPLAN  AND CPPAF.IDAREA = @IDAREA 
						AND  COALESCE(CPPAF.IDTERCEROCA,'') = CASE WHEN COBRARA = 'O' THEN COALESCE( CPPAF.IDTERCEROCA,'') ELSE @IDTERCERO END
						)
					AND ((COALESCE(SER.TIPORANGOE,'NA') = 'NA' OR ( SER.TIPORANGOE = 'I' AND @ANOS BETWEEN SER.EDADINICIAL AND SER.EDADFINAL  )))
					--AND ((COALESCE(SER.HORARIO,0)=1 AND CAST(@FECHA1 AS TIME) BETWEEN SER.HDESDE AND SER.HHASTA) OR COALESCE(SER.HORARIO, 0) = 0)
					AND NOT EXISTS (SELECT * FROM CIT INNER JOIN SERPE ON CIT.IDSERVICIO = SERPE.IDSERVICIO AND SERPE.IDPESPECIAL = @PROGRAMA_POSIBLE AND SERPE.PVEZ = 1  WHERE CIT.IDAFILIADO = @IDAFILIADO AND CIT.IDSERVICIO = MESS.IDSERVICIO AND YEAR(GETDATE()) = YEAR(CIT.FECHA) )
					AND COALESCE(MESS.TVALORACION,0) = CASE WHEN @TVALORACION = 1 THEN 1 ELSE COALESCE(MESS.TVALORACION,0) END
				UNION
				SELECT MESS.IDSERVICIO value, SER.DESCSERVICIO label, MESS.IDEMEDICA, MESS.TIPO,COALESCE( SER.DURACIONCITA,0) DURACIONCITA, COALESCE(SER.AMBITO,'') AMBITO  
				FROM   MESS INNER JOIN SER ON MESS.IDSERVICIO = SER.IDSERVICIO
				WHERE  SER.ESTADO='Activo' AND COALESCE(SER.SEXO,'') IN ('','Ambos',@SEXO) AND MESS.IDEMEDICA = @IDEMEDICA AND TIPO ='Servicio'
					AND ((COALESCE(SER.TIPORANGOE,'NA') = 'NA' OR ( SER.TIPORANGOE = 'I' AND @ANOS BETWEEN SER.EDADINICIAL AND SER.EDADFINAL  )))
					--AND ((COALESCE(SER.HORARIO,0)=1 AND CAST(@FECHA1 AS TIME) BETWEEN SER.HDESDE AND SER.HHASTA) OR COALESCE(SER.HORARIO, 0) = 0)				 
					AND  EXISTS (
						SELECT 1 FROM CPPAF 
						WHERE CPPAF.IDSERVICIO= MESS.IDSERVICIO AND CPPAF.IDPLAN = @IDPLAN  AND CPPAF.IDAREA = @IDAREA 
						AND  COALESCE(CPPAF.IDTERCEROCA,'') = CASE WHEN COBRARA = 'O' THEN COALESCE( CPPAF.IDTERCEROCA,'') ELSE @IDTERCERO END
						) AND SER.PREFIJO  IN (SELECT ITEM FROM dbo.FNK_SPLIT ((SELECT DATO FROM  USVGS WHERE  IDVARIABLE = 'prefijocitas'),',','',''  ))
					AND NOT EXISTS (SELECT * FROM CIT INNER JOIN SERPE ON CIT.IDSERVICIO = SERPE.IDSERVICIO AND SERPE.IDPESPECIAL = @PROGRAMA_POSIBLE AND SERPE.PVEZ = 1  WHERE CIT.IDAFILIADO = @IDAFILIADO AND CIT.IDSERVICIO = MESS.IDSERVICIO AND YEAR(GETDATE()) = YEAR(CIT.FECHA))
					AND COALESCE(MESS.TVALORACION,0) = CASE WHEN @TVALORACION = 1 THEN 1 ELSE COALESCE(MESS.TVALORACION,0) END
			END
			IF DBO.FNK_VALORVARIABLE('PYP_POR_ANIO') <> 'SI'
			BEGIN
				PRINT ' @TIPOCITA <> ''PROC'' AND @CLASEORDEN=''PyP'''
				SELECT MESS.IDSERVICIO value, SER.DESCSERVICIO label, MESS.IDEMEDICA, MESS.TIPO,COALESCE( SER.DURACIONCITA,0) DURACIONCITA, COALESCE(SER.AMBITO,'') AMBITO  FROM MESS
				INNER JOIN SER ON MESS.IDSERVICIO = SER.IDSERVICIO
				INNER JOIN SERPE ON SER.IDSERVICIO=SERPE.IDSERVICIO
				INNER JOIN MPE ON MPE.IDPESPECIAL=SERPE.IDPESPECIAL
				WHERE MESS.IDEMEDICA = @IDEMEDICA AND MESS.TIPO ='Servicio' AND SER.ESTADO='Activo' AND COALESCE(SER.SEXO,'') IN ('','Ambos',@SEXO)
					AND MPE.EDADINI<=CASE COALESCE(MPE.TEDAD,'Años') WHEN 'Meses' THEN @MESES WHEN 'Dias' THEN @DIAS ELSE @ANOS END
					AND MPE.EDADFIN>=CASE COALESCE(MPE.TEDAD,'Años') WHEN 'Meses' THEN @MESES WHEN 'Dias' THEN @DIAS ELSE @ANOS END
					AND MPE.IDPESPECIAL=@PROGRAMA_POSIBLE
					AND  EXISTS (			
						SELECT 1 FROM CPPAF 
						WHERE MESS.IDSERVICIO = CPPAF.IDSERVICIO AND CPPAF.IDPLAN = @IDPLAN  AND CPPAF.IDAREA = @IDAREA 
						AND  COALESCE(CPPAF.IDTERCEROCA,'') = CASE WHEN COBRARA = 'O' THEN COALESCE( CPPAF.IDTERCEROCA,'') ELSE @IDTERCERO END
						)
					AND ((COALESCE(SER.TIPORANGOE,'NA') = 'NA' OR ( SER.TIPORANGOE = 'I' AND @ANOS BETWEEN SER.EDADINICIAL AND SER.EDADFINAL  )))
					--AND ((COALESCE(SER.HORARIO,0)=1 AND CAST(@FECHA1 AS TIME) BETWEEN SER.HDESDE AND SER.HHASTA) OR COALESCE(SER.HORARIO, 0) = 0)
				UNION
				SELECT MESS.IDSERVICIO value, SER.DESCSERVICIO label, MESS.IDEMEDICA, MESS.TIPO,COALESCE( SER.DURACIONCITA,0) DURACIONCITA, COALESCE(SER.AMBITO,'') AMBITO  
				FROM   MESS INNER JOIN SER ON MESS.IDSERVICIO = SER.IDSERVICIO
				WHERE  SER.ESTADO='Activo' AND COALESCE(SER.SEXO,'') IN ('','Ambos',@SEXO) AND MESS.IDEMEDICA = @IDEMEDICA AND TIPO ='Servicio'
					AND ((COALESCE(SER.TIPORANGOE,'NA') = 'NA' OR ( SER.TIPORANGOE = 'I' AND @ANOS BETWEEN SER.EDADINICIAL AND SER.EDADFINAL  )))
					--AND ((COALESCE(SER.HORARIO,0)=1 AND CAST(@FECHA1 AS TIME) BETWEEN SER.HDESDE AND SER.HHASTA) OR COALESCE(SER.HORARIO, 0) = 0)				 
					AND  EXISTS (
						SELECT 1 FROM CPPAF 
						WHERE CPPAF.IDSERVICIO= MESS.IDSERVICIO AND CPPAF.IDPLAN = @IDPLAN  AND CPPAF.IDAREA = @IDAREA 
						AND  COALESCE(CPPAF.IDTERCEROCA,'') = CASE WHEN COBRARA = 'O' THEN COALESCE( CPPAF.IDTERCEROCA,'') ELSE @IDTERCERO END
						) AND SER.PREFIJO  IN (SELECT ITEM FROM dbo.FNK_SPLIT ((SELECT DATO FROM  USVGS WHERE  IDVARIABLE = 'prefijocitas'),',','',''  ))
					AND COALESCE(MESS.TVALORACION,0) = CASE WHEN @TVALORACION = 1 THEN 1 ELSE COALESCE(MESS.TVALORACION,0) END
			END
			RETURN
		END
		--SELECT @TVALORACION
		IF @TIPOCITA <> 'PROC' AND COALESCE(@CLASEORDEN,'')<>'PyP'
		BEGIN
			PRINT '@TIPOCITA <> ''PROC'' AND COALESCE(@CLASEORDEN,'')<>''PyP'''
			SELECT MESS.IDSERVICIO value, SER.DESCSERVICIO label, MESS.IDEMEDICA, MESS.TIPO,COALESCE( SER.DURACIONCITA,0) DURACIONCITA, COALESCE(SER.AMBITO,'') AMBITO  
			FROM   MESS INNER JOIN SER ON MESS.IDSERVICIO = SER.IDSERVICIO
			WHERE  SER.ESTADO='Activo' AND COALESCE(SER.SEXO,'') IN ('','Ambos',@SEXO) AND MESS.IDEMEDICA = @IDEMEDICA AND TIPO ='Servicio'
				AND ((COALESCE(SER.TIPORANGOE,'NA') = 'NA' OR ( SER.TIPORANGOE = 'I' AND @ANOS BETWEEN SER.EDADINICIAL AND SER.EDADFINAL  )))
				--AND ((COALESCE(SER.HORARIO,0)=1 AND CAST(@FECHA1 AS TIME) BETWEEN SER.HDESDE AND SER.HHASTA) OR COALESCE(SER.HORARIO, 0) = 0)				 
				AND  EXISTS (
					SELECT 1 FROM CPPAF 
					WHERE CPPAF.IDSERVICIO= MESS.IDSERVICIO AND CPPAF.IDPLAN = @IDPLAN  AND CPPAF.IDAREA = @IDAREA 
					AND  COALESCE(CPPAF.IDTERCEROCA,'') = CASE WHEN COBRARA = 'O' THEN COALESCE( CPPAF.IDTERCEROCA,'') ELSE @IDTERCERO END
					) AND SER.PREFIJO  IN (SELECT ITEM FROM dbo.FNK_SPLIT ((SELECT DATO FROM  USVGS WHERE  IDVARIABLE = 'prefijocitas'),',','',''  ))
				AND COALESCE(MESS.TVALORACION,0) = CASE WHEN @TVALORACION = 1 THEN 1 ELSE COALESCE(MESS.TVALORACION,0) END
		END
		
	END 
   IF @METODO = 'CONSULTA_CANTIDAD'
   BEGIN
      SELECT @SERVICIO_2 = SERVICIO_2
	  FROM OPENJSON(@PARAMETROS)WITH( 
							SERVICIO_2               NVARCHAR(MAX)               AS JSON
							)
	SELECT * INTO #SERVICIO_3 FROM OPENJSON (@SERVICIO_2)
		WITH(
		IDSERVICIO						VARCHAR(20)						'$.value'
		,DESCSERVICIO					VARCHAR(200)					'$.label'
		,IDEMEDICA						VARCHAR(20)						'$.IDEMEDICA'
		,TIPO							VARCHAR(20)						'$.TIPO'
		,DURACIONCITA					INT								'$.DURACIONCITA'
		)

		SELECT 'OK' OK
		SELECT SUM(DURACIONCITA) DURACIONCITA FROM #SERVICIO_3 
   END 
   IF @METODO = 'INFO_CITA_SV'
   BEGIN
      SELECT @CONSECUTIVO = CONSECUTIVO
	  FROM OPENJSON(@PARAMETROS)WITH( 
							CONSECUTIVO       VARCHAR(20)             '$.CONSECUTIVO'
							)

		IF EXISTS(SELECT * FROM CITSIGVIT WHERE CONSECUTIVO = @CONSECUTIVO)
		BEGIN
			SELECT 'OK' OK ,'SI' DATO , ID, CONSECUTIVO, PESO, TALLA, TAS, TAD, FC, FR, TEMP, IMC, SAT, PA, PB, SR, SP, INDICE FROM CITSIGVIT WHERE CONSECUTIVO = @CONSECUTIVO
		END
		ELSE
			SELECT 'OK' OK, 'NO' DATO
   END 
   IF @METODO = 'SAVE_SV'
   BEGIN
      SELECT @CONSECUTIVO = CONSECUTIVO, @dataSV = dataSV
	  FROM OPENJSON(@PARAMETROS)WITH( 
							CONSECUTIVO			VARCHAR(20)             '$.CONSECUTIVO'
							,dataSV				NVARCHAR(MAX)		AS JSON
							)
		SELECT * INTO #dataSV FROM OPENJSON (@dataSV)
			WITH(
			PESO			DECIMAL(14,2)				'$.PESO'
			,TALLA			DECIMAL(14,2)				'$.TALLA'
			,TAS			VARCHAR(10)					'$.TAS'
			,TAD			VARCHAR(10)					'$.TAD'
			,FC				VARCHAR(10)					'$.FC'
			,FR				VARCHAR(10)					'$.FR'
			,TEMP			DECIMAL(14,2)				'$.TEMP'
    		,IMC			DECIMAL(14,2)				'$.IMC'
			,SAT			VARCHAR(10)					'$.SAT'
			,PA				VARCHAR(10)					'$.PA'
			,PB				VARCHAR(10)					'$.PB'
			,SR				VARCHAR(10)					'$.SR'
			,SP				VARCHAR(10)					'$.SP'
			,INDICE			DECIMAL(14,2)				'$.INDICE'
			)
		IF EXISTS (SELECT  * FROM CITSIGVIT WHERE CITSIGVIT.CONSECUTIVO = @CONSECUTIVO)
		BEGIN
			UPDATE CITSIGVIT SET 
			 CITSIGVIT.PESO		 = #dataSV.PESO		
			,CITSIGVIT.TALLA		 = #dataSV.TALLA		
			,CITSIGVIT.TAS		 = #dataSV.TAS		
			,CITSIGVIT.TAD		 = #dataSV.TAD		
			,CITSIGVIT.FC			 = #dataSV.FC			
			,CITSIGVIT.FR			 = #dataSV.FR			
			,CITSIGVIT.TEMP		 = #dataSV.TEMP		
			,CITSIGVIT.IMC		 = #dataSV.IMC		
			,CITSIGVIT.SAT		 = #dataSV.SAT		
			,CITSIGVIT.PA			 = #dataSV.PA			
			,CITSIGVIT.PB			 = #dataSV.PB			
			FROM CITSIGVIT, #dataSV WHERE  CITSIGVIT.CONSECUTIVO = @CONSECUTIVO

		END
		IF NOT EXISTS (SELECT  * FROM CITSIGVIT WHERE CITSIGVIT.CONSECUTIVO = @CONSECUTIVO)
		BEGIN
			INSERT INTO  CITSIGVIT ( CONSECUTIVO, PESO, TALLA, TAS, TAD, FC, FR, TEMP, IMC, SAT, PA, PB) 
			SELECT @CONSECUTIVO , PESO, TALLA, TAS, TAD, FC, FR, TEMP, IMC, SAT, PA, PB FROM #dataSV
		END
		SELECT 'OK' OK 
	END
END