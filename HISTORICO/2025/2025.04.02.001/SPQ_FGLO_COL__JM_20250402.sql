CREATE OR ALTER PROCEDURE DBO.SPQ_FGLO_COL @JSON NVARCHAR(MAX)
	WITH ENCRYPTION
AS
SET DATEFORMAT dmy
DECLARE @TBLERRORES TABLE (ERROR VARCHAR(MAX))
DECLARE  @PARAMETROS NVARCHAR(MAX)			,@MODELO VARCHAR(100)			   ,@METODO VARCHAR(100)
		,@USUARIO VARCHAR(12)				   ,@COMPANIA VARCHAR(2)		      ,@IDSEDE      VARCHAR(5)		
      ,@SYS_COMPUTERNAME VARCHAR(200)     ,@DATOS    VARCHAR(MAX)
      ,@CNSGLO VARCHAR(20)                ,@CNSFCGLO VARCHAR(20)           ,@VALOR DECIMAL(14,2)
      ,@PROCESO VARCHAR(20)               ,@TIPO  VARCHAR(20)              ,@TIPORESPUESTA  VARCHAR(20)
      ,@RADICADO  VARCHAR(20)             ,@IDCONCEPTO  VARCHAR(20)        ,@VLRACEPTADO  DECIMAL(14,2)
      ,@OBSERVACION  VARCHAR(MAX)         ,@FECHARESP  DATETIME            ,@USURESPONRTA  VARCHAR(20)
      ,@OBSERVACIONRTA  VARCHAR(MAX)      ,@CODRPTA  VARCHAR(20)           ,@RESPUESTA  VARCHAR(MAX)
      ,@CONCEPTO  VARCHAR(20)             ,@DESCRIPCION  VARCHAR(512)       ,@VLRGLOSA  VARCHAR(20)
      ,@CODGLOSA  VARCHAR(20)             ,@CANTIDAD  VARCHAR(20)          ,@VR_UNITARIO  VARCHAR(20)
      ,@ITEM  INT                         ,@IDSERVICIO  VARCHAR(20)        ,@NROCOMPROBANTE  VARCHAR(20)
      ,@NROCOMPROBANTENC  VARCHAR(20)     ,@VLRRECUPERAR  DECIMAL(14,2)    ,@CNSFNOT  VARCHAR(20)
      ,@CNSLOG  VARCHAR(20)               ,@N_FACTURA  VARCHAR(20)         ,@VLRFACTURA DECIMAL(14,2)
      ,@CNSRPDX VARCHAR(20)               ,@CNSGLOI  VARCHAR(20)           ,@IDTERCERO  VARCHAR(20)
      ,@IMPRESIONES INT                   ,@CNSENTREGA VARCHAR(20)
BEGIN
	SELECT *
	INTO #JSON
	FROM OPENJSON(@json) WITH (
			MODELO VARCHAR(100) '$.MODELO'
			,METODO VARCHAR(100) '$.METODO'
			,USUARIO VARCHAR(12) '$.USUARIO'
			,PARAMETROS NVARCHAR(MAX) AS JSON
	)

	SELECT   @MODELO = MODELO			,@METODO = METODO
			,@PARAMETROS = PARAMETROS	,@USUARIO = USUARIO
	FROM #JSON

   SELECT @IDSEDE=COALESCE(UBEQ.IDSEDE,USUSU.IDSEDE),@COMPANIA=COALESCE(UBEQ.COMPANIA,USUSU.COMPANIA,'01'),
   @SYS_COMPUTERNAME=COALESCE(USUSU.SYS_COMPUTERNAME,HOST_NAME())
   FROM USUSU LEFT JOIN UBEQ ON USUSU.SYS_COMPUTERNAME=UBEQ.SYS_COMPUTERNAME
   WHERE USUSU.USUARIO=@USUARIO

   IF @METODO='TRAE_MOTIGLO'     
   BEGIN         
      SELECT @CNSGLO=CNSGLO        
      FROM   OPENJSON (@PARAMETROS)
      WITH (           
      CNSGLO  VARCHAR(20)   '$.CNSGLO' 
      )
      SELECT 'OK'OK
      SELECT FGLOCG.CNSFCGLO,FCGLO.DESCRIPCION,FGLOCG.VALOR 
      FROM FGLOCG INNER JOIN FCGLO ON FGLOCG.CNSFCGLO=FCGLO.CNSFCGLO
      WHERE FGLOCG.CNSGLO=@CNSGLO

      SELECT  ITEM,TIPO,CODGLOSA,CODRPTA,VLRGLOSA,VLRACEPTADO,VLRRECUPERAR,
              IDSERVICIO,CONCEPTO,DESCRIPCION,OBSERVACION,RESPUESTA,CANTIDAD,
              VR_UNITARIO
      FROM FGLOD 
      WHERE CNSGLO=@CNSGLO

      RETURN
   END  
   IF @METODO='CRUD_FGLOCG'     
   BEGIN         
      SELECT @DATOS=DATOS        
      FROM   OPENJSON (@PARAMETROS)
      WITH (           
      DATOS NVARCHAR(MAX) AS JSON 
      )
                 
      SELECT @PROCESO=PROCESO, @CNSGLO =CNSGLO,@CNSFCGLO=CNSFCGLO,@VALOR=VALOR
      FROM   OPENJSON (@DATOS)
      WITH   (  
      PROCESO  VARCHAR(20)   '$.PROCESO',
      CNSGLO  VARCHAR(20)   '$.CNSGLO',
      CNSFCGLO  VARCHAR(20)   '$.CNSFCGLO',
      VALOR  DECIMAL(14,2)   '$.VALOR'
      )   
      IF NOT EXISTS(SELECT * FROM  FGLO WHERE CNSGLO=@CNSGLO AND CERRADA=0)
      BEGIN
         INSERT INTO @TBLERRORES(ERROR)
         SELECT 'Consecutivo de Glosa no Encontrado O ya se encuentra Cerrada, Verifique e intente de nuevo'
      END
      ELSE
      BEGIN
         IF @PROCESO='Nuevo'
         BEGIN
            IF NOT EXISTS(SELECT * FROM FGLOCG WHERE CNSGLO=@CNSGLO AND CNSFCGLO=@CNSFCGLO)
            BEGIN
               INSERT INTO FGLOCG(CNSGLO,CNSFCGLO,VALOR)
               SELECT @CNSGLO,@CNSFCGLO,@VALOR
            END
            ELSE
            BEGIN
               INSERT INTO @TBLERRORES(ERROR)
               SELECT 'Ya Existe un Motivo de Glosa con este Código, Verifique e Intente de nuevo'
            END
         END
         IF @PROCESO='Editar'
         BEGIN
            IF EXISTS(SELECT * FROM FGLOCG WHERE CNSGLO=@CNSGLO AND CNSFCGLO=@CNSFCGLO)
            BEGIN
               UPDATE FGLOCG SET VALOR=@VALOR WHERE CNSGLO=@CNSGLO AND CNSFCGLO=@CNSFCGLO
            END
            ELSE
            BEGIN
               INSERT INTO @TBLERRORES(ERROR)
               SELECT 'Codigo de Glosa no Fue Encontrado, Verifique e intente de nuevo'
            END
         END
         IF @PROCESO='Borrar'
         BEGIN
            IF EXISTS(SELECT * FROM FGLOCG INNER JOIN FGLO ON FGLOCG.CNSGLO=FGLO.CNSGLO WHERE FGLOCG.CNSGLO=@CNSGLO AND CNSFCGLO=@CNSFCGLO AND FGLO.CERRADA=0)
            BEGIN
               DELETE FGLOCG WHERE FGLOCG.CNSGLO=@CNSGLO AND CNSFCGLO=@CNSFCGLO
            END
            ELSE
            BEGIN
               INSERT INTO @TBLERRORES(ERROR)
               SELECT 'No Fue posible Borrar el registro, verifique si la glosa ya fue cerrada'
            END
         END
      END
      IF(SELECT COUNT(*) FROM @TBLERRORES)>0
      BEGIN
         SELECT 'KO' OK, ERROR FROM @TBLERRORES
         RETURN
      END
      SELECT @VALOR=SUM(VALOR) FROM FGLOCG WHERE CNSGLO=@CNSGLO
      SELECT 'OK' OK,@VALOR VALOR
      RETURN 
   END  
   IF @METODO='CRUD_FGLO'     
   BEGIN         
      SELECT @DATOS=DATOS        
      FROM   OPENJSON (@PARAMETROS)
      WITH (           
      DATOS NVARCHAR(MAX) AS JSON 
      )
      DECLARE @APLICA  BIT
      
      SELECT @CNSGLO=CNSGLO,@TIPO=TIPO,@TIPORESPUESTA=TIPORESPUESTA,@RADICADO=RADICADO,@IDCONCEPTO=IDCONCEPTO,
             @VLRACEPTADO=VLRACEPTADO,@OBSERVACION=OBSERVACION,@FECHARESP=CONVERT(DATE,FECHARESP),@USURESPONRTA=USURESPONRTA,
             @OBSERVACIONRTA=OBSERVACIONRTA,@APLICA=APLICA
      FROM   OPENJSON (@DATOS)
      WITH   ( 
      CNSGLO  VARCHAR(20)          '$.CNSGLO',
      TIPO  VARCHAR(20)            '$.TIPO.value',
      TIPORESPUESTA  VARCHAR(20)   '$.TIPORESPUESTA.value',
      RADICADO  VARCHAR(20)        '$.RADICADO',
      IDCONCEPTO  VARCHAR(20)      '$.IDCONCEPTO',
      VLRACEPTADO  DECIMAL(14,2)   '$.VLRACEPTADO',
      OBSERVACION  VARCHAR(MAX)    '$.OBSERVACION',
      FECHARESP  VARCHAR(20)       '$.FECHARESP',
      USURESPONRTA  VARCHAR(20)    '$.USURESPONRTA',
      OBSERVACIONRTA  VARCHAR(MAX) '$.OBSERVACIONRTA',
      APLICA  BIT   '$.APLICA'
      )   
      IF EXISTS(SELECT * FROM FGLO WHERE CNSGLO=@CNSGLO AND CERRADA=0)
      BEGIN
         BEGIN TRY           
            UPDATE FGLO SET TIPO=@TIPO,TIPORESPUESTA=@TIPORESPUESTA,RADICADO=@RADICADO,IDCONCEPTO=@IDCONCEPTO,VLRACEPTADO=COALESCE(@VLRACEPTADO,0),
            VLRRECUPERAR=VLRGLOSA-COALESCE(@VLRACEPTADO,0),OBSERVACION=@OBSERVACION,OBSERVACIONRTA=@OBSERVACIONRTA,USURESPONRTA=@USURESPONRTA,
            FECHARESP=@FECHARESP,USUARIO=CASE WHEN COALESCE(USUARIO,'')='' THEN  @USUARIO ELSE USUARIO END,USUARIOINGRTA=@USUARIO
            WHERE CNSGLO=@CNSGLO

            IF COALESCE(@APLICA,0)=1
            BEGIN
               PRINT 'Voy a aplicar la glosa FECHARESP'+CONVERT(VARCHAR,@FECHARESP,103)
               IF EXISTS(SELECT * FROM PRI WHERE CONVERT(DATE,FECHA_INI)<=@FECHARESP AND CONVERT(DATE,FECHA_FIN)>=@FECHARESP AND COALESCE(CERRADO,0)=0 AND COALESCE(CERRADO_CARTERA,0)=0 )
               BEGIN
                  SELECT @IDSEDE=COALESCE(UBEQ.IDSEDE,USUSU.IDSEDE),@COMPANIA=COALESCE(UBEQ.COMPANIA,USUSU.COMPANIA,'01'),
                  @SYS_COMPUTERNAME=COALESCE(USUSU.SYS_COMPUTERNAME,HOST_NAME())
                  FROM USUSU LEFT JOIN UBEQ ON USUSU.SYS_COMPUTERNAME=UBEQ.SYS_COMPUTERNAME
                  WHERE USUSU.USUARIO=@USUARIO
                  BEGIN TRY 
                        PRINT 'Si pase voy a llamar el spk'
                        EXEC SPK_RESPUESTAGLOSA @CNSGLO,3,@IDSEDE,@COMPANIA,@USUARIO,@SYS_COMPUTERNAME,0                                   
                  END TRY
                  BEGIN CATCH
                          INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE()
                  END CATCH
               END
            END
         END TRY
         BEGIN CATCH
                 INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE()
         END CATCH
      END
      ELSE
      BEGIN
         INSERT INTO @TBLERRORES(ERROR)
         SELECT 'No se Encontro la Glosa o ya esta Cerrada, Verifique e intente de nuevo'
      END
      IF(SELECT COUNT(*) FROM @TBLERRORES)>0
      BEGIN
         SELECT 'KO' OK, ERROR FROM @TBLERRORES
         RETURN
      END
      SELECT @TIPORESPUESTA=TIPORESPUESTA FROM FGLO WHERE CNSGLO=@CNSGLO
      SELECT 'OK' OK,@TIPORESPUESTA TIPORESP,@TIPO TIPO
      RETURN 
   END 
   IF @METODO='CRUD_FGLOD'     
   BEGIN   
      SELECT @DATOS=DATOS        
      FROM   OPENJSON (@PARAMETROS)
      WITH (           
      DATOS NVARCHAR(MAX) AS JSON 
      )         
      SELECT @PROCESO =PROCESO,@CNSGLO =CNSGLO,@VLRACEPTADO =VLRACEPTADO,@VLRGLOSA =VLRGLOSA,@TIPO =TIPO,@CODGLOSA =CODGLOSA,@OBSERVACION =OBSERVACION,
      @CODRPTA =CODRPTA,@RESPUESTA =RESPUESTA,@CONCEPTO =CONCEPTO,@DESCRIPCION =DESCRIPCION,@CANTIDAD =CANTIDAD,@VR_UNITARIO =VR_UNITARIO,
      @IDSERVICIO =IDSERVICIO,@ITEM =ITEM
      FROM   OPENJSON (@DATOS)
      WITH   (  
      PROCESO  VARCHAR(20)       '$.PROCESO',
      CNSGLO  VARCHAR(20)        '$.CNSGLO',
      VLRACEPTADO  VARCHAR(20)   '$.VLRACEPTADO',
      VLRGLOSA  VARCHAR(20)      '$.VLRGLOSA',
      TIPO  VARCHAR(20)          '$.TIPO.value',
      CODGLOSA  VARCHAR(20)      '$.CODGLOSA',
      OBSERVACION  VARCHAR(MAX)  '$.OBSERVACION',
      CODRPTA  VARCHAR(20)       '$.CODRPTA',
      RESPUESTA  VARCHAR(MAX)    '$.RESPUESTA',
      CONCEPTO  VARCHAR(20)      '$.CONCEPTO',
      DESCRIPCION  VARCHAR(512)  '$.DESCRIPCION',
      CANTIDAD  VARCHAR(20)      '$.CANTIDAD',
      VR_UNITARIO  VARCHAR(20)   '$.VR_UNITARIO',
      ITEM  INT                  '$.ITEM',
      IDSERVICIO  VARCHAR(20)    '$.IDSERVICIO'
      )   
      IF EXISTS(SELECT * FROM FGLO WHERE CNSGLO=@CNSGLO AND CERRADA=0)
      BEGIN
         IF @PROCESO='Nuevo'
         BEGIN
            SELECT @ITEM=MAX(ITEM) FROM FGLOD WHERE CNSGLO=@CNSGLO
            SELECT @ITEM=COALESCE(@ITEM,0)+1
            INSERT INTO FGLOD (CNSGLO, ITEM, CNSCXC, N_FACTURA, USUARIO, FECHANOVEDAD, TIPO, IDSERVICIO, DESCRIPCION, CANTIDAD, VR_UNITARIO,
                               VLRGLOSA, VLRACEPTADO, VLRRECUPERAR, OBSERVACION, CERRADA, RESPUESTA, FECHARESP,  CONCEPTO,ASIGRESP, RESPONSABLE,
                               OBSRESPON, VALORFINAL, AUTORIZA, ESTADO, N_CUOTAS, USUARIOCE, TIPOTEC, F_CIERRE, CONTABILIZADA, NROCOMPROBANTE,
                               IDAREA, CCOSTO, CODUNG,  CODPRG, N_CUOTA, CODGLOSA, CODRPTA)
            SELECT CNSGLO, @ITEM, CNSCXC, N_FACTURA, USUARIO, DBO.FNK_GETDATE(), @TIPO, @IDSERVICIO, @DESCRIPCION, @CANTIDAD, @VR_UNITARIO, 
                   @VLRGLOSA, @VLRACEPTADO, (@VLRGLOSA-@VLRACEPTADO), @OBSERVACION,CERRADA, @RESPUESTA,NULL, @CONCEPTO, NULL, NULL, NULL,NULL,
                   NULL, NULL, NULL,NULL,NULL,NULL,NULL,NULL,NULL, NULL, NULL,  NULL, NULL, @CODGLOSA, @CODRPTA
            FROM FGLO 
            WHERE CNSGLO=@CNSGLO
         END
         IF @PROCESO='Editar'
         BEGIN
            
            UPDATE FGLOD SET TIPO=@TIPO,@IDSERVICIO=@IDSERVICIO,DESCRIPCION=@DESCRIPCION,CANTIDAD=@CANTIDAD,VR_UNITARIO=@VR_UNITARIO,
                             VLRGLOSA=@VLRGLOSA,VLRACEPTADO=@VLRACEPTADO,VLRRECUPERAR=(@VLRGLOSA-@VLRACEPTADO),OBSERVACION=@OBSERVACION,
                             RESPUESTA=@RESPUESTA,CONCEPTO=@CONCEPTO,CODGLOSA=@CODGLOSA,CODRPTA=@CODRPTA
            WHERE CNSGLO=@CNSGLO
            AND ITEM=@ITEM
         END
         IF @PROCESO='Borrar'
         BEGIN
            DELETE FGLOD 
            WHERE CNSGLO=@CNSGLO
            AND ITEM=@ITEM
         END
      END
      ELSE
      BEGIN
         INSERT INTO @TBLERRORES(ERROR)
         SELECT 'No se encontro la glosa o ya esta cerrada, verifique e intente de nuevo'
      END
      IF(SELECT COUNT(*) FROM @TBLERRORES)>0
      BEGIN
         SELECT 'KO' OK, ERROR FROM @TBLERRORES
         RETURN
      END
      SELECT @VALOR=SUM(VLRGLOSA) FROM FGLOD WHERE CNSGLO=@CNSGLO
      SELECT 'OK' OK,@VALOR VALOR
      RETURN 
   END 
   IF @METODO='APLICAR_GLOSA'     
   BEGIN         
      SELECT @CNSGLO =CNSGLO       
      FROM   OPENJSON (@PARAMETROS)
      WITH (           
      CNSGLO  VARCHAR(20)   '$.CNSGLO'
      )   
      IF EXISTS(SELECT * FROM FGLO WHERE CNSGLO=@CNSGLO AND CERRADA=0)
      BEGIN
         SELECT @FECHARESP=FECHARESP FROM FGLO WHERE CNSGLO=@CNSGLO
         PRINT 'Voy a aplicar la glosa FECHARESP'+CONVERT(VARCHAR,@FECHARESP,103)
         IF EXISTS(SELECT * FROM PRI WHERE CONVERT(DATE,FECHA_INI)<=@FECHARESP AND CONVERT(DATE,FECHA_FIN)>=@FECHARESP AND COALESCE(CERRADO,0)=0 AND COALESCE(CERRADO_CARTERA,0)=0 )
         BEGIN
            BEGIN TRY 
                  PRINT 'Si pase voy a llamar el spk'
                  EXEC SPK_RESPUESTAGLOSA @CNSGLO,3,@IDSEDE,@COMPANIA,@USUARIO,@SYS_COMPUTERNAME,0                                   
            END TRY
            BEGIN CATCH
                     INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE()
            END CATCH
         END
         ELSE
         BEGIN
            INSERT INTO @TBLERRORES(ERROR)
            SELECT 'Periodo contable, cerrado o no existe, Verifique e intente de nuevo'
         END
      END
      ELSE
      BEGIN
         INSERT INTO @TBLERRORES(ERROR)
         SELECT 'No se encontro el Cnsglosa o ya fue aplicado, verifique e intente de nuevo'
      END
      IF(SELECT COUNT(*) FROM @TBLERRORES)>0
      BEGIN
         SELECT 'KO' OK, ERROR FROM @TBLERRORES
         RETURN
      END
      SELECT 'OK' OK
      RETURN 
   END 
   IF @METODO='DESAPLICAR_GLOSA'     
   BEGIN         
      SELECT @CNSGLO=CNSGLO        
      FROM   OPENJSON (@PARAMETROS)
      WITH (           
      CNSGLO  VARCHAR(20)   '$.CNSGLO'
      )
      IF EXISTS(SELECT * FROM FGLO WHERE CNSGLO=@CNSGLO AND CERRADA=1 AND COALESCE(ASIGNADAIMP,0)=0)
      BEGIN
         SELECT   @NROCOMPROBANTE=NROCOMPROBANTE,@VLRACEPTADO=VLRACEPTADO,@VLRRECUPERAR=VLRRECUPERAR,@CNSFNOT =CNSFNOT,
         @N_FACTURA=N_FACTURA
         FROM FGLO WHERE CNSGLO=@CNSGLO
         IF EXISTS(SELECT * FROM FTR WHERE N_FACTURA=@N_FACTURA AND (ESTADO='A' OR COALESCE(TIPOANULACION,'')='NC'))
         BEGIN
            SELECT 'KO'OK, 'La Factura de esta Glosa ya se encuentra Anulada o Con nota credito, No se Puede Continuar' ERROR
            RETURN            
         END
         IF COALESCE(@NROCOMPROBANTE,'')<>''
         BEGIN
            IF  EXISTS(SELECT * FROM MCPE WHERE NROCOMPROBANTE=@NROCOMPROBANTE)
            BEGIN
               DELETE MCHE WHERE NROCOMPROBANTE=@NROCOMPROBANTE
               DELETE MCPE WHERE NROCOMPROBANTE=@NROCOMPROBANTE
            END
            IF EXISTS(SELECT * FROM MCP WHERE NROCOMPROBANTE=@NROCOMPROBANTE AND COALESCE(ESTADO,0)<>2 AND COALESCE(ANULADO,0)<>1)
            BEGIN
               SELECT 'KO'OK, 'Comprobante contable no confirmado en contabilidad, se debe contabilizar primero' ERROR
               RETURN
            END
         END
         IF COALESCE(@VLRACEPTADO,0)>0
         BEGIN
            SELECT @NROCOMPROBANTENC=NROCOMPROBANTE FROM FNOT WHERE CNSFNOT=@CNSFNOT
            BEGIN TRY           
               EXEC SPK_ANULANOTA_CR @CNSFNOT,@NROCOMPROBANTENC ,'', @IDSEDE ,@COMPANIA,@USUARIO,@SYS_COMPUTERNAME ,'NOTAS'                             
            END TRY
            BEGIN CATCH
                    INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE()
            END CATCH
         END
         IF(SELECT COUNT(*) FROM @TBLERRORES)>0
         BEGIN
            SELECT 'KO' OK, ERROR FROM @TBLERRORES
            RETURN
         END
         IF COALESCE(@VLRRECUPERAR,0)>0
         BEGIN
            DELETE FCXCDV WHERE CNSGLO=@CNSGLO
         END
         BEGIN TRY           
            EXEC SPK_ANULANOTA_CR @CNSGLO,@NROCOMPROBANTE ,'', @IDSEDE ,@COMPANIA,@USUARIO,@SYS_COMPUTERNAME ,'RGLO'                             
         END TRY
         BEGIN CATCH
                  INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE()
         END CATCH

         IF(SELECT COUNT(*) FROM @TBLERRORES)>0
         BEGIN
            SELECT 'KO' OK, ERROR FROM @TBLERRORES
            RETURN
         END

         UPDATE FGLO SET CERRADA=0 WHERE CNSGLO=@CNSGLO
         
         EXEC SPK_GENCONSECUTIVO @COMPANIA, @IDSEDE, '@USLOGLO',  @CNSLOG OUTPUT 
         SELECT @CNSLOG = @IDSEDE + REPLACE(SPACE(8 - LEN(@CNSLOG))+LTRIM(RTRIM(@CNSLOG)),SPACE(1),0)

         PRINT 'LLENO EL LOG'

         INSERT INTO USLOGLO(CNSLOG, CNSGLO, PROCESO, VLGLOSA, VLRACEPTADO, TIPORESP, OBSERVACION, OBSERVACIONRTA, USUARIOINGRTA, USUARIO, FECHA, SYS_ComputerName, IDSEDE, VLGLOSANVO, VLRACEPTADONVO, OBSERVACIONNVA,  OBSERVACIONRTANVA, USUARIOINGRTANVO)
         SELECT @CNSLOG, CNSGLO, 'DESAPLICAR', VLRGLOSA, VLRACEPTADO, TIPORESPUESTA, OBSERVACION, OBSERVACIONRTA, USUARIOINGRTA, USUARIO, DBO.FNK_GETDATE(), @SYS_ComputerName, @IDSEDE, 0, 0, NULL,  NULL, NULL
         FROM FGLO
         WHERE CNSGLO=@CNSGLO
      END
      ELSE
      BEGIN
         INSERT INTO @TBLERRORES(ERROR)
         SELECT 'Glosa no encontrada o ya fue desaplicada'
      END
      IF(SELECT COUNT(*) FROM @TBLERRORES)>0
      BEGIN
         SELECT 'KO' OK, ERROR FROM @TBLERRORES
         RETURN
      END
      SELECT 'OK' OK
      RETURN 
   END  
   IF @METODO='APLIANULA_FACTURA'     
   BEGIN         
      SELECT @CNSGLO =CNSGLO        
      FROM   OPENJSON (@PARAMETROS)
      WITH (           
      CNSGLO  VARCHAR(20)   '$.CNSGLO'
      )
      IF EXISTS(SELECT * FROM FGLO WHERE CNSGLO=@CNSGLO AND CERRADA=0)
      BEGIN
         SELECT @N_FACTURA =N_FACTURA,@VLRGLOSA=VLRGLOSA FROM FGLO WHERE CNSGLO=@CNSGLO
         SELECT @VLRFACTURA=VALORFACTURA FROM FCXCD WHERE N_FACTURA=@N_FACTURA
         IF @VLRGLOSA - COALESCE(@VLRFACTURA,0) = 0
         BEGIN
            EXEC SPK_GENCONSECUTIVO @COMPANIA, @IDSEDE, '@RPDX',  @CNSRPDX OUTPUT 
            SELECT @CNSRPDX = @IDSEDE + REPLACE(SPACE(8 - LEN(@CNSRPDX))+LTRIM(RTRIM(@CNSRPDX)),SPACE(1),0)
            BEGIN TRY           
               EXEC SPK_GLOSAANULAFTR @CNSGLO, @COMPANIA,@USUARIO,@IDSEDE,@SYS_COMPUTERNAME,@CNSRPDX                                
            END TRY
            BEGIN CATCH
                    INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE()
            END CATCH
            IF EXISTS(SELECT * FROM RPDX WHERE CNS=@CNSRPDX)
            BEGIN
               INSERT INTO @TBLERRORES(ERROR)
               SELECT NOMBRE FROM RPDX WHERE CNS=@CNSRPDX
            END
         END
         ELSE
         BEGIN
            INSERT INTO @TBLERRORES(ERROR)
            SELECT 'El valor de la glosa debe ser igual al valor de la Factura, verifique e intente de nuevo '
         END
      END
      ELSE
      BEGIN
         INSERT INTO @TBLERRORES(ERROR)
         SELECT 'Glosa no encontrada o ya fue aplicada'
      END
      IF(SELECT COUNT(*) FROM @TBLERRORES)>0
      BEGIN
         SELECT 'KO' OK, ERROR FROM @TBLERRORES
         RETURN
      END
      SELECT 'OK' OK
      RETURN 
   END
   IF @METODO='CRUD_FGLOI'     
   BEGIN         
      SELECT @DATOS=DATOS        
      FROM   OPENJSON (@PARAMETROS)
      WITH (           
      DATOS NVARCHAR(MAX) AS JSON 
      )                 
      SELECT @PROCESO =PROCESO,@CNSGLOI =CNSGLOI,@IDTERCERO =IDTERCERO,@OBSERVACION =OBSERVACION       
      FROM   OPENJSON (@DATOS)
      WITH   (  
      PROCESO  VARCHAR(20)     '$.PROCESO',
      CNSGLOI  VARCHAR(20)   '$.CNSGLOI',
      IDTERCERO  VARCHAR(20)   '$.IDTERCERO',
      OBSERVACION  VARCHAR(MAX) '$.OBSERVACION'
      ) 
      IF @PROCESO='Nueva'
      BEGIN
         IF NOT EXISTS(SELECT * FROM FGLOI WHERE IDTERCERO=@IDTERCERO AND USUARIO=@USUARIO AND COALESCE(IMPRESIONES,0)=0)
         BEGIN
            BEGIN TRY           
               EXEC SPK_GENCONSECUTIVO @COMPANIA, @IDSEDE, '@FGLOI',  @CNSGLOI OUTPUT 
               SELECT @CNSGLOI = @IDSEDE + REPLACE(SPACE(8 - LEN(@CNSGLOI))+LTRIM(RTRIM(@CNSGLOI)),SPACE(1),0)   
               INSERT INTO FGLOI(CNSGLOI, IDTERCERO, USUARIO, FECHA, OBSERVACION, IMPRESIONES, RADICADO, FECHARAD, USUARIORAD,
                                 CONTABILIZADA, NROCOMPROBANTE, FECHADIG)
               SELECT @CNSGLOI, @IDTERCERO, @USUARIO, DBO.FNK_GETDATE(), @OBSERVACION, 0, 0, NULL, NULL, 0, NULL, NULL
            END TRY
            BEGIN CATCH
                    INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE()
            END CATCH
         END
         ELSE
         BEGIN
            INSERT INTO @TBLERRORES(ERROR)
            SELECT 'Existe Consecutivos Abiertos para este Tercero y este Usuario, Debe Cerrar los anteriores'
         END
      END
      IF @PROCESO='Editar'
      BEGIN
         IF EXISTS(SELECT * FROM FGLOI WHERE CNSGLOI=@CNSGLOI)
         BEGIN
            UPDATE FGLOI SET OBSERVACION=@OBSERVACION,IDTERCERO=@IDTERCERO WHERE CNSGLOI=@CNSGLOI
         END
         ELSE
         BEGIN
            INSERT INTO @TBLERRORES(ERROR)
            SELECT 'No se encontro el consecutivo de impresion'
         END
      END
      IF @PROCESO='Borrar'
      BEGIN
         IF EXISTS(SELECT * FROM FGLOI WHERE CNSGLOI=@CNSGLOI) AND NOT EXISTS(SELECT * FROM FGLOID WHERE FGLOID.CNSGLOI=@CNSGLOI)
         BEGIN
            DELETE FGLOI WHERE CNSGLOI=@CNSGLOI
         END
         ELSE
         BEGIN
            INSERT INTO @TBLERRORES(ERROR)
            SELECT 'No se encontro el consecutivo de impresión o Tiene Detalles, Verifique e intente de nuevo'
         END         
      END
      IF(SELECT COUNT(*) FROM @TBLERRORES)>0
      BEGIN
         SELECT 'KO' OK, ERROR FROM @TBLERRORES
         RETURN
      END
      SELECT 'OK' OK,@CNSGLOI CNSGLOI
      RETURN 
   END 
   IF @METODO='CRUD_FGLOID'     
   BEGIN   
      DECLARE @ACCION  VARCHAR(20)
      
      SELECT @DATOS=DATOS,@ACCION =ACCION,@CNSGLOI =CNSGLOI      
      FROM   OPENJSON (@PARAMETROS)
      WITH (           
      DATOS NVARCHAR(MAX) AS JSON, 
      CNSGLOI  VARCHAR(20)   '$.CNSGLOI', 
      ACCION  VARCHAR(20)   '$.ACCION'
      )
                 
      SELECT @CNSGLOI=CASE WHEN @ACCION='A' THEN @CNSGLOI ELSE CNSGLOI END,@CNSGLO=CNSGLO,@ITEM=ITEM      
      FROM   OPENJSON (@DATOS)
      WITH   (    
      CNSGLOI  VARCHAR(20)   '$.CNSGLOI',
      CNSGLO  VARCHAR(20)   '$.CNSGLO',
      ITEM  VARCHAR(20)   '$.ITEM'
      )  
      IF @ACCION='D'
      BEGIN
         IF EXISTS(SELECT * FROM FGLOID WHERE CNSGLOI=@CNSGLOI AND CNSGLO=@CNSGLO AND ITEM=@ITEM)
         BEGIN
            DELETE FGLOID WHERE CNSGLOI=@CNSGLOI AND CNSGLO=@CNSGLO AND ITEM=@ITEM
            UPDATE FGLO SET ASIGNADAIMP=0,CNSGLOI=NULL WHERE CNSGLO=@CNSGLO
         END
         ELSE
         BEGIN
            INSERT INTO @TBLERRORES(ERROR)
            SELECT 'No se encontro la glosa en esta entrega'
         END
      END
      IF @ACCION='A'
      BEGIN
         IF EXISTS(SELECT * FROM FGLO WHERE CNSGLO=@CNSGLO AND CERRADA=1 AND COALESCE(ASIGNADAIMP,0)=0)
         BEGIN
            SELECT @N_FACTURA=N_FACTURA FROM FGLO WHERE CNSGLO=@CNSGLO
            IF EXISTS(SELECT * FROM FGLOI WHERE CNSGLOI=@CNSGLOI AND IMPRESIONES=0)
            BEGIN
               SELECT @ITEM=MAX(COALESCE(ITEM,0)) FROM FGLOID WHERE CNSGLOI=@CNSGLOI
               SELECT @ITEM= COALESCE(@ITEM,0)+1
               INSERT INTO FGLOID(CNSGLOI, CNSGLO, N_FACTURA, ITEM)
               SELECT @CNSGLOI,@CNSGLO,@N_FACTURA,@ITEM

               UPDATE FGLO SET ASIGNADAIMP=1,CNSGLOI=@CNSGLOI WHERE CNSGLO=@CNSGLO
            END
            ELSE
            BEGIN
               INSERT INTO @TBLERRORES(ERROR)
               SELECT 'Consecutivo de impresión no encontrado o ya fue Impresio, verifique e intente de nuevo'
            END
         END
         ELSE
         BEGIN
            INSERT INTO @TBLERRORES(ERROR)
            SELECT 'Esta glosa no se encuentra Disponible o no se encuentra cerrada, Verifique e intente de nuevo'
         END
      END
      IF(SELECT COUNT(*) FROM @TBLERRORES)>0
      BEGIN
         SELECT 'KO' OK, ERROR FROM @TBLERRORES
         RETURN
      END
      SELECT 'OK' OK
      RETURN 
   END
   IF @METODO='IMP_RESPUESTA'     
   BEGIN         
      SELECT @CNSGLOI =CNSGLOI      
      FROM   OPENJSON (@PARAMETROS)
      WITH (           
      CNSGLOI  VARCHAR(20)   '$.CNSGLOI' 
      )
     IF EXISTS(SELECT * FROM FGLOI WHERE CNSGLOI=@CNSGLOI)
     BEGIN
        UPDATE FGLOI SET IMPRESIONES=COALESCE(IMPRESIONES,0)+1 WHERE CNSGLOI=@CNSGLOI
     END
     ELSE
     BEGIN
        INSERT INTO @TBLERRORES(ERROR)
        SELECT 'No se encontro el Consecutivo de impresión, Verifique e intente de nuevo'
     END
     IF(SELECT COUNT(*) FROM @TBLERRORES)>0
     BEGIN
         SELECT 'KO' OK, ERROR FROM @TBLERRORES
         RETURN
     END
     SELECT @IMPRESIONES=IMPRESIONES FROM FGLOI WHERE CNSGLOI=@CNSGLOI
     SELECT 'OK' OK,@IMPRESIONES AS IMPRESIONES
     RETURN 
   END  
   IF @METODO='ENVIAR_RESPUESTA'     
   BEGIN         
      SELECT @CNSGLOI =CNSGLOI      
      FROM   OPENJSON (@PARAMETROS)
      WITH (           
      CNSGLOI  VARCHAR(20)   '$.CNSGLOI' 
      ) 
      IF EXISTS(SELECT * FROM FGLOI INNER JOIN FGLO ON FGLOI.CNSGLOI=FGLO.CNSGLOI 
                WHERE FGLOI.CNSGLOI=@CNSGLOI AND   COALESCE(FGLO.ASIGDEV,0)=0)
      BEGIN
         PRINT 'Voy a Enviar...'

         BEGIN TRY 
		      PRINT 'AQUI LLAMO A GENCONSECUTIVO @IDSEDE='+COALESCE(@IDSEDE,'SIN SEDE')   
            SELECT @CNSENTREGA=''
		      EXEC SPK_GENCONSECUTIVO @COMPANIA,@IDSEDE, '@ENT', @CNSENTREGA OUTPUT  
		      SELECT @CNSENTREGA = @IDSEDE + REPLACE(SPACE(8 - LEN(@CNSENTREGA))+LTRIM(RTRIM(@CNSENTREGA)),SPACE(1),0)
		      PRINT '@CNSENTREGA='+COALESCE(@CNSENTREGA,'')

            INSERT INTO ENT(CNSENTREGA, PROCESO, USUARIOENTREGA, FECHAENTREGA, USUARIORECIBE, USUARIO, COMPANIA, ESTADO, ENT_ENTREGA, ENT_RECIBE, FECHARECIBE, IDSEDE, CERRADO, IDTERCERO, IDPLAN, MSEDE)
            SELECT @CNSENTREGA, 'GLOSAS', @USUARIO, DBO.FNK_GETDATE(), NULL, @USUARIO, @COMPANIA, 0,DBO.FNK_VALORVARIABLE('IDFDEPAUDITORIA'), DBO.FNK_VALORVARIABLE('IDFDEPCARTERA'),
                   NULL, @IDSEDE, 0, NULL, NULL, 0

            INSERT INTO ENTD(CNSENTREGA, NODOCUMENTO, PROCESO, ESTADO, USUARIOVERIFICA, MARCA, VALORENTREGA, OBSERVACION, ENDEVO, CNSDEVOL)
            SELECT @CNSENTREGA, CNSGLO, 'GLOSAS', 0, NULL, 0, NULL,'Enviado desde Respuestas Quasar' , 0, null
            FROM FGLO
            WHERE CNSGLOI=@CNSGLOI
            AND COALESCE(ENAUDITORIA,0)=1
            AND IDDEP=DBO.FNK_VALORVARIABLE('IDFDEPAUDITORIA') 
            AND COALESCE(FGLO.CNSENTDEV,'')=''


            UPDATE FGLO SET CNSENTDEV=@CNSENTREGA,ASIGDEV=1
            FROM FGLO INNER JOIN ENTD ON FGLO.CNSGLO=ENTD.NODOCUMENTO
            WHERE ENTD.CNSENTREGA=@CNSENTREGA
            AND ENTD.PROCESO='GLOSAS'
            AND FGLO.CNSGLOI=@CNSGLOI
            AND COALESCE(ENAUDITORIA,0)=1
            AND IDDEP=DBO.FNK_VALORVARIABLE('IDFDEPAUDITORIA')
            AND COALESCE(FGLO.CNSENTDEV,'')=''
         END TRY
         BEGIN CATCH
            INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE()
         END CATCH   
      END
      ELSE
      BEGIN
         INSERT INTO @TBLERRORES(ERROR)
         SELECT 'Todas las Glosas de Esta Impresión Fueron enviadas a cartera'
      END
      IF(SELECT COUNT(*) FROM @TBLERRORES)>0
      BEGIN
         SELECT 'KO' OK, ERROR FROM @TBLERRORES
         RETURN
      END
      SELECT 'OK' OK,@CNSENTREGA CNSENTREGA 
      RETURN 
   END 
   IF @METODO='RECIBIR_GLOSA'     
   BEGIN         
      SELECT @CNSENTREGA =CNSENTREGA       
      FROM   OPENJSON (@PARAMETROS)
      WITH (           
      CNSENTREGA  VARCHAR(20)   '$.CNSENTREGA'      
      )
      IF EXISTS(SELECT * FROM ENT WHERE CNSENTREGA=@CNSENTREGA AND ESTADO=0  AND ENT_RECIBE=DBO.FNK_VALORVARIABLE('IDFDEPAUDITORIA'))
      BEGIN
         BEGIN TRY           
            UPDATE FGLO SET ENAUDITORIA=1,IDDEP=DBO.FNK_VALORVARIABLE('IDFDEPAUDITORIA')
            FROM FGLO INNER JOIN ENTD ON FGLO.CNSGLO=ENTD.NODOCUMENTO
            WHERE ENTD.CNSENTREGA=@CNSENTREGA
            AND ENTD.PROCESO='GLOSAS'
            AND FGLO.CNSENTREGA=@CNSENTREGA
            AND COALESCE(ENAUDITORIA,0)=0
            AND IDDEP=DBO.FNK_VALORVARIABLE('IDFDEPCARTERA')  

            UPDATE  ENT SET ESTADO=1,USUARIORECIBE=@USUARIO,FECHARECIBE=DBO.FNK_GETDATE() WHERE CNSENTREGA=@CNSENTREGA                         
         END TRY
         BEGIN CATCH
                 INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE()
         END CATCH

      END
      ELSE
      BEGIN
         INSERT INTO @TBLERRORES(ERROR)
         SELECT 'No se Encontro el Conscutivo de entrega o esta en otra Dependencia, verifique e intente de nuevo'
      END
      IF(SELECT COUNT(*) FROM @TBLERRORES)>0
      BEGIN
         SELECT 'KO' OK, ERROR FROM @TBLERRORES
         RETURN
      END
      SELECT 'OK' OK
      RETURN 
   END  
   IF @METODO='ENT_RPTAGLOSA'     
   BEGIN         
      IF NOT EXISTS(SELECT * FROM ENT WHERE USUARIO=@USUARIO AND PROCESO='GLOSAS' AND ESTADO=0 AND CERRADO=0 AND ENT_ENTREGA=DBO.FNK_VALORVARIABLE('IDFDEPAUDITORIA'))
      BEGIN
         BEGIN TRY           
         
		      PRINT 'AQUI LLAMO A GENCONSECUTIVO @IDSEDE='+COALESCE(@IDSEDE,'SIN SEDE')   
            SELECT @CNSENTREGA=''
		      EXEC SPK_GENCONSECUTIVO @COMPANIA,@IDSEDE, '@ENT', @CNSENTREGA OUTPUT  
		      SELECT @CNSENTREGA = @IDSEDE + REPLACE(SPACE(8 - LEN(@CNSENTREGA))+LTRIM(RTRIM(@CNSENTREGA)),SPACE(1),0)
		      PRINT '@CNSENTREGA='+COALESCE(@CNSENTREGA,'')

            INSERT INTO ENT(CNSENTREGA, PROCESO, USUARIOENTREGA, FECHAENTREGA, USUARIORECIBE, USUARIO, COMPANIA, ESTADO, ENT_ENTREGA, ENT_RECIBE, FECHARECIBE, IDSEDE, CERRADO, IDTERCERO, IDPLAN, MSEDE)
            SELECT @CNSENTREGA, 'GLOSAS', @USUARIO, DBO.FNK_GETDATE(), NULL, @USUARIO, @COMPANIA, 0,DBO.FNK_VALORVARIABLE('IDFDEPAUDITORIA'), DBO.FNK_VALORVARIABLE('IDFDEPCARTERA'),
                   NULL, @IDSEDE, 0, NULL, NULL, 0  
         END TRY
         BEGIN CATCH
                 INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE()
         END CATCH                   
      END
      ELSE
      BEGIN
         INSERT INTO @TBLERRORES(ERROR)
         SELECT 'Ya existe una Entrega con este Usuario Abiera, Se debe Cerrar primero 'ERROR
      END
      IF(SELECT COUNT(*) FROM @TBLERRORES)>0
      BEGIN
         SELECT 'KO' OK, ERROR FROM @TBLERRORES
         RETURN
      END
      SELECT 'OK' OK,@CNSENTREGA CNSENTREGA
      RETURN 
   END
   IF @METODO='ENT_CIERRARPTAGLOSA'     
   BEGIN         
      SELECT @CNSENTREGA =CNSENTREGA
      FROM   OPENJSON (@PARAMETROS)
      WITH (           
      CNSENTREGA  VARCHAR(20)   '$.CNSENTREGA'
      ) 
      IF NOT EXISTS(SELECT * FROM ENTD WHERE CNSENTREGA=@CNSENTREGA)
      BEGIN
         SELECT 'KO'OK,'Entrega sin Detalles, no se puede cerrar'ERROR
         RETURN
      END
      IF EXISTS(SELECT * FROM ENT WHERE CNSENTREGA=@CNSENTREGA AND PROCESO='GLOSAS' AND COALESCE(CERRADO,0)=0 AND USUARIOENTREGA=@USUARIO)
      BEGIN
         UPDATE ENT SET CERRADO=1 WHERE USUARIOENTREGA=@USUARIO AND PROCESO='GLOSAS' AND CNSENTREGA=@CNSENTREGA AND COALESCE(CERRADO,0)=0
      END
      ELSE
      BEGIN
         INSERT INTO @TBLERRORES(ERROR)
         SELECT 'No se Encontro el Consecutivo de Entrega, Verfique e intente de nuevo'
      END
      IF(SELECT COUNT(*) FROM @TBLERRORES)>0
      BEGIN
         SELECT 'KO' OK, ERROR FROM @TBLERRORES
         RETURN
      END
      SELECT 'OK' OK
      RETURN 
   END
   IF @METODO='ENT_ADDRESPGLO'     
   BEGIN         
      SELECT @PROCESO =PROCE, @CNSGLO =CNSITEM, @CNSENTREGA =CNSENTREGA
      FROM   OPENJSON (@PARAMETROS)
      WITH (           
      PROCE  VARCHAR(20)   '$.PROCE',
      CNSITEM  VARCHAR(20)   '$.CNSITEM',
      CNSENTREGA  VARCHAR(20)   '$.CNSENTREGA'
      )
      IF EXISTS(SELECT * FROM ENT WHERE CERRADO=0 AND ESTADO=0 AND CNSENTREGA=@CNSENTREGA AND PROCESO='GLOSAS')
      BEGIN
         IF @PROCESO='1'
         BEGIN
            PRINT 'Por Cns Impresión'

            INSERT INTO ENTD(CNSENTREGA, NODOCUMENTO, PROCESO, ESTADO, USUARIOVERIFICA, MARCA, VALORENTREGA, OBSERVACION, ENDEVO, CNSDEVOL)
            SELECT @CNSENTREGA, CNSGLO, 'GLOSAS', 0, NULL, 0, NULL,'Enviado desde Respuestas Quasar' , 0, null
            FROM FGLO
            WHERE CNSGLOI=@CNSGLO
            AND COALESCE(ENAUDITORIA,0)=1
            AND IDDEP=DBO.FNK_VALORVARIABLE('IDFDEPAUDITORIA') 
            AND COALESCE(FGLO.CNSENTDEV,'')=''


            UPDATE FGLO SET CNSENTDEV=@CNSENTREGA,ASIGDEV=1
            FROM FGLO INNER JOIN ENTD ON FGLO.CNSGLO=ENTD.NODOCUMENTO
            WHERE ENTD.CNSENTREGA=@CNSENTREGA
            AND ENTD.PROCESO='GLOSAS'
            AND FGLO.CNSGLOI=@CNSGLO
            AND COALESCE(ENAUDITORIA,0)=1
            AND IDDEP=DBO.FNK_VALORVARIABLE('IDFDEPAUDITORIA')
            AND COALESCE(FGLO.CNSENTDEV,'')=''
         END
         ELSE
         BEGIN
            PRINT 'Por Respuesta'
            INSERT INTO ENTD(CNSENTREGA, NODOCUMENTO, PROCESO, ESTADO, USUARIOVERIFICA, MARCA, VALORENTREGA, OBSERVACION, ENDEVO, CNSDEVOL)
            SELECT @CNSENTREGA, CNSGLO, 'GLOSAS', 0, NULL, 0, NULL,'Enviado desde Respuestas Quasar' , 0, null
            FROM FGLO
            WHERE CNSGLO=@CNSGLO
            AND COALESCE(ENAUDITORIA,0)=1
            AND IDDEP=DBO.FNK_VALORVARIABLE('IDFDEPAUDITORIA') 
            AND COALESCE(FGLO.CNSENTDEV,'')=''


            UPDATE FGLO SET CNSENTDEV=@CNSENTREGA,ASIGDEV=1
            FROM FGLO INNER JOIN ENTD ON FGLO.CNSGLO=ENTD.NODOCUMENTO
            WHERE ENTD.CNSENTREGA=@CNSENTREGA
            AND ENTD.PROCESO='GLOSAS'
            AND CNSGLO=@CNSGLO
            AND COALESCE(ENAUDITORIA,0)=1
            AND IDDEP=DBO.FNK_VALORVARIABLE('IDFDEPAUDITORIA')
            AND COALESCE(FGLO.CNSENTDEV,'')=''
         
         END
      END
      ELSE
      BEGIN
         INSERT INTO @TBLERRORES(ERROR)
         SELECT 'No se Encontro el Cns de Entrega, Verifica e intenta de nuevo'
      END
      IF(SELECT COUNT(*) FROM @TBLERRORES)>0
      BEGIN
         SELECT 'KO' OK, ERROR FROM @TBLERRORES
         RETURN
      END
      SELECT 'OK' OK
      RETURN 
   END 
   IF @METODO='ENTD_BORRARITEM'     
   BEGIN         
      SELECT @CNSENTREGA =CNSENTREGA, @CNSGLO =NODOCUMENTO     
      FROM   OPENJSON (@PARAMETROS)
      WITH (           
      CNSENTREGA  VARCHAR(20)   '$.CNSENTREGA',
      NODOCUMENTO  VARCHAR(20)   '$.NODOCUMENTO'
      )
      IF EXISTS(SELECT * FROM ENT WHERE CNSENTREGA=@CNSENTREGA AND CERRADO=0 AND ESTADO=0 AND PROCESO='GLOSAS')
      BEGIN
         IF EXISTS(SELECT * FROM ENTD WHERE CNSENTREGA=@CNSENTREGA AND NODOCUMENTO=@CNSGLO)
         BEGIN
            DELETE ENTD WHERE CNSENTREGA=@CNSENTREGA AND NODOCUMENTO=@CNSGLO AND PROCESO='GLOSAS'
            UPDATE FGLO SET ASIGDEV=0,CNSENTDEV=NULL WHERE CNSGLO=@CNSGLO
         END
         ELSE
         BEGIN
            INSERT INTO @TBLERRORES(ERROR)
            SELECT 'No fue encontrada la Glosa en esta Entrega'
         END
      END
      ELSE
      BEGIN
         INSERT INTO @TBLERRORES(ERROR)
         SELECT 'No se Encontro el Consecutivo de entrega o esta cerrrado, verifique e intente de nuevo'
      END
      IF(SELECT COUNT(*) FROM @TBLERRORES)>0
      BEGIN
         SELECT 'KO' OK, ERROR FROM @TBLERRORES
         RETURN
      END
      SELECT 'OK' OK
      RETURN               
   END     
END


