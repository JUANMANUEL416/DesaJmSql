CREATE OR ALTER PROCEDURE DBO.SPQ_ANTICIPOS_COL @JSON NVARCHAR(MAX)
	WITH ENCRYPTION
AS
SET DATEFORMAT dmy
DECLARE @TBLERRORES TABLE (ERROR VARCHAR(MAX))
DECLARE  @PARAMETROS NVARCHAR(MAX)			,@MODELO VARCHAR(100)			   ,@METODO VARCHAR(100)
		,@USUARIO VARCHAR(12)				   ,@COMPANIA VARCHAR(2)		      ,@IDSEDE      VARCHAR(5)		
      ,@SYS_COMPUTERNAME VARCHAR(200)     ,@DATOS    VARCHAR(MAX)          ,@PROCESO VARCHAR(20)
      ,@FECHA DATE                        ,@IDBODEGA VARCHAR(20)           ,@TIPOANTICIPO VARCHAR(20)
      ,@IDTERCERO VARCHAR(20)             ,@CCOSTO VARCHAR(20)             ,@IDAREA VARCHAR(20)              
      ,@OBSERVACION VARCHAR(4096)         ,@CNSFCOM VARCHAR(20)            ,@USUARIOORDEN VARCHAR(20)
      ,@CANTIDAD INT                      ,@IDARTICULO VARCHAR(20)         ,@VLR_UNITARIO DECIMAL(14,2)
      ,@DETALLE VARCHAR(20)               ,@IDARTICULOANTE VARCHAR(20)
BEGIN
	SELECT *
	INTO #JSON
	FROM OPENJSON(@json) WITH (
			MODELO VARCHAR(100) '$.MODELO'
			,METODO VARCHAR(100) '$.METODO'
			,USUARIO VARCHAR(12) '$.USUARIO'
			,PARAMETROS NVARCHAR(MAX) AS JSON
	)
	SELECT   @MODELO = MODELO			,@METODO = METODO
			,@PARAMETROS = PARAMETROS	,@USUARIO = USUARIO
	FROM #JSON


   SELECT @IDSEDE=COALESCE(UBEQ.IDSEDE,USUSU.IDSEDE),@COMPANIA=COALESCE(UBEQ.COMPANIA,USUSU.COMPANIA),  
   @SYS_COMPUTERNAME=COALESCE(USUSU.SYS_ComputerName,HOST_NAME())   
   FROM USUSU LEFT JOIN UBEQ ON USUSU.SYS_ComputerName=UBEQ.SYS_ComputerName
   WHERE USUSU.USUARIO=@USUARIO

   IF @METODO='CARGA_IBOD'     
   BEGIN         
      SELECT 'OK'OK
      SELECT IDBODEGA AS value,CONCAT(IDBODEGA,' - ',DESCRIPCION) AS label
      FROM IBOD
      WHERE ESTADO='Activo'
      
      SELECT UBEQ.IDBODEGA,IBOD.DESCRIPCION FROM UBEQ LEFT JOIN IBOD ON UBEQ.IDBODEGA=IBOD.IDBODEGA
      WHERE SYS_ComputerName=@SYS_COMPUTERNAME
      RETURN
   END
   IF @METODO='CRUD_FCOM'     
   BEGIN         
      SELECT @DATOS=DATOS        
      FROM   OPENJSON (@PARAMETROS)
      WITH (           
      DATOS NVARCHAR(MAX) AS JSON 
      )
                 
      SELECT @PROCESO=PROCESO, @FECHA=FECHA, @IDBODEGA=IDBODEGA,@TIPOANTICIPO=TIPOANTICIPO,
         @IDTERCERO=IDTERCERO,@CCOSTO=CCOSTO,@IDAREA=IDAREA,@OBSERVACION=OBSERVACION,
         @USUARIOORDEN=USUARIOORDEN
      FROM   OPENJSON (@DATOS)
      WITH   (    
         PROCESO VARCHAR(20)      '$.PROCESO',
         CNSFCOM VARCHAR(20)      '$.CNSFCOM',
         FECHA DATE               '$.FECHA',
         IDBODEGA VARCHAR(20)     '$.IDBODEGA',
         TIPOANTICIPO VARCHAR(20) '$.TIPOANTICIPO',
         IDTERCERO VARCHAR(20)    '$.IDTERCERO',
         CCOSTO VARCHAR(20)       '$.CCOSTO',
         IDAREA VARCHAR(20)       '$.IDAREA',
         OBSERVACION VARCHAR(20)  '$.OBSERVACION',
         USUARIOORDEN VARCHAR(20) '$.USUARIOORDEN'
      )   
      IF NOT EXISTS(SELECT * FROM TANT WHERE TIPOANTICIPO=@TIPOANTICIPO)
      BEGIN
         INSERT INTO @TBLERRORES(ERROR)
         SELECT 'Tipo de Anticipo no es Valido, verifique e intente de nuevo'
      END
      IF NOT EXISTS(SELECT * FROM TER WHERE IDTERCERO=@IDTERCERO)
      BEGIN
         INSERT INTO @TBLERRORES(ERROR)
         SELECT 'Proveedor no encontrado en el Maestro de Terceros, verifique e intente de nuevo'
      END
      IF NOT EXISTS(SELECT * FROM CEN WHERE CCOSTO=@CCOSTO)
      BEGIN
         INSERT INTO @TBLERRORES(ERROR)
         SELECT 'Centro de costo no encontrado en el Maestro de CCosto, verifique e intente de nuevo'
      END
      IF(SELECT COUNT(*) FROM @TBLERRORES)>0
      BEGIN
         SELECT 'KO' OK, ERROR FROM @TBLERRORES
         RETURN
      END
      IF @PROCESO='Nueva'
      BEGIN 
      
         EXEC SPQ_GENSEQUENCE @SEDE=@IDSEDE,@PREFIJO='@FCOM', @LONGITUD=8 ,@NVOCONSEC=@CNSFCOM OUTPUT

         IF COALESCE(@CNSFCOM,'')<>''
         BEGIN
            BEGIN TRY       
                    INSERT INTO FCOM(CNSFCOM, COMPANIA, IDTERCERO, N_FACTURA, F_FACTURA, F_VENCE, VENDEDOR, ESTADO, 
                    F_CANCELADO, OBSERVACION, VR_ANTESIVA, IVA, VR_TOTAL, CNSFCOT, AJUSTADO, AJUSTEALPESO, ENINVENTARIO, 
                    ENCXP,  VR_DESCUENTO, USUARIO, FECHA, ORDENCOMPRA, USUARIOORDEN, FECHAORDEN, IDBODEGA, CCOSTO, IDAREA, 
                    IDTIPOSER, CODUNG, CODPRG, DCONSUMO, DECONSUMO, TIPOANTICIPO, ESACTIVO, MANTICIPO,  APROVAL, INTEFAX, 
                    CNSMOVRESP, CNSRP, CNSPPTO, CNSCDP, AUTOCOMPRA, USUAUTOCOMPRA, VLR_FLETE, USUAUDITA, IDBODEGA_ORIGEN, PROCEDENCIA)
                    SELECT @CNSFCOM, @COMPANIA, @IDTERCERO, NULL, NULL, NULL, NULL, 'C', NULL, @OBSERVACION, 0, 0, 0, NULL, NULL, NULL,
                    0, 0,  0, @USUARIO, @FECHA, 0, @USUARIOORDEN, @FECHA, @IDBODEGA, @CCOSTO, @IDAREA, 'Ctto', NULL, NULL, NULL,
                    1, @TIPOANTICIPO, 0, 1,  1, 0, NULL, NULL, NULL, NULL, 1, NULL, 0, NULL, NULL, NULL
                    
            END TRY
            BEGIN CATCH
                    INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE()
            END CATCH
         END
         ELSE
         BEGIN
            INSERT INTO @TBLERRORES(ERROR)
            SELECT 'Orden de servicio no Generado, verique los consecutivos de orden'
         END
      END
      IF @PROCESO='Edita'
      BEGIN
         IF EXISTS(SELECT * FROM FCOM WHERE CNSFCOM=@CNSFCOM AND ESTADO='C')
         BEGIN
            UPDATE FCOM SET TIPOANTICIPO=@TIPOANTICIPO,IDTERCERO=@IDTERCERO,CCOSTO=@CCOSTO,
                            OBSERVACION=@OBSERVACION,USUARIOORDEN=@USUARIOORDEN
            WHERE CNSFCOM=@CNSFCOM
         END
         ELSE
         BEGIN
            INSERT INTO @TBLERRORES(ERROR)
            SELECT 'Estado de orden de compra no Permite Cambios'
         END
      END
      IF(SELECT COUNT(*) FROM @TBLERRORES)>0
      BEGIN
         SELECT 'KO' OK, ERROR FROM @TBLERRORES
         RETURN
      END
      SELECT 'OK' OK,@CNSFCOM CNSFCOM
      RETURN 
   END  
   IF @METODO='CRUD_FCOMD'     
   BEGIN         
      SELECT @DATOS=DATOS        
      FROM   OPENJSON (@PARAMETROS)
      WITH (           
      DATOS NVARCHAR(MAX) AS JSON 
      )
                 
      SELECT @CNSFCOM=CNSFCOM, @PROCESO=PROCESO,@CANTIDAD=CANTIDAD, @IDARTICULO=IDARTICULO, @VLR_UNITARIO=VLR_UNITARIO,
             @DETALLE=DETALLE,@IDARTICULOANTE=IDARTICULOANTE     
      FROM   OPENJSON (@DATOS)
      WITH   (  
         CNSFCOM VARCHAR(20)         '$.CNSFCOM',
         PROCESO VARCHAR(20)         '$.PROCESO',
         CANTIDAD DECIMAL(14,2)      '$.CANTIDAD',
         IDARTICULO VARCHAR(20)      '$.IDARTICULO',
         IDARTICULOANTE VARCHAR(20)  '$.IDARTICULOANTE',
         VLR_UNITARIO DECIMAL(14,2)  '$.VLR_UNITARIO',
         DETALLE VARCHAR(20)         '$.DETALLE'    
      )  
      IF EXISTS(SELECT * FROM FCOM WHERE CNSFCOM=@CNSFCOM AND ESTADO='C')
      BEGIN   
         IF EXISTS(SELECT * FROM FCTSERD WHERE  IDSERVICIO=@IDARTICULO)
         BEGIN
            IF @PROCESO='Nuevo'
            BEGIN
               IF EXISTS(SELECT * FROM FCOMD WHERE CNSFCOM=@CNSFCOM AND IDARTICULO=@IDARTICULO)
               BEGIN
                  UPDATE FCOMD SET CANTIDAD=CANTIDAD+@CANTIDAD,VR_TOTAL=(CANTIDAD+@CANTIDAD)*VLR_UNITARIO
                  WHERE CNSFCOM=@CNSFCOM AND IDARTICULO=@IDARTICULO
               END
               ELSE
               BEGIN
                  BEGIN TRY                                              
                     INSERT INTO FCOMD(CNSFCOM, IDARTICULO, ESTADO, VLR_UNITARIO, CANTIDAD, VR_ANTESIVA, IVA, VR_TOTAL, VR_UNITMASIVA, 
                     COMPANIA, TIENEIVA, FACTORIVA, NOLOTE, FECHAVENCE, VR_DESCUENTO, DETALLE, TIPO, IDIMPUESTO,  IDCLASE, UTILIDAD, 
                     TDESCUENTO, TIPODTO, PDTO, IDTUTELD, TEMP, HUMEDAD, DECONSUMO, ODESFERA, OIESFERA, ODCILINDRO, OICILINDRO, ODEJE, 
                     OIEJE, ODADICION, OIADICION, ODALT, OIALT,  ODAVL, OIAVL, ODTLENTE, OITLENTE, ODDNP, OIDNP, CNSFMED, REQAUTCOMP, 
                     CANTISOL, CNSMOV_REF_SOL, IDARTICULO_REF_SOL, CANTIDAD_REF_ENT)
                     SELECT @CNSFCOM, @IDARTICULO, 'P', @VLR_UNITARIO, @CANTIDAD, @VLR_UNITARIO, 0, (@CANTIDAD*@VLR_UNITARIO),
                     @VLR_UNITARIO, @COMPANIA, 0, 0, 'Ctto', null, 0, @DETALLE,'Servicios', NULL,  NULL, 0, 0, 'V', 0, 0, 0, 0, 0, '', 
                     '', '', '', '', '', '','', '', '',  '', '', '', '', '', '', NULL, 0, @CANTIDAD, NULL, NULL, NULL
                  END TRY
                  BEGIN CATCH
                          INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE()
                  END CATCH
               END
            END
            IF @PROCESO='Editar'
            BEGIN
               IF @IDARTICULO<>@IDARTICULOANTE
               BEGIN
                  IF NOT EXISTS(SELECT * FROM FCOMD WHERE CNSFCOM=@CNSFCOM AND IDARTICULO=@IDARTICULO)
                  BEGIN 
                     UPDATE FCOMD SET IDARTICULO=@IDARTICULO, CANTIDAD=@CANTIDAD,VLR_UNITARIO=@VLR_UNITARIO,VR_ANTESIVA=@VLR_UNITARIO,
                                      VR_TOTAL=(@CANTIDAD*@VLR_UNITARIO),VR_UNITMASIVA=(@CANTIDAD*@VLR_UNITARIO),
                                      DETALLE=@DETALLE
                     WHERE CNSFCOM=@CNSFCOM AND IDARTICULO=@IDARTICULOANTE
                  END
               END
               ELSE
               BEGIN
                  UPDATE FCOMD SET IDARTICULO=@IDARTICULO, CANTIDAD=@CANTIDAD,VLR_UNITARIO=@VLR_UNITARIO,VR_ANTESIVA=@VLR_UNITARIO,
                                    VR_TOTAL=(@CANTIDAD*@VLR_UNITARIO),VR_UNITMASIVA=(@CANTIDAD*@VLR_UNITARIO),
                                    DETALLE=@DETALLE
                  WHERE CNSFCOM=@CNSFCOM AND IDARTICULO=@IDARTICULO
               END
            END
            IF @PROCESO='Borrar'
            BEGIN
               DELETE FCOMD WHERE CNSFCOM=@CNSFCOM AND IDARTICULO=@IDARTICULO
            END
         END
         ELSE
         BEGIN
            INSERT INTO @TBLERRORES(ERROR)
            SELECT 'Servicio no encontrado en el maestro de servicios, no se puede continuar'         
         END
      END
      ELSE
      BEGIN
         INSERT INTO @TBLERRORES(ERROR)
         SELECT 'La orden de servicios ya fue Cerrada, no se permiten cambios'
      END
      IF(SELECT COUNT(*) FROM @TBLERRORES)>0
      BEGIN
         SELECT 'KO' OK, ERROR FROM @TBLERRORES
         RETURN
      END
      UPDATE FCOM SET VR_ANTESIVA=F.VR_ANTESIVA,VR_TOTAL=F.VR_TOTAL
      FROM FCOM INNER JOIN (SELECT CNSFCOM,SUM(COALESCE(VR_ANTESIVA,0))VR_ANTESIVA,SUM(COALESCE(VR_TOTAL,0))VR_TOTAL
                            FROM FCOMD WHERE CNSFCOM=@CNSFCOM
                            GROUP BY CNSFCOM) F ON FCOM.CNSFCOM=F.CNSFCOM
      WHERE FCOM.CNSFCOM=@CNSFCOM
      SELECT 'OK' OK
      RETURN 
   END  
   IF @METODO='CERRAR_FCOM'     
   BEGIN         
      SELECT @CNSFCOM=CNSFCOM        
      FROM   OPENJSON (@PARAMETROS)
      WITH (           
      CNSFCOM  VARCHAR(20)   '$.CNSFCOM'
      )
      PRINT '@CNSFCOM='+COALESCE(@CNSFCOM,'SIN ORDEN')
      IF EXISTS(SELECT * FROM FCOM WHERE CNSFCOM=@CNSFCOM AND ESTADO='C')
      BEGIN
         IF EXISTS(SELECT * FROM FCOMD WHERE CNSFCOM=@CNSFCOM)
         BEGIN
            UPDATE FCOM SET ESTADO='P',ORDENCOMPRA=1,USUARIOORDEN=CASE WHEN COALESCE(USUARIOORDEN,'')='' THEN @USUARIO ELSE USUARIOORDEN END
            WHERE CNSFCOM=@CNSFCOM
         END
         ELSE
         BEGIN
            INSERT INTO @TBLERRORES(ERROR)
            SELECT 'Orden de Servicios sin Detalles, Es necesario completar la orden'
         END
      END
      ELSE
      BEGIN
         INSERT INTO @TBLERRORES(ERROR)
         SELECT 'Estado de la orden no valido '
      END   
      IF(SELECT COUNT(*) FROM @TBLERRORES)>0
      BEGIN
         SELECT 'KO' OK, ERROR FROM @TBLERRORES
         RETURN
      END
      SELECT 'OK' OK 
      RETURN 
   END  
   IF @METODO='ENVIAR_CAJA'     
   BEGIN         
      SELECT @CNSFCOM=CNSFCOM,@VLR_UNITARIO=CONVERT(DECIMAL(14,2),VLR_ANTICIPO)       
      FROM   OPENJSON (@PARAMETROS)
      WITH (           
      CNSFCOM  VARCHAR(20)   '$.CNSFCOM',
      VLR_ANTICIPO  VARCHAR(20)   '$.VLR_ANTICIPO'
      )
     IF COALESCE(@VLR_UNITARIO,0)>=0
     BEGIN
        IF EXISTS(SELECT * FROM FCOM WHERE CNSFCOM=@CNSFCOM AND ESTADO NOT IN('C','A'))
        BEGIN
           SELECT @TIPOANTICIPO=TIPOANTICIPO FROM FCOM WHERE CNSFCOM=@CNSFCOM
           BEGIN TRY           
               EXEC SPK_GEN_PROCESO_ANTICIPO @CNSFCOM,@VLR_UNITARIO,@IDSEDE,@USUARIO,@TIPOANTICIPO               
           END TRY
           BEGIN CATCH
                   INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE()
           END CATCH
        END
        ELSE
        BEGIN
           INSERT INTO @TBLERRORES(ERROR)
           SELECT 'La orden de servicios no esta Disponible para hacer anticipos, Verifique e intente de nuevo '
        END
     END
     ELSE
     BEGIN
        INSERT INTO @TBLERRORES(ERROR)
        SELECT 'Inconsistencia en el valor del anticipo, verifique e intente de nuevo '
     END
     IF(SELECT COUNT(*) FROM @TBLERRORES)>0
     BEGIN
        SELECT 'KO' OK, ERROR FROM @TBLERRORES
         RETURN
     END
     SELECT 'OK' OK 
     RETURN 
   END  
END

