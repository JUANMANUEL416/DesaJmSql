CREATE OR ALTER PROCEDURE DBO.SPQ_KMCOM_COL @JSON NVARCHAR(MAX)
	WITH ENCRYPTION
AS
SET DATEFORMAT dmy
DECLARE @TBLERRORES TABLE (ERROR VARCHAR(MAX))
DECLARE  @PARAMETROS NVARCHAR(MAX)			,@MODELO VARCHAR(100)			   ,@METODO VARCHAR(100)
		,@USUARIO VARCHAR(12)				   ,@COMPANIA VARCHAR(2)		      ,@IDSEDE      VARCHAR(5)		
      ,@SYS_COMPUTERNAME VARCHAR(200)     ,@DATOS    VARCHAR(MAX)
      ,@IDMODELOCONT VARCHAR(2)           ,@IDTIPOCONT VARCHAR(20)         ,@IDAREA VARCHAR(20)
      ,@CCOSTO VARCHAR(20)                ,@CLASECONT VARCHAR(20)          ,@PROCESO VARCHAR(20)
      ,@PREFIJO VARCHAR(20)               ,@CUENTADB VARCHAR(20)           ,@CUENTACR VARCHAR(20)
      ,@CUENTAIPS VARCHAR(20)             ,@PGP BIT                        ,@CUENTAPGP VARCHAR(20)
      ,@CAPITA BIT                        ,@CUENTACAPI VARCHAR(20)         ,@TIPO  VARCHAR(4)
                                                                            

BEGIN
	SELECT *
	INTO #JSON
	FROM OPENJSON(@json) WITH (
			MODELO VARCHAR(100) '$.MODELO'
			,METODO VARCHAR(100) '$.METODO'
			,USUARIO VARCHAR(12) '$.USUARIO'
			,PARAMETROS NVARCHAR(MAX) AS JSON
	)

	SELECT   @MODELO = MODELO			,@METODO = METODO
			,@PARAMETROS = PARAMETROS	,@USUARIO = USUARIO
	FROM #JSON
   IF @METODO='TRAER_KTCO'     
   BEGIN     
      SELECT 'OK'OK
      SELECT IDTIPOCONT,DESCRIPCION
      FROM KTCO
      ORDER BY IDTIPOCONT
      RETURN
   END 
   IF @METODO='TRAE_CUENTAS'     
   BEGIN         
      SELECT @IDTIPOCONT=IDTIPOCONT,@PREFIJO=PREFIJO,@CCOSTO=CCOSTO
      FROM   OPENJSON (@PARAMETROS)
      WITH (           
        IDTIPOCONT  VARCHAR(20)   '$.IDTIPOCONT',
        PREFIJO  VARCHAR(20)   '$.PREFIJO',
        CCOSTO  VARCHAR(20)   '$.CCOSTO'
      )

      SELECT 'OK'OK, CUENTADB,CUE.NOMCUENTA AS NOMCUENTADB,CUENTACR, X.NOMCUENTA AS NOMCUENTACR
      FROM(
      SELECT COALESCE(DB.IDTIPOCONT,CR.IDTIPOCONT)IDTIPOCONT,COALESCE(DB.PREFIJO,CR.PREFIJO)PREFIJO,COALESCE(DB.CCOSTO,CR.CCOSTO)CCOSTO,
             COALESCE(DB.CUENTADB,'')CUENTADB, COALESCE(CUENTACR,'')CUENTACR
      FROM (SELECT IDTIPOCONT,CCOSTO,PREFIJO, CUENTA AS CUENTADB FROM KMCOM  WHERE TIPO='DB') DB 
            LEFT JOIN 
            (SELECT IDTIPOCONT,CCOSTO,PREFIJO, CUENTA AS CUENTACR FROM KMCOM  WHERE TIPO='CR')CR
            ON DB.IDTIPOCONT=CR.IDTIPOCONT AND DB.CCOSTO=CR.CCOSTO AND DB.PREFIJO=CR.PREFIJO ) KM
            LEFT JOIN CUE ON KM.CUENTADB=CUE.CUENTA
            LEFT JOIN CUE X ON KM.CUENTACR=X.CUENTA
      WHERE KM.IDTIPOCONT=@IDTIPOCONT AND CCOSTO=@CCOSTO AND PREFIJO=@PREFIJO

      IF @IDTIPOCONT='VENTAS'
      BEGIN
         SELECT KMCOM.CUENTAIPS,CUE.NOMCUENTA AS NOMCUENTAIPS, KMCOM.CUECRPGP, P.NOMCUENTA AS NOMCUENTAPGP,
                KMCOM.CUECRCAP
         FROM KMCOM LEFT JOIN CUE ON KMCOM.CUENTAIPS=CUE.CUENTA
                    LEFT JOIN CUE AS P ON KMCOM.CUECRPGP=P.CUENTA
                    LEFT JOIN CUE AS C ON KMCOM.CUECRCAP=C.CUENTA

      END
                 
   END  
   IF @METODO='CRUD_KMCOM'     
   BEGIN   
   

      SELECT @DATOS=DATOS        
      FROM   OPENJSON (@PARAMETROS)
      WITH (           
      DATOS NVARCHAR(MAX) AS JSON 
      )                
      SELECT @IDMODELOCONT=IDMODELOCONT, @IDTIPOCONT=IDTIPOCONT, @IDAREA=IDAREA, @CCOSTO=CCOSTO, @CLASECONT=CLASECONT,
             @PROCESO=PROCESO,  @PREFIJO=PREFIJO, @CUENTADB=CUENTADB, @CUENTACR=CUENTACR, @CUENTAIPS=CUENTAIPS, 
             @PGP=CASE WHEN COALESCE(PGP,'false')='true' THEN 1 ELSE 0 END, @CUENTAPGP=CUENTAPGP,@TIPO =TIPO,
             @CAPITA=CASE WHEN COALESCE(CAPITA,'false')='true' THEN 1 ELSE 0 END,   @CUENTACAPI=CUENTACAPI
      FROM   OPENJSON (@DATOS)
      WITH   ( 
         IDMODELOCONT VARCHAR(3)     '$.IDMODELOCONT',
         IDTIPOCONT VARCHAR(20)      '$.IDTIPOCONT',
         IDAREA VARCHAR(20)          '$.IDAREA',
         CCOSTO VARCHAR(20)          '$.CCOSTO',
         CLASECONT VARCHAR(20)       '$.CLASECONT',
         PROCESO VARCHAR(20)         '$.PROCESO',
         NOMAREA VARCHAR(20)         '$.NOMAREA',
         PREFIJO VARCHAR(20)         '$.PREFIJO',
         CUENTADB VARCHAR(20)        '$.CUENTADB',
         CUENTACR VARCHAR(20)        '$.CUENTACR',
         CUENTAIPS VARCHAR(20)       '$.CUENTAIPS',
         PGP VARCHAR(20)             '$.PGP',
         CUENTAPGP VARCHAR(20)       '$.CUENTAPGP',
         CAPITA VARCHAR(20)          '$.CAPITA',
         TIPO  VARCHAR(20)           '$.TIPO',
         CUENTACAPI VARCHAR(20)      '$.CUENTACAPI'
      )  
      IF @PROCESO='Nuevo'
      BEGIN
         IF @IDTIPOCONT<>'VENTAS'
         BEGIN
            IF NOT EXISTS(SELECT * FROM KMCOM WHERE IDTIPOCONT=@IDTIPOCONT AND PREFIJO=@PREFIJO AND CCOSTO=@CCOSTO AND CUENTA=@CUENTADB)
            BEGIN
               INSERT INTO KMCOM(IDMODELOCONT, IDTIPOCONT, TIPO, PREFIJO, IDAREA, CCOSTO, CUENTA, CLASECONT, ESTADO, CUENTAIPS, NIIF, CTA_PASIVOEST, MPGP, CUECRPGP, MCAPITA, CUECRCAP)
               SELECT @IDMODELOCONT,@IDTIPOCONT,'DB',@PREFIJO,@IDAREA,@CCOSTO,@CUENTADB,@CLASECONT,NULL,NULL,0,NULL,NULL,NULL,NULL,NULL
            END
         END
         INSERT INTO KMCOM(IDMODELOCONT, IDTIPOCONT, TIPO, PREFIJO, IDAREA, CCOSTO, CUENTA, CLASECONT, ESTADO, CUENTAIPS, NIIF, 
                           CTA_PASIVOEST, MPGP, CUECRPGP, MCAPITA, CUECRCAP)
         SELECT @IDMODELOCONT,@IDTIPOCONT,'CR',@PREFIJO,@IDAREA,@CCOSTO,@CUENTADB,@CLASECONT,NULL,
                IIF(@IDTIPOCONT='VENTAS',@CUENTAIPS,NULL),0,NULL,IIF(@IDTIPOCONT='VENTAS',@PGP,NULL),IIF(@IDTIPOCONT='VENTAS',@CUENTAPGP,NULL)
               ,IIF(@IDTIPOCONT='VENTAS',@CAPITA,NULL),IIF(@IDTIPOCONT='VENTAS',@CUENTACAPI,NULL)
      END
      IF @PROCESO='Editar'
      BEGIN
         UPDATE KMCOM SET CUENTA=CASE WHEN TIPO='DB' THEN @CUENTADB ELSE @CUENTACR END,CLASECONT=@CLASECONT 
         WHERE KMCOM.IDTIPOCONT=@IDTIPOCONT AND PREFIJO=@PREFIJO
         AND CCOSTO=@CCOSTO AND TIPO=@TIPO
         AND IDAREA=@IDAREA
      END
      IF @PROCESO='Borrar'
      BEGIN
         DELETE KMCOM  WHERE KMCOM.IDTIPOCONT=@IDTIPOCONT AND PREFIJO=@PREFIJO
         AND CCOSTO=@CCOSTO AND TIPO=@TIPO
         AND IDAREA=@IDAREA      
      END
      IF(SELECT COUNT(*) FROM @TBLERRORES)>0
      BEGIN
         SELECT 'KO' OK, ERROR FROM @TBLERRORES
         RETURN
      END
      SELECT 'OK' OK
      RETURN 

   END  

END

