CREATE OR ALTER PROCEDURE DBO.SPQ_FTR_HADM_COL @JSON NVARCHAR(MAX)
	WITH ENCRYPTION
AS
SET DATEFORMAT dmy
DECLARE @TBLERRORES TABLE (ERROR VARCHAR(MAX))
DECLARE  @PARAMETROS NVARCHAR(MAX)			,@MODELO VARCHAR(100)			   ,@METODO VARCHAR(100)
		,@USUARIO VARCHAR(12)				   ,@COMPANIA VARCHAR(2)		      ,@IDSEDE      VARCHAR(5)		
		,@PREFIJO   VARCHAR(20)       		,@SYS_COMPUTERNAME VARCHAR(200)	,@CNSLOG	VARCHAR(20)			        	
		,@IDMODELOAG VARCHAR(12)	         ,@PROCESO VARCHAR(100)= 'INSERT'	
		,@NOADMISION VARCHAR(20)            ,@CNSRPDX VARCHAR(20)             ,@EXISTE INT
		,@ITEMRPDX   INT                    ,@FECHAFAC DATE                   ,@NIT VARCHAR(20)
		,@F_CORTE  DATETIME                 ,@NOAUTORIZA VARCHAR(20)          ,@F_INICIAL DATETIME
		,@F_FINIAL DATETIME                 ,@HADMAUT_ID INT
	BEGIN
	SELECT *
	INTO #JSON
	FROM OPENJSON(@json) WITH (
			MODELO VARCHAR(100) '$.MODELO'
			,METODO VARCHAR(100) '$.METODO'
			,USUARIO VARCHAR(12) '$.USUARIO'
			,PARAMETROS NVARCHAR(MAX) AS JSON
	)

	SELECT @MODELO = MODELO			,@METODO = METODO
			,@PARAMETROS = PARAMETROS	,@USUARIO = USUARIO
	FROM #JSON


	IF @METODO = 'HADM_TIPOADM'
	BEGIN
		SELECT 'OK' AS OK

		SELECT DISTINCT COALESCE(HTAD.TIPOADM,'00') value ,COALESCE(HTAD.DESCRIPCION,'Sin Sede Asociada') label
		FROM HTAD 
		RETURN
	END
	IF @METODO = 'HADM_LISTAAUT'
	BEGIN
		SELECT @NOADMISION=NOADMISION    
		FROM   OPENJSON (@PARAMETROS)
		WITH (           
				NOADMISION VARCHAR(20) '$.NOADMISION'
			)   
		SELECT 'OK' AS OK
		SELECT DISTINCT COALESCE(HADMAUT.AUTORIZACION,'00') value ,COALESCE(HADMAUT.AUTORIZACION+' - Desde '+CONVERT(VARCHAR,F_INICIAL,103)+' Hasta '+CONVERT(VARCHAR,F_FINAL,103),'Sin Autorización') label
		FROM HADMAUT 
		WHERE NOADMISION=@NOADMISION
		AND COALESCE(N_FACTURA,'')=''
		RETURN
	END
	IF @METODO = 'GET_HADMF'
	BEGIN
		SELECT 'OK' OK

		SELECT HADMF.*, TER.RAZONSOCIAL, FTR.FECHAFAC, FTR.VR_TOTAL, FTR.USUARIOFACTURA FROM HADMF
		INNER JOIN FTR ON FTR.CNSFCT = HADMF.CNSFCT
		INNER JOIN TER ON TER.IDTERCERO = HADMF.IDTERCERO
		WHERE NOADMISION = JSON_VALUE(@PARAMETROS, '$.NOADMISION')
		RETURN
	END

	IF @METODO='PREPARAR_HADM'     
	BEGIN
	BEGIN TRY
		SELECT @NOADMISION=NOADMISION    
		FROM   OPENJSON (@PARAMETROS)
		WITH (           
				NOADMISION VARCHAR(20) '$.NOADMISION'
			)           
         
		IF NOT EXISTS(SELECT * FROM HADM WHERE NOADMISION=@NOADMISION AND COALESCE(FACTURABLE,0)=1 AND CLASEING='A')
		BEGIN
			SELECT 'KO'KO,' Numero de Admisión no Encontrado'ERROR
			RETURN
		END
		IF NOT EXISTS(SELECT * FROM HADM WHERE NOADMISION=@NOADMISION AND CERRADA=1)
		BEGIN
			SELECT 'KO' KO, 'Paciente no ha Sido Dado de Alta '+CASE COALESCE(CERRADA,0) WHEN 0 THEN 'Medica' WHEN 2 THEN  'Enfermeria' 
			WHEN 3 THEN 'Administrativa' END ERROR FROM HADM WHERE NOADMISION=@NOADMISION
			RETURN 
		END
		IF EXISTS(SELECT * FROM PPT INNER JOIN HADM ON PPT.IDTERCERO=HADM.IDTERCERO AND PPT.IDPLAN=HADM.IDPLAN 
               WHERE (COALESCE(CAPITADO,0)=1 OR COALESCE(PFACTURARIND,0)=0) AND HADM.NOADMISION=@NOADMISION )
		BEGIN
         IF NOT EXISTS(SELECT * FROM HADM INNER JOIN HPRE ON HADM.NOADMISION=HPRE.NOADMISION 
                                    INNER JOIN PPT ON HPRE.IDTERCEROCA=PPT.IDTERCERO AND HPRE.IDPLAN=HPRE.IDPLAN 
                   WHERE (COALESCE(CAPITADO,0)=0 OR COALESCE(PFACTURARIND,0)=1) 
                   AND HADM.NOADMISION=@NOADMISION )
         BEGIN
			   SELECT 'KO' KO,'Contrato Capitado O Masivo. no se puede Facturar Individualmente 'ERROR
			   RETURN
         END
		END
		IF EXISTS(SELECT * FROM HADM WHERE NOADMISION=@NOADMISION AND TIPOADM=DBO.FNK_VALORVARIABLE('IDTARIFASOAT'))
		BEGIN
			--SELECT 'KO' KO,'Accidente de Tránsito Desarrollo en proceso. 'ERROR
			--RETURN
			EXEC DBO.SPQ_FTR_CXC_SOAT @JSON
			IF EXISTS(SELECT 1 FROM HADM_S WHERE NOADMISION = @NOADMISION)
			BEGIN
			SELECT CAST(1 AS BIT) ISSOAT
			SELECT * FROM HADM_S WHERE NOADMISION = @NOADMISION
			SELECT * FROM HADM_T WHERE NOADMISION = @NOADMISION
			SELECT TER.RAZONSOCIAL ASEGURADORA, HADM.IDPLAN, TER2.RAZONSOCIAL ADRES, DBO.FNK_VALORVARIABLE('IDPLANFONSAT') PLANADRES FROM HADM 
			INNER JOIN TER ON TER.IDTERCERO = HADM.IDTERCERO
			INNER JOIN TER TER2 ON TER2.IDTERCERO = DBO.FNK_VALORVARIABLE('IDNITFONSAT')
			AND NOADMISION = @NOADMISION
			END
			RETURN
		END
		SELECT @IDSEDE=COALESCE(UBEQ.IDSEDE,USUSU.IDSEDE),@COMPANIA=COALESCE(UBEQ.COMPANIA,USUSU.COMPANIA)
		FROM USUSU LEFT JOIN UBEQ ON USUSU.SYS_ComputerName=UBEQ.SYS_ComputerName
		WHERE USUARIO=@USUARIO

		SELECT @CNSRPDX=''
		EXEC SPK_GENCONSECUTIVO @COMPANIA,@IDSEDE,'@RPDX', @CNSRPDX OUTPUT  
		SELECT @CNSRPDX = @IDSEDE + REPLACE(SPACE(8 - LEN(@CNSRPDX))+LTRIM(RTRIM(@CNSRPDX)),SPACE(1),0)

		PRINT 'REVISO LA ADMISION'

		EXEC SPK_ESTADO_ADMI @NOADMISION,@CNSRPDX,'F'

		SELECT @EXISTE=COUNT(*)  FROM RPDX WHERE CNS=@CNSRPDX

		IF COALESCE(@EXISTE,0)>0
		BEGIN
			SELECT 'KO' KO, NOMBRE AS ERROR FROM RPDX WHERE CNS=@CNSRPDX
			DELETE  RPDX WHERE CNS=@CNSRPDX
			RETURN
		END

		EXEC SPK_AFACTURAR @NOADMISION,@CNSRPDX
		SELECT 'OK' OK,CNS CNSRPDX,RPDX.ITEM, TER.NIT AS IDTERCERO,TER.RAZONSOCIAL,RPDX.ID1 AS IDPLAN,RPDX.NOMBRE DESCRIPCION,
		RPDX.CANTIDAD2 NROITEMS,RPDX.VALOR2 VR_TOTAL,RPDX.VALOR3 VR_COPAGOS,RPDX.VALOR4 VR_EXCEDENTE,RPDX.ID5 TTEC
		FROM RPDX INNER JOIN TER ON RPDX.IDTERCERO=TER.IDTERCERO
		WHERE CNS=@CNSRPDX
		RETURN
	END TRY

	BEGIN CATCH
		INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE()
	END CATCH

	IF(SELECT COUNT(*) FROM @TBLERRORES) >0
	BEGIN
		SELECT 'KO' OK, ERROR FROM @TBLERRORES
		RETURN
	END
	END   
	IF @METODO='FACTHADM_ITEM'     
	BEGIN         
		SELECT @NOADMISION=NOADMISION,@CNSRPDX=CNSRPDX,@ITEMRPDX=CONVERT(INT,RPDXITEM),@NOAUTORIZA=NOAUTORIZA
		FROM   OPENJSON (@PARAMETROS)
		WITH (           
		NOADMISION VARCHAR(20)  '$.NOADMISION',
		CNSRPDX    VARCHAR(20)  '$.CNSRPDX',
		RPDXITEM   VARCHAR(20)  '$.RPDXITEM',
		NOAUTORIZA VARCHAR(20)  '$.NOAUTORIZA'
			)  
		PRINT '@ITEMRPDX='   +STR(@ITEMRPDX)
		IF NOT EXISTS(SELECT * FROM HADM WHERE NOADMISION=@NOADMISION AND COALESCE(FACTURABLE,0)=1 AND CLASEING='A')
		BEGIN
			SELECT 'KO'KO,' Numero de Admisión no Encontrado'ERROR
			RETURN
		END
      PRINT 'Verifico de nuevo el contrato'
      IF EXISTS(SELECT * FROM PPT INNER JOIN RPDX ON PPT.IDTERCERO=RPDX.IDTERCERO AND PPT.IDPLAN=RPDX.ID1
                WHERE RPDX.ITEM=@ITEMRPDX
                AND  (COALESCE(CAPITADO,0)=1 OR COALESCE(PFACTURARIND,0)=0))
      BEGIN
			SELECT 'KO' KO,'Contrato Capitado O Masivo. no se puede Facturar Individualmente 'ERROR
			RETURN         
      END
		PRINT 'VALIDO PERIODOS CONTABLES'
		SELECT @FECHAFAC=DBO.FNK_GETDATE()
		IF NOT EXISTS(SELECT * FROM PRI WHERE FECHA_INI<=@FECHAFAC AND FECHA_FIN>@FECHAFAC AND COALESCE(CERRADO,0)=0 AND COALESCE(CERRADO_FAC,0)=0)
		BEGIN
			SELECT 'KO'KO,' Periodo Contable Cerrado o no existe, Verifique e intente de nuevo'ERROR
			RETURN
		END
		SELECT @EXISTE=COUNT(*) FROM HPRE INNER JOIN HPRED ON HPRE.NOPRESTACION=HPRED.NOPRESTACION
		WHERE HPRE.NOADMISION=@NOADMISION
		AND COALESCE(HPRED.FACTURADA,0)=0
		AND COALESCE(HPRED.N_FACTURA,'')=''
		AND COALESCE(HPRED.NOCOBRABLE,0)=0
		AND COALESCE(HPRED.ANULADO,0)=0
		IF @EXISTE<=0
		BEGIN
			SELECT 'KO' KO,' No hay items para Facturar' ERROR
			RETURN
		END
		IF DBO.FNK_VALORVARIABLE('FACTSEDE')='SI'
		BEGIN
			SELECT @IDSEDE=IDSEDE,@COMPANIA='01' FROM HADM WHERE NOADMISION=@NOADMISION
			IF DBO.FNK_VALORVARIABLE('FACTSEDEEQUIPO')='SI'
			BEGIN
			SELECT @IDSEDE=COALESCE(UBEQ.IDSEDE,USUSU.IDSEDE),@COMPANIA=COALESCE(UBEQ.COMPANIA,USUSU.COMPANIA)
			FROM USUSU LEFT JOIN UBEQ ON USUSU.SYS_ComputerName=UBEQ.SYS_ComputerName
			WHERE USUARIO=@USUARIO
			END
		END
		ELSE
		BEGIN
			IF DBO.FNK_VALORVARIABLE('IDSEDEPRINCIPAL')<>''
			BEGIN
			SELECT @IDSEDE=LTRIM(RTRIM(DBO.FNK_VALORVARIABLE('IDSEDEPRINCIPAL')))
			END
			IF NOT EXISTS(SELECT * FROM SED WHERE IDSEDE=@IDSEDE)
			BEGIN
			SELECT @IDSEDE=COALESCE(UBEQ.IDSEDE,USUSU.IDSEDE),@COMPANIA=COALESCE(UBEQ.COMPANIA,USUSU.COMPANIA)
			FROM USUSU LEFT JOIN UBEQ ON USUSU.SYS_ComputerName=UBEQ.SYS_ComputerName
			WHERE USUARIO=@USUARIO
			END
		END
		SELECT @SYS_COMPUTERNAME=UBEQ.SYS_ComputerName         
		FROM USUSU LEFT JOIN UBEQ ON USUSU.SYS_ComputerName=UBEQ.SYS_ComputerName
		WHERE USUARIO=@USUARIO
		SELECT @NIT=NIT FROM SED WHERE IDSEDE=@IDSEDE
		IF COALESCE(@NIT,'')='' OR NOT EXISTS(SELECT * FROM TER WHERE NIT=@NIT AND ESTADO='Activo')
		BEGIN
			SELECT @NIT=NIT FROM TER WHERE IDTERCERO=DBO.FNK_VALORVARIABLE('IDTERCEROINSTALADO')
		END
		IF COALESCE(@COMPANIA,'')=''
		BEGIN
			SELECT @COMPANIA='01'
		END
		PRINT 'VOY A FACTURAR ITEM'
		BEGIN TRY 
			UPDATE RPDX SET ID10=@NOAUTORIZA WHERE CNS=@CNSRPDX AND ITEM=@ITEMRPDX
			EXEC SPK_FACTURA_ASIS @NOADMISION, @NIT,@COMPANIA,@IDSEDE,@USUARIO,@SYS_COMPUTERNAME,@CNSRPDX,@ITEMRPDX                
		END TRY
		BEGIN CATCH
			INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE()
		END CATCH
		IF(SELECT COUNT(*) FROM @TBLERRORES)>0
		BEGIN
			SELECT 'KO' OK, ERROR FROM @TBLERRORES
			RETURN
		END
		SELECT 'OK' OK
		RETURN 
	END   

-- QUERY 2
	IF @METODO='FACTHADM_TODO'     
	BEGIN         
		SELECT @NOADMISION=NOADMISION,@CNSRPDX=CNSRPDX,@NOAUTORIZA=NOAUTORIZA
		FROM   OPENJSON (@PARAMETROS)
		WITH (           
		NOADMISION VARCHAR(20)  '$.NOADMISION',
		CNSRPDX    VARCHAR(20)  '$.CNSRPDX',
		NOAUTORIZA VARCHAR(20)  '$.NOAUTORIZA'

			)  
		PRINT '@ITEMRPDX='   +STR(@ITEMRPDX)
		IF NOT EXISTS(SELECT * FROM HADM WHERE NOADMISION=@NOADMISION AND COALESCE(FACTURABLE,0)=1 AND CLASEING='A')
		BEGIN
			SELECT 'KO'KO,' Numero de Admisión no Encontrado'ERROR
			RETURN
		END
		PRINT 'VALIDO PERIODOS CONTABLES'
		SELECT @FECHAFAC=DBO.FNK_GETDATE()
		IF NOT EXISTS(SELECT * FROM PRI WHERE FECHA_INI<=@FECHAFAC AND FECHA_FIN>@FECHAFAC AND COALESCE(CERRADO,0)=0 AND COALESCE(CERRADO_FAC,0)=0)
		BEGIN
			SELECT 'KO'KO,' Periodo Contable Cerrado o no existe, Verifque e intente de nuevo'ERROR
			RETURN
		END
		SELECT @EXISTE=COUNT(*) FROM HPRE INNER JOIN HPRED ON HPRE.NOPRESTACION=HPRED.NOPRESTACION
		WHERE HPRE.NOADMISION=@NOADMISION
		AND COALESCE(HPRED.FACTURADA,0)=0
		AND COALESCE(HPRED.N_FACTURA,'')=''
		AND COALESCE(HPRED.NOCOBRABLE,0)=0
		AND COALESCE(HPRED.ANULADO,0)=0
		IF @EXISTE<=0
		BEGIN
			SELECT 'KO' KO,' No hay items para Facturar' ERROR
			RETURN
		END
		IF DBO.FNK_VALORVARIABLE('FACTSEDE')='SI'
		BEGIN
			SELECT @IDSEDE=IDSEDE,@COMPANIA='01' FROM HADM WHERE NOADMISION=@NOADMISION
			IF DBO.FNK_VALORVARIABLE('FACTSEDEEQUIPO')='SI'
			BEGIN
			SELECT @IDSEDE=COALESCE(UBEQ.IDSEDE,USUSU.IDSEDE),@COMPANIA=COALESCE(UBEQ.COMPANIA,USUSU.COMPANIA)
			FROM USUSU LEFT JOIN UBEQ ON USUSU.SYS_ComputerName=UBEQ.SYS_ComputerName
			WHERE USUARIO=@USUARIO
			END
		END
		ELSE
		BEGIN
			IF DBO.FNK_VALORVARIABLE('IDSEDEPRINCIPAL')<>''
			BEGIN
			SELECT @IDSEDE=LTRIM(RTRIM(DBO.FNK_VALORVARIABLE('IDSEDEPRINCIPAL')))
			END
			IF NOT EXISTS(SELECT * FROM SED WHERE IDSEDE=@IDSEDE)
			BEGIN
			SELECT @IDSEDE=COALESCE(UBEQ.IDSEDE,USUSU.IDSEDE),@COMPANIA=COALESCE(UBEQ.COMPANIA,USUSU.COMPANIA)
			FROM USUSU LEFT JOIN UBEQ ON USUSU.SYS_ComputerName=UBEQ.SYS_ComputerName
			WHERE USUARIO=@USUARIO
			END
		END
		SELECT @SYS_COMPUTERNAME=UBEQ.SYS_ComputerName         
		FROM USUSU LEFT JOIN UBEQ ON USUSU.SYS_ComputerName=UBEQ.SYS_ComputerName
		WHERE USUARIO=@USUARIO
		SELECT @NIT=NIT FROM SED WHERE IDSEDE=@IDSEDE
		IF COALESCE(@NIT,'')='' OR NOT EXISTS(SELECT * FROM TER WHERE NIT=@NIT AND ESTADO='Activo')
		BEGIN
			SELECT @NIT=NIT FROM TER WHERE IDTERCERO=DBO.FNK_VALORVARIABLE('IDTERCEROINSTALADO')
		END
		IF COALESCE(@COMPANIA,'')=''
		BEGIN
			SELECT @COMPANIA='01'
		END
		PRINT 'VOY A FACTURAR TODAS'
		BEGIN TRY      
			UPDATE RPDX SET ID10=@NOAUTORIZA WHERE CNS=@CNSRPDX AND ITEM=@ITEMRPDX
			EXEC SPK_FACTURA_ASIS_T  @NOADMISION, @NIT,@COMPANIA,@IDSEDE,@USUARIO,@SYS_COMPUTERNAME,@CNSRPDX,1,@FECHAFAC                
		END TRY
		BEGIN CATCH
			INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE()
		END CATCH
		IF(SELECT COUNT(*) FROM @TBLERRORES)>0
		BEGIN
			SELECT 'KO' OK, ERROR FROM @TBLERRORES
			RETURN
		END
		SELECT 'OK' OK
		RETURN 
	END   

	IF @METODO='PREPARAR_HADMCORTE'     
	BEGIN         
		SELECT @NOADMISION=NOADMISION, @F_CORTE=CONVERT(DATETIME,F_CORTE)  
		FROM   OPENJSON (@PARAMETROS)
		WITH (           
				NOADMISION VARCHAR(20) '$.NOADMISION',
				F_CORTE DATE '$.FECHACORTE'
			)           
         
		IF NOT EXISTS(SELECT * FROM HADM WHERE NOADMISION=@NOADMISION AND COALESCE(FACTURABLE,0)=1 AND CLASEING='A')
		BEGIN
			SELECT 'KO'KO,' Numero de Admisión no Encontrado'ERROR
			RETURN
		END
		IF NOT EXISTS(SELECT * FROM HADM WHERE NOADMISION=@NOADMISION AND CERRADA=0)
		BEGIN
			SELECT 'KO' KO, ' Admision Cerrada, no se permite hacer Factura por Corte' ERROR
			RETURN 
		END
		IF EXISTS(SELECT * FROM PPT INNER JOIN HADM ON PPT.IDTERCERO=HADM.IDTERCERO AND PPT.IDPLAN=HADM.IDPLAN 
				WHERE (COALESCE(CAPITADO,0)=1 OR COALESCE(PFACTURARIND,0)=0) AND HADM.NOADMISION=@NOADMISION )
		BEGIN
			SELECT 'KO' KO,'Contrato Capitado O Masivo. no se puede Facturar Individualmente 'ERROR
			RETURN
		END
		IF @F_CORTE>DBO.FNK_GETDATE()
		BEGIN
			SELECT 'KO' KO,' Fecha de Corte mayor a la fecha actual, no se puede continuar 'ERROR
			RETURN         
		END
		IF NOT EXISTS(SELECT * FROM HADM WHERE NOADMISION=@NOADMISION AND CONVERT(DATE,FECHA)<=@F_CORTE)
		BEGIN
			SELECT 'KO' KO,' Fecha de Corte Menor  a la fecha de la Admision, no se puede continuar 'ERROR
			RETURN           
		END
		IF EXISTS(SELECT * FROM HADM WHERE NOADMISION=@NOADMISION AND TIPOADM=DBO.FNK_VALORVARIABLE('IDTARIFASOAT'))
		BEGIN
			SELECT 'KO' KO,'Accidente de Tránsito NO puede tener corte de cuenta. 'ERROR
			RETURN
		END
		SELECT @IDSEDE=COALESCE(UBEQ.IDSEDE,USUSU.IDSEDE),@COMPANIA=COALESCE(UBEQ.COMPANIA,USUSU.COMPANIA)
		FROM USUSU LEFT JOIN UBEQ ON USUSU.SYS_ComputerName=UBEQ.SYS_ComputerName
		WHERE USUARIO=@USUARIO

		SELECT @CNSRPDX=''
		EXEC SPK_GENCONSECUTIVO @COMPANIA,@IDSEDE,'@RPDX', @CNSRPDX OUTPUT  
		SELECT @CNSRPDX = @IDSEDE + REPLACE(SPACE(8 - LEN(@CNSRPDX))+LTRIM(RTRIM(@CNSRPDX)),SPACE(1),0)

		PRINT 'REVISO LA ADMISION'
		EXEC SPK_ESTADO_CORTECUENTA @NOADMISION,@CNSRPDX,@F_CORTE,''

		SELECT @EXISTE=COUNT(*)  FROM RPDX WHERE CNS=@CNSRPDX

		IF COALESCE(@EXISTE,0)>0
		BEGIN
			SELECT 'KO' KO, NOMBRE AS ERROR FROM RPDX WHERE CNS=@CNSRPDX
			DELETE  RPDX WHERE CNS=@CNSRPDX
			RETURN
		END
		SELECT @F_CORTE=DATEADD(DAY,1,@F_CORTE)

		EXEC SPK_AFACTURAR_CORTE @NOADMISION,@CNSRPDX,@F_CORTE,''
		IF EXISTS(SELECT * FROM RPDX WHERE CNS=@CNSRPDX)
		BEGIN
			SELECT 'OK' OK,CNS CNSRPDX,RPDX.ITEM, TER.NIT AS IDTERCERO,TER.RAZONSOCIAL,RPDX.ID1 AS IDPLAN,RPDX.NOMBRE DESCRIPCION,
			RPDX.CANTIDAD2 NROITEMS,RPDX.VALOR1 VR_TOTAL,RPDX.VALOR2 VR_COPAGOS,(RPDX.VALOR1-RPDX.VALOR2) VR_EXCEDENTE,RPDX.ID5 TTEC
			FROM RPDX INNER JOIN TER ON RPDX.IDTERCERO=TER.IDTERCERO
			WHERE CNS=@CNSRPDX
			RETURN
		END
		ELSE
		BEGIN
			SELECT 'KO' KO,'No se Encontraron Items para Facturar Según Fecha de Corte' ERROR
		END
	END   
	IF @METODO='FACTHADM_ITEMCORTE'     
	BEGIN         
		SELECT @NOADMISION=NOADMISION,@CNSRPDX=CNSRPDX,@ITEMRPDX=CONVERT(INT,RPDXITEM),@F_CORTE=CONVERT(DATETIME,F_CORTE),@NOAUTORIZA=NOAUTORIZA
		FROM   OPENJSON (@PARAMETROS)
		WITH (           
		NOADMISION VARCHAR(20)  '$.NOADMISION',
		CNSRPDX    VARCHAR(20)  '$.CNSRPDX',
		RPDXITEM   VARCHAR(20)  '$.RPDXITEM',
		F_CORTE    DATE         '$.FECHACORTE',
		NOAUTORIZA VARCHAR(20)  '$.NOAUTORIZA'
			)  
		PRINT '@ITEMRPDX='   +STR(@ITEMRPDX)
		IF NOT EXISTS(SELECT * FROM HADM WHERE NOADMISION=@NOADMISION AND COALESCE(FACTURABLE,0)=1 AND CLASEING='A')
		BEGIN
			SELECT 'KO'KO,' Numero de Admisión no Encontrado'ERROR
			RETURN
		END
		IF NOT EXISTS(SELECT * FROM HADMAUT WHERE NOADMISION=@NOADMISION AND AUTORIZACION=@NOAUTORIZA AND F_INICIAL<=@F_CORTE AND F_FINAL>=@F_CORTE)
		BEGIN
			SELECT 'KO'KO,' Fecha de Corte Fuera de Cobertura de la Autorización 'ERROR
			RETURN
		END
      PRINT 'Verifico de nuevo el contrato'
      IF EXISTS(SELECT * FROM PPT INNER JOIN RPDX ON PPT.IDTERCERO=RPDX.IDTERCERO AND PPT.IDPLAN=RPDX.ID1
                WHERE RPDX.ITEM=@ITEMRPDX
                AND  (COALESCE(CAPITADO,0)=1 OR COALESCE(PFACTURARIND,0)=0))
      BEGIN
			SELECT 'KO' KO,'Contrato Capitado O Masivo. no se puede Facturar Individualmente 'ERROR
			RETURN         
      END
		PRINT 'VALIDO PERIODOS CONTABLES'
		SELECT @FECHAFAC=DBO.FNK_GETDATE()
		IF NOT EXISTS(SELECT * FROM PRI WHERE FECHA_INI<=@FECHAFAC AND FECHA_FIN>@FECHAFAC AND COALESCE(CERRADO,0)=0 AND COALESCE(CERRADO_FAC,0)=0)
		BEGIN
			SELECT 'KO'KO,' Periodo Contable Cerrado o no existe, Verifque e intente de nuevo'ERROR
			RETURN
		END
		SELECT @EXISTE=COUNT(*) FROM HPRE INNER JOIN HPRED ON HPRE.NOPRESTACION=HPRED.NOPRESTACION
		WHERE HPRE.NOADMISION=@NOADMISION
		AND COALESCE(HPRED.FACTURADA,0)=0
		AND COALESCE(HPRED.N_FACTURA,'')=''
		AND COALESCE(HPRED.NOCOBRABLE,0)=0
		AND COALESCE(HPRED.ANULADO,0)=0
		IF @EXISTE<=0
		BEGIN
			SELECT 'KO' KO,' No hay items para Facturar' ERROR
			RETURN
		END
		IF DBO.FNK_VALORVARIABLE('FACTSEDE')='SI'
		BEGIN
			SELECT @IDSEDE=IDSEDE,@COMPANIA='01' FROM HADM WHERE NOADMISION=@NOADMISION
			IF DBO.FNK_VALORVARIABLE('FACTSEDEEQUIPO')='SI'
			BEGIN
			SELECT @IDSEDE=COALESCE(UBEQ.IDSEDE,USUSU.IDSEDE),@COMPANIA=COALESCE(UBEQ.COMPANIA,USUSU.COMPANIA)
			FROM USUSU LEFT JOIN UBEQ ON USUSU.SYS_ComputerName=UBEQ.SYS_ComputerName
			WHERE USUARIO=@USUARIO
			END
		END
		ELSE
		BEGIN
			IF DBO.FNK_VALORVARIABLE('IDSEDEPRINCIPAL')<>''
			BEGIN
			SELECT @IDSEDE=LTRIM(RTRIM(DBO.FNK_VALORVARIABLE('IDSEDEPRINCIPAL')))
			END
			IF NOT EXISTS(SELECT * FROM SED WHERE IDSEDE=@IDSEDE)
			BEGIN
			SELECT @IDSEDE=COALESCE(UBEQ.IDSEDE,USUSU.IDSEDE),@COMPANIA=COALESCE(UBEQ.COMPANIA,USUSU.COMPANIA)
			FROM USUSU LEFT JOIN UBEQ ON USUSU.SYS_ComputerName=UBEQ.SYS_ComputerName
			WHERE USUARIO=@USUARIO
			END
		END
		SELECT @SYS_COMPUTERNAME=UBEQ.SYS_ComputerName         
		FROM USUSU LEFT JOIN UBEQ ON USUSU.SYS_ComputerName=UBEQ.SYS_ComputerName
		WHERE USUARIO=@USUARIO
		SELECT @NIT=NIT FROM SED WHERE IDSEDE=@IDSEDE
		IF COALESCE(@NIT,'')='' OR NOT EXISTS(SELECT * FROM TER WHERE NIT=@NIT AND ESTADO='Activo')
		BEGIN
			SELECT @NIT=NIT FROM TER WHERE IDTERCERO=DBO.FNK_VALORVARIABLE('IDTERCEROINSTALADO')
		END
		IF COALESCE(@COMPANIA,'')=''
		BEGIN
			SELECT @COMPANIA='01'
		END
		PRINT 'VOY A FACTURAR ITEM'
		BEGIN TRY    
			UPDATE RPDX SET ID10=@NOAUTORIZA WHERE CNS=@CNSRPDX AND ITEM=@ITEMRPDX
			SELECT @F_CORTE=DATEADD(DAY,1,@F_CORTE)
			EXEC SPK_FACTURA_ASIS_CORTE @NOADMISION, @NIT,@COMPANIA,@IDSEDE,@USUARIO,@SYS_COMPUTERNAME,@CNSRPDX,@ITEMRPDX,1,@FECHAFAC,@F_CORTE,''               
		END TRY
		BEGIN CATCH
			INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE()
		END CATCH
		IF(SELECT COUNT(*) FROM @TBLERRORES)>0
		BEGIN
			SELECT 'KO' OK, ERROR FROM @TBLERRORES
			RETURN
		END
		SELECT 'OK' OK
		RETURN 
	END
	IF @METODO='HADMAUT_ADD'     
	BEGIN         
		SELECT @NOADMISION=NOADMISION,@NOAUTORIZA=AUTORIZACION,@F_INICIAL=F_INICIAL,@F_FINIAL=F_FINAL,
		@HADMAUT_ID=CONVERT(INT,(COALESCE(HADMAUT_ID,0)))
		FROM   OPENJSON (@PARAMETROS)
		WITH (           
			NOADMISION VARCHAR(20) '$.NOADMISION',
			AUTORIZACION VARCHAR(20) '$.AUTORIZACION',
			F_INICIAL DATE '$.F_INICIAL',
			F_FINAL DATE '$.F_FINAL',
			HADMAUT_ID VARCHAR(20) '$.HADMAUT_ID'
			)           

		IF NOT EXISTS(SELECT * FROM HADM WHERE NOADMISION=@NOADMISION)
		BEGIN
			SELECT 'KO' KO,'No se Encontro el Nro de Admision' ERROR
			RETURN
		END
		IF @HADMAUT_ID=0
		BEGIN
			IF EXISTS(SELECT * FROM HADMAUT WHERE NOADMISION=@NOADMISION AND AUTORIZACION=@NOAUTORIZA)
			BEGIN
			SELECT 'KO'KO,'Nro de Autorización  ya Existe para este Nro de Admision'ERROR
			RETURN
			END
			BEGIN TRY           
			INSERT INTO HADMAUT(NOADMISION,AUTORIZACION,F_INICIAL,F_FINAL,USUARIO,FECHA)   
			SELECT @NOADMISION,@NOAUTORIZA,@F_INICIAL,@F_FINIAL,@USUARIO,GETDATE()
			END TRY
			BEGIN CATCH
				INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE()
			END CATCH
		END
		ELSE
		BEGIN
			BEGIN TRY           
				UPDATE HADMAUT SET AUTORIZACION=@NOAUTORIZA,F_INICIAL=@F_INICIAL,F_FINAL=@F_FINIAL WHERE HADMAUT_ID=@HADMAUT_ID
			END TRY
			BEGIN CATCH
				INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE()
			END CATCH
         
		END
		IF(SELECT COUNT(*) FROM @TBLERRORES)>0
		BEGIN
			SELECT 'KO' OK, ERROR FROM @TBLERRORES
			RETURN
		END
		SELECT 'OK' OK
		RETURN   
	END 
	IF @METODO='HADMAUT_DEL'     
	BEGIN         
		SELECT   @HADMAUT_ID=HADMAUT_ID    
		FROM   OPENJSON (@PARAMETROS)
		WITH (           
			HADMAUT_ID VARCHAR(20) '$.HADMAUT_ID' 
		)           
		IF NOT EXISTS(SELECT * FROM HADMAUT WHERE HADMAUT_ID=@HADMAUT_ID)       
		BEGIN
			SELECT 'KO'KO,' Nro de Autrorización no Encontrada 'ERROR
			RETURN
		END
		IF EXISTS(SELECT * FROM HADMAUT WHERE HADMAUT_ID=@HADMAUT_ID AND COALESCE(N_FACTURA,'')<> '' )
		BEGIN
			SELECT 'KO'KO,' El nro de Autorización ya fue Facturada no se Puede Borrar'ERROR
			RETURN
		END
		BEGIN TRY           
			DELETE HADMAUT WHERE  HADMAUT_ID=@HADMAUT_ID                    
		END TRY
		BEGIN CATCH
			INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE()
		END CATCH
		IF(SELECT COUNT(*) FROM @TBLERRORES)>0
		BEGIN
			SELECT 'KO' OK, ERROR FROM @TBLERRORES
			RETURN
		END
		SELECT 'OK' OK
		RETURN 
	END   
END
