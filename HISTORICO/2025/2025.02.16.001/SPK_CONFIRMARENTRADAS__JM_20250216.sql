IF OBJECT_ID('SPK_CONFIRMARENTRADAS','P') IS NOT NULL DROP PROCEDURE SPK_CONFIRMARENTRADAS
GO
CREATE PROCEDURE DBO.SPK_CONFIRMARENTRADAS
	@IDBODEGA         VARCHAR(20),
	@CNSMOV           VARCHAR(20),
	@USUARIO          VARCHAR(12),
	@COMPANIA         VARCHAR(2),
	@SEDE             VARCHAR(5),
	@SYS_COMPUTERNAME VARCHAR(255)
WITH ENCRYPTION
AS
DECLARE @ENCONTRADO    DECIMAL(9,2)
DECLARE @AFECTACOSTO   SMALLINT
DECLARE @CNSITRA       VARCHAR(20)
DECLARE @S             VARCHAR(1)
DECLARE @CNS           VARCHAR(20)
DECLARE @LONG          SMALLINT
DECLARE @P             SMALLINT
DECLARE @CONTADOR      SMALLINT  
DECLARE @CNSFCOM       VARCHAR(20)
DECLARE @CNSCTZ        VARCHAR(20)
DECLARE @IDTERCERO     VARCHAR(20)
DECLARE @IDITAR        VARCHAR(2)
DECLARE @IDTIPOMOV     VARCHAR(2)
DECLARE @SECONTABILIZA SMALLINT
DECLARE @CNSFCXP       VARCHAR(20)
DECLARE @CNSFNOT       VARCHAR(20)
DECLARE @IDCATEGORIA   VARCHAR(10) 

DECLARE @NOLOTE_CUR_DETALLE       VARCHAR(20)
DECLARE @IDARTICULO_CUR_DETALLE   VARCHAR(20)
DECLARE @CANTIDAD_CUR_DETALLE     DECIMAL(14,2)
DECLARE @PCOSTO_CUR_DETALLE       DECIMAL(16,3)
DECLARE @FECHAVENCE_CUR_DETALLE   DATETIME
DECLARE @NOLOTEPEDIDO_CUR_DETALLE VARCHAR(20)
DECLARE @DETALLE_CUR_DETALLE      VARCHAR(254)    
DECLARE @CNSFCOM_CUR_DETALLE      VARCHAR(20)  
DECLARE @TIPOACTIVO        VARCHAR(80)    
DECLARE @IDACTIVO          VARCHAR(20)    
DECLARE @VECES             DECIMAL(14,2)    
DECLARE @CANTIDAD          DECIMAL(14,2)    
DECLARE @IDARTICULO        VARCHAR(20)    
DECLARE @DESCRIPCION       VARCHAR(512)    
DECLARE @PCOSTO            DECIMAL(16,3)    
DECLARE @IDEVENTO          VARCHAR(10)    
DECLARE @CNSIACTH          VARCHAR(20)    
DECLARE @IDESTADOPENDIENTE VARCHAR(20)
DECLARE @NOLOTE            VARCHAR(20)
DECLARE @CCOSTO            VARCHAR(20) 
DECLARE @IDAREA            VARCHAR(20)
DECLARE @VIDAUTIL          INT
DECLARE @NODOCUMENTO       VARCHAR(20)
DECLARE @CUENTA            VARCHAR(16)
DECLARE @ESTADO            INT
DECLARE @NROCOMPROBANTE    VARCHAR(20)
DECLARE @FECHAMOV          DATETIME
DECLARE @TIPOBODEGA        VARCHAR(20)
DECLARE @ANO               VARCHAR(10) 
DECLARE @MES               VARCHAR(10) 
DECLARE @CERRADO           VARCHAR(10)       
DECLARE @EXCEPCION_CONT    INT
DECLARE @T_ANTICIPOS       DECIMAL(14,2)
DECLARE @CNSANT            VARCHAR(20)
DECLARE @ESTADO_ANT        VARCHAR(1)
DECLARE @RINVIMA           VARCHAR(20)
DECLARE @SELLOCALIDAD      VARCHAR(20)
DECLARE @CAPACIDAD         DECIMAL(14,2)
DECLARE @VLR_ANT_LEGAL	   DECIMAL(14,2)
DECLARE @VL_SALDO		   DECIMAL(14,2)
BEGIN
    IF (SELECT ESTADO FROM IMOV WHERE CNSMOV=@CNSMOV)<>0
	BEGIN
		RETURN
	END

	DECLARE @DEPURAR BIT = 1 -- ACTIVA/DESACTIVA LOS PRINT


	DECLARE @IDBOD_HEMODERIVADOS VARCHAR(20) 
	DECLARE @IDITARHEMODERIVADOS VARCHAR(20)
	DECLARE @IDINVMOV_MOVANUSAL	 VARCHAR(20)

	SELECT @IDINVMOV_MOVANUSAL = DBO.FNK_VALORVARIABLE('FAR_MOVANULASALIDA')

	-- EZERPA 02/12/2020 Consultar la bodega de unidad transfusional desde la sede
	SELECT @IDBOD_HEMODERIVADOS=IDBODHEMO FROM SED WHERE IDSEDE=@SEDE
	IF COALESCE(@IDBOD_HEMODERIVADOS,'')='' SELECT @IDBOD_HEMODERIVADOS = SED.IDBODHEMO FROM UBEQ INNER JOIN SED ON SED.IDSEDE=UBEQ.IDSEDE WHERE SYS_COMPUTERNAME=@SYS_COMPUTERNAME
	IF COALESCE(@IDBOD_HEMODERIVADOS,'')='' SELECT TOP 1 @IDBOD_HEMODERIVADOS = SED.IDBODHEMO FROM SED WHERE COALESCE(SED.IDBODHEMO,'')<>''
	IF COALESCE(@IDBOD_HEMODERIVADOS,'')='' SELECT @IDBOD_HEMODERIVADOS = DATO FROM USVGS WHERE IDVARIABLE='IDBOD_HEMODERIVADOS'
	-- EZERPA 02/12/2020 END


	SELECT @IDITARHEMODERIVADOS = DATO FROM USVGS WHERE IDVARIABLE='IDITARHEMODERIVADOS'
	DECLARE @FECHACONF DATETIME = DBO.FNK_FECHA_SIN_MLS(GETDATE())
	--SELECT @SECONTABILIZA = ITMO.SECONTABILIZA FROM ITMO INNER JOIN IMOV ON IMOV.IDTIPOMOV=ITMO.IDTIPOMOV WHERE IMOV.CNSMOV=@CNSMOV

	SELECT @AFECTACOSTO = ITMO.AFECTACOSTO, @IDTIPOMOV=IMOV.IDTIPOMOV, @SECONTABILIZA=IIF(ISNULL(IBOD.NOCONTABILIZA,0)=1,0,ITMO.SECONTABILIZA),
			@NROCOMPROBANTE = IMOV.NROCOMPROBANTE,  @TIPOBODEGA = IBOD.TIPOBODEGA
			,@IDTERCERO=IMOV.IDTERCERO,@FECHAMOV = FECHAMOV, @ESTADO=IMOV.ESTADO, @IDTIPOMOV=IMOV.IDTIPOMOV 
	FROM IMOV 
	INNER JOIN IBOD ON IBOD.IDBODEGA  = IMOV.IDBODEGA 
	INNER JOIN ITMO ON ITMO.IDTIPOMOV = IMOV.IDTIPOMOV
	WHERE  IMOV.CNSMOV=@CNSMOV

	
	IF @DEPURAR = 1 PRINT CONVERT(VARCHAR,GETDATE(),108)+'.- ACTUALIZANDO A 9 EL ESTADO DE IMOVH'
	UPDATE IMOVH SET ESTADO=9 FROM IART
	WHERE IMOVH.CNSMOV=@CNSMOV AND IMOVH.IDARTICULO=IART.IDARTICULO AND IMOVH.ESTADO=0
   
	IF @DEPURAR = 1 PRINT CONVERT(VARCHAR,GETDATE(),108)+'.- REGISTRANDO LOS ARTÍCULOS EN IDXB IF NO EXISTEN'
	INSERT INTO IDXB (IDBODEGA,IDARTICULO,STOCKMINIMO,STOCKMAXIMO,PUNTOREORDEN,EXISTOTAL)
	SELECT DISTINCT @IDBODEGA, UPPER(IDARTICULO),    0,   0,   0,   0
	FROM   IMOVH
	WHERE  CNSMOV=@CNSMOV AND IDARTICULO NOT IN (SELECT DISTINCT IDARTICULO FROM IDXB WHERE IDBODEGA = @IDBODEGA) 
	AND    ESTADO=9
   
	/*JEDM_2011_AGO_04: BUSCAR POSIBLE EXCEPCION CONTABLE*/
	SELECT @EXCEPCION_CONT = COALESCE(COUNT(*),0) 
	FROM   IEXCEP    
	WHERE  CLASE     = 'Contabilizacion' 
	AND    IDBODEGA  = @IDBODEGA 
	AND    IDTIPOMOV = @IDTIPOMOV

	--SELECT * INTO #IMOVH_AGRUPADO FROM VWK_IMOVH_AGRUPADO WHERE CNSMOV=@CNSMOV
	SELECT * INTO #IMOVH_AGRUPADO FROM DBO.FNK_IMOVH_AGRUPADO(@CNSMOV)
	/* EZERPA 22/12/2018 */
	DECLARE _CURSOR CURSOR FOR   
		SELECT IDARTICULO,COSTO,CANTIDAD FROM #IMOVH_AGRUPADO
	OPEN _CURSOR  
	FETCH NEXT FROM _CURSOR INTO @IDARTICULO, @PCOSTO_CUR_DETALLE, @CANTIDAD_CUR_DETALLE
	WHILE @@FETCH_STATUS = 0  
	BEGIN  
		/*EZERPA 13.12.2018 => Actualizar IDXB e IART*/
		EXEC DBO.SPK_REVISA_EXISTS_INV @IDARTICULO
		/*EZERPA END*/

		IF @AFECTACOSTO=1 AND @TIPOBODEGA='Propia'
		BEGIN      
			IF @DEPURAR = 1 PRINT CONVERT(VARCHAR,GETDATE(),109)+'.- UPDATE IART AFECTA COSTO Y PROPIA ARTICULO: '+@IDARTICULO

			UPDATE IART SET         
			PCOSTO = (
				(ISNULL(IART.PCOSTO, 0) * ISNULL(X.EXISTOTAL, 0)) + 
				(@PCOSTO_CUR_DETALLE * @CANTIDAD_CUR_DETALLE)) / 
				(IIF(COALESCE(X.EXISTOTAL, 0)<=0, 1, X.EXISTOTAL) + 
				@CANTIDAD_CUR_DETALLE)
			
			FROM IART INNER JOIN  (SELECT IDXB.IDARTICULO, ISNULL(SUM(ISNULL(EXISTOTAL,0)),0) EXISTOTAL
								FROM   IDXB INNER JOIN IBOD ON IDXB.IDBODEGA = IBOD.IDBODEGA
								WHERE  IBOD.TIPOBODEGA='Propia'
								AND		IDXB.IDARTICULO IN (SELECT IDARTICULO FROM #IMOVH_AGRUPADO)
								GROUP BY IDXB.IDARTICULO) X ON IART.IDARTICULO = X.IDARTICULO
			WHERE @IDARTICULO = IART.IDARTICULO  

         IF DBO.FNK_VALORVARIABLE('IXCOUNTRY')='PERU'
         BEGIN
			   UPDATE IDXB SET         
			   PCOSTOM=((ISNULL(IDXB.PCOSTOM,0)*ISNULL(X.EXISTOTAL,0))+(@PCOSTO_CUR_DETALLE*@CANTIDAD_CUR_DETALLE))/ 
							   (ISNULL(X.EXISTOTAL,0)+@CANTIDAD_CUR_DETALLE)
			   --,IART.EXISTOTAL=ISNULL(IART.EXISTOTAL,0)+@CANTIDAD_CUR_DETALLE      
			   FROM IDXB INNER JOIN  (SELECT IDXB.IDARTICULO, ISNULL(SUM(ISNULL(EXISTOTAL,0)),0) EXISTOTAL
								   FROM   IDXB INNER JOIN IBOD ON IDXB.IDBODEGA = IBOD.IDBODEGA
								   WHERE  IBOD.TIPOBODEGA='Propia'
								   AND		IDXB.IDARTICULO IN (SELECT IDARTICULO FROM #IMOVH_AGRUPADO)
                           AND IDXB.IDBODEGA=@IDBODEGA
								   GROUP BY IDXB.IDARTICULO) X ON IDXB.IDARTICULO = X.IDARTICULO
			   WHERE @IDARTICULO = IDXB.IDARTICULO 
         END
			IF @DEPURAR = 1 PRINT CONVERT(VARCHAR,GETDATE(),109)+'.- DESPUES DE ACTUALIZAR COSTO'
			
		END      
		ELSE      
		BEGIN      
			IF @DEPURAR = 1 PRINT CONVERT(VARCHAR,GETDATE(),108)+'.- NO UPDATE IART NO AFECTA COSTO'
		END      

	FETCH NEXT FROM _CURSOR INTO @IDARTICULO, @PCOSTO_CUR_DETALLE,@CANTIDAD_CUR_DETALLE
	END  
	CLOSE _CURSOR  
	DEALLOCATE _CURSOR
	/* EZERPA 22/12/2018 FIN */

   PRINT 'SALIO    =======>>>>>>>>>>>><<'

	SELECT IMOVH.IDARTICULO, NOLOTEPEDIDO,IDXB.EXISTOTAL,IART.PCOSTO,@USUARIO USUARIOCONF,@FECHACONF FECHACONF 
	INTO #IDXB_IART
	FROM #IMOVH_AGRUPADO IMOVH,IDXB,IART
	WHERE	IDXB.IDBODEGA=@IDBODEGA 
	AND		IDXB.IDARTICULO=IMOVH.IDARTICULO 
	AND     IART.IDARTICULO=IMOVH.IDARTICULO
	--DECLARE @CNSFCOM VARCHAR(20)
	SELECT @CNSFCOM=CNSFCOM FROM IMOV WHERE CNSMOV=@CNSMOV
	UPDATE IMOVH SET      
		EXISTENCIA=EXISTOTAL,      
		PCOSTOANTES=#IDXB_IART.PCOSTO,      
		USUARIOCONF=#IDXB_IART.USUARIOCONF,      
		FECHACONF = #IDXB_IART.FECHACONF   
	FROM #IDXB_IART INNER JOIN IMOVH ON IMOVH.NOLOTEPEDIDO=#IDXB_IART.NOLOTEPEDIDO AND IMOVH.IDARTICULO = #IDXB_IART.IDARTICULO

	INSERT INTO IEXI (IDBODEGA,NOLOTE,IDARTICULO,CANTINICIAL,EXISLOTE,FECHAVENCE,      
						LUGAR1,LUGAR2,LUGAR3,LUGAR4,LUGAR5,NOLOTEPEDIDO,DETALLE,PCOSTO,
						IDTERCERO,FECHAMOV,RINVIMA,SELLOCALIDAD,CAPACIDAD,ODESFERA,OIESFERA,ODCILINDRO,OICILINDRO,ODEJE,OIEJE,ODADICION,OIADICION,
                  ODALT,OIALT,ODAVL,OIAVL,ODTLENTE,OITLENTE,ODDNP,OIDNP,VR_ANTESIVA,VR_IVA,CNSFCOM,CNSMOV,ESTANTE)      
	SELECT @IDBODEGA, NOLOTE, IDARTICULO,CANTIDAD, 0,      
				FECHAVENCE, '', '', '', '', '', NOLOTEPEDIDO, DETALLE, 
				PCOSTO, IMOV.IDTERCERO,CONVERT(SMALLDATETIME,GETDATE()),NULL,SELLOCALIDAD,CAPACIDAD,
            ODESFERA,OIESFERA,ODCILINDRO,OICILINDRO,ODEJE,OIEJE,ODADICION,OIADICION,
            ODALT,OIALT,ODAVL,OIAVL,ODTLENTE,OITLENTE,ODDNP,OIDNP,CASE WHEN COALESCE(PIVA,0)>0 THEN PCOSTO-(VLRIVA/CANTIDAD) ELSE PCOSTO END,
            CASE WHEN COALESCE(PIVA,0)>0 THEN (VLRIVA/CANTIDAD) ELSE 0 END, @CNSFCOM,IMOV.CNSMOV
			,IMOVH.ESTANTE
	FROM IMOVH INNER JOIN IMOV ON IMOVH.CNSMOV=IMOV.CNSMOV
   WHERE IMOVH.CNSMOV=@CNSMOV
   AND NOT EXISTS(SELECT * FROM IEXI WHERE IMOV.IDBODEGA=IEXI.IDBODEGA AND IEXI.IDARTICULO=IMOVH.IDARTICULO AND IEXI.NOLOTE=IMOVH.NOLOTE)
	--AND NOLOTE NOT IN (SELECT NOLOTE FROM IEXI WITH(NOLOCK) WHERE IDBODEGA=@IDBODEGA 
 --  AND IDARTICULO=IMOVH.IDARTICULO)


	--ACTUALIZA EXISTENCIAS EN IEXI       SELECT NOLOTE,* FROM IMOVH
	UPDATE IEXI SET
		EXISLOTE=ISNULL(IEXI.EXISLOTE,0)+ISNULL(IMOVH.CANTIDAD,0)
		,RINVIMA=LEFT(CASE WHEN ISNULL(IEXI.RINVIMA,'')='' THEN (SELECT IART.REGINVIMA FROM IART WHERE IDARTICULO=IEXI.IDARTICULO) ELSE IEXI.RINVIMA END,20),
      IDTERCERO=CASE WHEN COALESCE(IEXI.IDTERCERO,'')='' THEN IMOV.IDTERCERO ELSE IEXI.IDTERCERO END
	FROM IMOVH INNER JOIN IMOV ON IMOVH.CNSMOV=IMOV.CNSMOV
              INNER JOIN IEXI ON IMOV.IDBODEGA=IEXI.IDBODEGA AND IEXI.IDARTICULO=IMOVH.IDARTICULO AND IEXI.NOLOTE=IMOVH.NOLOTE 
	WHERE IMOVH.CNSMOV=@CNSMOV

	IF @IDBODEGA = @IDBOD_HEMODERIVADOS 
	BEGIN
		SELECT NOLOTE, IDDONANTE,NROUNIDAD,PROCEDENCIA,CODBANSAN,GRUPOABO,GRUPORH,FRECOLECCION,PRESENCIA, SUBGRUPO AS SUBGRUPOABO INTO #ITRAH 
		FROM ITRAH WITH(NOLOCK) WHERE NOLOTE IN (SELECT NOLOTE FROM IMOVH WHERE IMOVH.CNSMOV=@CNSMOV)
		UPDATE IEXI SET 
			IDDONANTE=ITRAH.IDDONANTE, NROUNIDAD=ITRAH.NROUNIDAD, PROCEDENCIA=ITRAH.PROCEDENCIA,
			CODBANSAN=ITRAH.CODBANSAN, GRUPOABO=ITRAH.GRUPOABO,   GRUPORH=ITRAH.GRUPORH,
         FRECOLECCION=ITRAH.FRECOLECCION, PRESENCIA=ITRAH.PRESENCIA
			,SUBGRUPOABO=ITRAH.SUBGRUPOABO
		FROM IEXI INNER JOIN #ITRAH ITRAH ON IEXI.NOLOTE=ITRAH.NOLOTE
		WHERE IEXI.NOLOTE IN (SELECT NOLOTE FROM IMOVH WHERE IMOVH.CNSMOV=@CNSMOV)
		DROP TABLE #ITRAH
	END             

	DROP TABLE #IDXB_IART
	DROP TABLE #IMOVH_AGRUPADO
   
	
   
	--ACTUALIZACIÓN DE IMOV
	SET @ENCONTRADO=0
	--BUSCA ARTICULOS QUE NO ESTEN EN IART
	SELECT @ENCONTRADO  = COUNT(*) 
	FROM   IMOVH
	WHERE  IMOVH.CNSMOV = @CNSMOV 
	AND    IMOVH.ESTADO = 0
	--PONE ESTADO = 1 SI TODOS LAS ARTICULOS ACTUALIZADOS EXISTEN EN IART
	
	IF @ENCONTRADO = 0
	BEGIN

		IF @DEPURAR = 1 PRINT CONVERT(VARCHAR,GETDATE(),108)+'.- UPDATE IMOV ENCONTRADO 0'
		UPDATE IMOV SET
			ESTADO = '1',
			USUARIOCONF = @USUARIO,
			FECHACONF = @FECHACONF,
			SECONTABILIZA = @SECONTABILIZA
		WHERE CNSMOV = @CNSMOV

	END

	--ACTUALIZA TRANSITOS
	SELECT @CCOSTO = CCOSTO, @IDAREA = IDAREA, @IDITAR = IDITAR, @CNSITRA = CNSITRA 
	FROM   IMOV 
	WHERE  CNSMOV = @CNSMOV
   
   
	UPDATE ITRAH SET CANTIDADDES = IMOVH.CANTIDAD, ESTADO = CASE WHEN IMOVH.CANTIDAD<>ITRAH.CANTIDADORI THEN 2 ELSE 1 END
	FROM   ITRA,IMOVH,IART
	WHERE  ITRA.CNSITRA     = @CNSITRA 
	AND    ITRAH.CNSITRA    = ITRA.CNSITRA 
	AND    IMOVH.CNSMOV     = @CNSMOV 
	AND    IART.IDARTICULO  = IMOVH.IDARTICULO 
	AND    ITRAH.IDARTICULO = IMOVH.IDARTICULO 
	AND    ITRAH.NOLOTE     = IMOVH.NOLOTE 
	AND    IMOVH.ESTADO     = 9
	IF @DEPURAR = 1 PRINT CONVERT(VARCHAR,GETDATE(),108)+'.- TRANSITOS... ITRAH'
--   AND    IART.IDITAR      = CASE DBO.FNK_VALORVARIABLE('IDINVENTRADAUNICA') 
--                                WHEN 'SI' THEN IART.IDITAR
--                                ELSE @IDITAR
--                             END
   
	UPDATE ITRA SET ESTADO = 1, USUARIODES = @USUARIO, FECHAEGR = @FECHACONF 
	WHERE  ITRA.CNSITRA = @CNSITRA
	IF @DEPURAR = 1 PRINT CONVERT(VARCHAR,GETDATE(),108)+'.- TRANSITOS... ITRA'
	IF @DEPURAR = 1 PRINT CONVERT(VARCHAR,GETDATE(),108)+'.- PENDIENTES DE TRANSITOS'
	--CREAR PENDIENTES DE TRANSITOS
	SELECT @ENCONTRADO = COUNT(*) 
	FROM   ITRAH 
	WHERE  CNSITRA = @CNSITRA 
	AND    CANTIDADORI > CANTIDADDES
   
	IF @ENCONTRADO>0
	BEGIN
		UPDATE ITRA SET ESTADO=2 WHERE CNSITRA=@CNSITRA
		--SET @CONTADOR=0
		--SET @CNS=''
		--SET @P=1
		--SET @LONG=LEN(LTRIM(RTRIM(@CNSITRA)))
		--WHILE @LONG>=@P
		--BEGIN
		--	SET @S=SUBSTRING(@CNSITRA,@P,1)
		--	IF @S<>'-'
		--	SET @CNS=@CNS+@S
		--	ELSE
		--	BREAK
		--	SET @P=@P+1
		--	CONTINUE
		--END
      
		--SELECT @CONTADOR=COUNT(*) FROM ITRA WHERE CNSITRA LIKE @CNS+'%'       
        
        
		SET @CNS=SPACE(20)  
		EXEC SPK_GENCONSECUTIVO @COMPANIA,@SEDE,'@ITRA',@CNS OUTPUT
		SELECT @CNS = @SEDE + REPLACE(SPACE(8 - LEN(@CNS))+LTRIM(RTRIM(@CNS)),SPACE(1),0)

		SELECT CNSITRA,IDBODEGAORI,IDBODEGADES,USUARIOORI,USUARIODES,USUARIOTRA,PROCEDENCIA,      
				CNSMOVORI,CNSMOVDES,NOADMISION,FECHAING,FECHAEGR,ESTADO,IDTIPOMOV,IDDEP,CNSFCOM,
				CCOSTO,IDAREA,LOTEADO      
		INTO   #TITRA 
		FROM   ITRA 
		WHERE  CNSITRA = @CNSITRA      

		UPDATE #TITRA SET CNSITRA=@CNS,
						FECHAING=DBO.FNK_FECHA_SIN_MLS(GETDATE()),
						FECHAEGR=NULL,ESTADO=0,CNSMOVDES=''
      WHERE 1=1
        
		SELECT CNSITRA,IDARTICULO,NOLOTE,CANTIDADORI,CANTIDADDES,IDCAUSAL,ESTADO,PCOSTO,      
				NOLOTEPEDIDO,FECHAVENCE      
		INTO   #TITRAH 
		FROM   ITRAH 
		WHERE  CNSITRA     = @CNSITRA 
		AND    CANTIDADORI > CANTIDADDES      
        AND    COALESCE(NOLOTEPEDIDO,'')=''

		UPDATE #TITRAH SET CNSITRA=@CNS,
							CANTIDADORI=CANTIDADORI-CANTIDADDES,CANTIDADDES=0,ESTADO=0,IDCAUSAL=''  WHERE 1=1     
          
		INSERT INTO ITRA(CNSITRA,IDBODEGAORI,IDBODEGADES,USUARIOORI,USUARIODES,USUARIOTRA,
						PROCEDENCIA,CNSMOVORI,CNSMOVDES,NOADMISION,FECHAING,FECHAEGR,ESTADO,
						IDTIPOMOV,IDDEP,CNSFCOM,CCOSTO,IDAREA,LOTEADO)      
		SELECT  CNSITRA,IDBODEGAORI,IDBODEGADES,USUARIOORI,USUARIODES,USUARIOTRA,PROCEDENCIA,      
				CNSMOVORI,CNSMOVDES,NOADMISION,FECHAING,FECHAEGR,ESTADO,IDTIPOMOV,IDDEP,CNSFCOM,
				CCOSTO,IDAREA,LOTEADO
		FROM    #TITRA      
		INSERT INTO ITRAH (CNSITRA,IDARTICULO,NOLOTE,CANTIDADORI,CANTIDADDES,IDCAUSAL,ESTADO,PCOSTO,      
				NOLOTEPEDIDO,FECHAVENCE)      
		SELECT CNSITRA,IDARTICULO,NOLOTE,CANTIDADORI,CANTIDADDES,IDCAUSAL,ESTADO,PCOSTO,      
				NOLOTEPEDIDO,FECHAVENCE      
		FROM   #TITRAH      
	END      
   



	/*EZERPA 26.01.16
	/*PARA CREAR DE UNA LAS ETIQUETAS AL CONFIRMAR LAS ENTRADAS AL ALMACEN*/
	/*REVISAMOS QUE SEAN MOVIMIENTOS DE ENTRADAS POR COMPRAS Y POR REMISION*/
	IF (SELECT IDTIPOMOV FROM IMOV WHERE CNSMOV = @CNSMOV ) = DBO.FNK_VALORVARIABLE('IDINVMOV_COMPRAS') OR 
			(SELECT IDTIPOMOV FROM IMOV WHERE CNSMOV = @CNSMOV ) = DBO.FNK_VALORVARIABLE('IDINVMOV_REMISION_EN') OR
			(SELECT IDTIPOMOV FROM IMOV WHERE CNSMOV = @CNSMOV ) = DBO.FNK_VALORVARIABLE('IDINVMOV_SI')
	BEGIN
		DECLARE @NVOCONSEC AS VARCHAR(20)
		DECLARE @FECHAVENCE AS DATETIME
		/*SE CREAN CODIGOS DE BARRAS DE ACUERDO AL IDARTICULO Y NOLOTE, SOLO DE LOS QUE NO EXISTAN*/ 
		DECLARE NOLOTE_CUR CURSOR FOR
			SELECT IDARTICULO, NOLOTE, FECHAVENCE,CNSFCOM
			FROM   IMOVH INNER JOIN IMOV ON IMOV.CNSMOV=IMOVH.CNSMOV    
			WHERE  IMOVH.CNSMOV = @CNSMOV
			AND    NOT EXISTS (
								SELECT * 
								FROM   ICBU
								WHERE  ICBU.IDARTICULO = IMOVH.IDARTICULO
								AND    ICBU.NOLOTE     = IMOVH.NOLOTE
							)
		OPEN NOLOTE_CUR
		FETCH NEXT FROM NOLOTE_CUR
			INTO @IDARTICULO, @NOLOTE, @FECHAVENCE, @CNSFCOM
		WHILE @@FETCH_STATUS = 0  
		BEGIN 
			EXEC SPK_GENCONSECUTIVO  '01', '01', '@ICBU', @NVOCONSEC OUTPUT  
			SELECT @NVOCONSEC = REPLACE(SPACE(6 - LEN(@NVOCONSEC))+LTRIM(RTRIM(@NVOCONSEC)),SPACE(1),0)
			INSERT INTO ICBU ( CODIGOBARRA, IDARTICULO, NOLOTE, FECVTO, CNSFCOM, CNSMOV)
			SELECT @NVOCONSEC, @IDARTICULO, @NOLOTE, @FECHAVENCE, @CNSFCOM, @CNSMOV
			FETCH NEXT FROM NOLOTE_CUR
			INTO @IDARTICULO, @NOLOTE, @FECHAVENCE, @CNSFCOM
			END
			CLOSE NOLOTE_CUR
			DEALLOCATE NOLOTE_CUR
	END
	EZERPA FIN*/

	/*EZERPA 23/08/2018 Segunda parte de generación de codigos de barras, pero ésta vez RECARGADO (QR y Datamatrix)*/
	DECLARE @IDINVMOV_COMPRAS VARCHAR(20) 
	DECLARE @IDINVMOV_REMISION_EN VARCHAR(20) 
	DECLARE @IDINVMOV_SI VARCHAR(20) 
	DECLARE @CODBARRAS_AUT_ENT VARCHAR(20)

	SELECT @IDINVMOV_COMPRAS = DATO FROM USVGS WHERE IDVARIABLE = 'IDINVMOV_COMPRAS'
	SELECT @IDINVMOV_REMISION_EN = DATO FROM USVGS WHERE IDVARIABLE = 'IDINVMOV_REMISION_EN'
	SELECT @IDINVMOV_SI = DATO FROM USVGS WHERE IDVARIABLE = 'IDINVMOV_SI'
	SELECT @CODBARRAS_AUT_ENT = DATO FROM USVGS WHERE IDVARIABLE = 'CODBARRAS_AUT_ENT'

	IF @CODBARRAS_AUT_ENT='SI' AND (SELECT IDTIPOMOV FROM IMOV WHERE CNSMOV=@CNSMOV) IN (@IDINVMOV_COMPRAS, @IDINVMOV_REMISION_EN, @IDINVMOV_SI)
	BEGIN
		DECLARE _CURSOR CURSOR FOR   
			SELECT NOLOTE FROM IMOVH WHERE CNSMOV = @CNSMOV
		AND NOLOTE NOT IN (SELECT DISTINCT CONSECUTIVO FROM KCB WHERE PROCESO='NOLOTE')

		--AND EXISLOTE>0

		OPEN _CURSOR  
		FETCH NEXT FROM _CURSOR INTO @NOLOTE  

		IF @@FETCH_STATUS <> 0   
			IF @DEPURAR = 1 PRINT CONVERT(VARCHAR,GETDATE(),108)+'.-          <<NO HAY LOTES SIN CODIGOS DE BARRAS GENERADOS>>'       

		WHILE @@FETCH_STATUS = 0  
		BEGIN  

			IF @DEPURAR = 1 PRINT CONVERT(VARCHAR,GETDATE(),108)+'.- CÓDIGO DE BARRAS DATAMATRIX GENERADO PARA EL LOTE: '+@NOLOTE  
			EXEC SPK_BARCODE_DATAMATRIX_GENERAR @CONSECUTIVO = @NOLOTE, @PROCESO='NOLOTE', @INFO=@NOLOTE

			FETCH NEXT FROM _CURSOR INTO @NOLOTE  
			END  

		CLOSE _CURSOR  
		DEALLOCATE _CURSOR
	
	END

	IF @DEPURAR = 1 PRINT CONVERT(VARCHAR,GETDATE(),108)+'.- Creando Cuenta Por Pagar...'
	IF @IDTIPOMOV = @IDINVMOV_COMPRAS -- AND @SECONTABILIZA=1 --JEDM 28.06.2010
	BEGIN
		SET @CNSFCXP=SPACE(20)  
		EXEC SPK_GENCONSECUTIVO @COMPANIA,@SEDE,'@FCXPCM',@CNSFCXP OUTPUT
		SELECT @CNSFCXP = @SEDE + 'CM' + REPLACE(SPACE(6 - LEN(@CNSFCXP))+LTRIM(RTRIM(@CNSFCXP)),SPACE(1),0)
        
		SELECT TOP 1 @IDITAR = IART.IDITAR 
		FROM   IMOVH INNER JOIN IART ON IMOVH.IDARTICULO = IART.IDARTICULO
		WHERE  IMOVH.CNSMOV  = @CNSMOV

       
		INSERT INTO FCXP (CNSFCXP, FECHA, CNSFCOM, IDTERCERO, NOREFERENCIA, F_FACTURAREF, F_VENCE, VALOR, ESTADO,
	  						F_CANCELADO, USUARIO, PROCEDENCIA, OBSERVACION, COMPANIA, SYS_ComputerName, USUARIOMOD,
  							FECHAMOD, NUMCUOTA, MARCACONT, CONTABILIZADA, NROCOMPROBANTE, SALDO, IDCLASEIMP,
						VLR_DESCUENTO, VLR_IVA,VLR_NETO,VLR_IMPUESTOS,CUEDEBITO,CUECREDITO,TIPOCXP,VLR_GLOSAS,VLR_FLETE,
						MODALIDAD, SUBSIDIO, CODUNG, CODPRG, DOCEQUIVALENTE)
		SELECT @CNSFCXP,IMOV.FECHAMOV,IMOV.CNSFCOM,IMOV.IDTERCERO,IMOV.NODOCUMENTO,IMOV.F_FACTURA,IMOV.F_VENCE,
				0,'N',NULL,@USUARIO,'Compras','Compra a '+TER.RAZONSOCIAL+' Ref. '+IMOV.NODOCUMENTO,
				@COMPANIA,@SYS_COMPUTERNAME, NULL, NULL, 0, 0, 0, '', 0, NULL, 0, 0, 0, 0, NULL,
				DBO.FNK_CUENTA_KMCOM(DBO.FNK_VALORVARIABLE('IDMODELOCONTABLE'),'CXP_COMPRAS','CR', @IDITAR,IMOV.IDAREA,IMOV.CCOSTO,'P',''),
				DBO.FNK_VALORVARIABLE('IDTIPOCXP_DEFAULT'), 0, IMOV.VLR_FLETE, 'Evento', 'Total', IMOV.CODUNG, IMOV.CODPRG,
				CASE WHEN TER.TIPOREGIMEN='S' AND COALESCE(TER.MANEXO,1)=1 THEN 1 ELSE 0 END
		FROM   IMOV INNER JOIN TER ON TER.IDTERCERO = IMOV.IDTERCERO
		WHERE  IMOV.CNSMOV=@CNSMOV 
     
		SET @IDCATEGORIA=(SELECT DBO.FNK_VALORVARIABLE('TERCATPROVEEDOR'))
      
		EXEC SPK_INSERT_CXP_INV @CNSFCXP, @CNSMOV,'COMPRAS'
		EXEC SPK_IMPUESTOS_CXP @CNSFCXP,'PRO',@COMPANIA,@SEDE

		IF @DEPURAR = 1 PRINT CONVERT(VARCHAR,GETDATE(),108)+'.- ACTUALIZACION DE CXP CON ANTICIPO'

      EXEC SPK_CALCULOVALORESCXP @CNSFCXP

		SELECT @CNSFCOM = CNSFCOM FROM IMOV WHERE CNSMOV = @CNSMOV
		SELECT @T_ANTICIPOS = COALESCE(SUM(VALOR), 0) FROM FCXP WHERE CNSFCOM = @CNSFCOM AND PROCEDENCIA = 'Anticipos' AND ESTADO<>'A'
      SELECT @VLR_ANT_LEGAL =COALESCE(SUM(VALOR_LEG),0) FROM ANT WHERE CNSFCOM=@CNSFCOM AND ESTADO<>'A'
      SELECT @VL_SALDO=COALESCE(SALDO,0) FROM FCXP WHERE CNSFCXP=@CNSFCXP
      IF @VLR_ANT_LEGAL IS NULL
      SET @VLR_ANT_LEGAL=0
      IF @VL_SALDO IS NULL
      SET @VL_SALDO=0


      PRINT '@T_ANTICIPOS='+STR(@T_ANTICIPOS)
      PRINT '@VLR_ANT_LEGAL='+STR(@VLR_ANT_LEGAL)
      PRINT '@VL_SALDO='+STR(@VL_SALDO)

      SELECT @T_ANTICIPOS=COALESCE(@T_ANTICIPOS,0)-COALESCE(@VLR_ANT_LEGAL,0)

      IF @VL_SALDO<@T_ANTICIPOS
      BEGIN
         SELECT @T_ANTICIPOS=@VL_SALDO
      END

		IF @DEPURAR = 1 PRINT CONVERT(VARCHAR,GETDATE(),108)+'.- @CNSFCOM = '+@CNSFCOM
		IF @DEPURAR = 1 PRINT CONVERT(VARCHAR,GETDATE(),108)+'.- @T_ANTICIPOS = '+CONVERT(VARCHAR(20),@T_ANTICIPOS)
		IF @DEPURAR = 1 PRINT CONVERT(VARCHAR,GETDATE(),108)+'.- @CNSFCXP = '+@CNSFCXP

      IF @T_ANTICIPOS IS NULL
      BEGIN 
         SELECT @T_ANTICIPOS=0
      END
		UPDATE FCXP SET VLR_ABONOS = VLR_ABONOS+@T_ANTICIPOS WHERE CNSFCXP = @CNSFCXP
        
		IF @DEPURAR = 1 PRINT CONVERT(VARCHAR,GETDATE(),108)+'.- RECALCULO VALORES DE CXP'


		IF @T_ANTICIPOS > 0
		BEGIN
			IF @DEPURAR = 1 PRINT CONVERT(VARCHAR,GETDATE(),108)+'.- LEGALIZANDO ANTICIPO '
			SET @CNSANT=SPACE(20)  
			EXEC SPK_GENCONSECUTIVO @COMPANIA,@SEDE,'@NAT',@CNSANT OUTPUT
			SELECT @CNSANT = @SEDE + 'CM' + REPLACE(SPACE(6 - LEN(@CNSANT))+LTRIM(RTRIM(@CNSANT)),SPACE(1),0)
			IF @DEPURAR = 1 PRINT CONVERT(VARCHAR,GETDATE(),108)+'.- @CNSANT = '+@CNSANT

			INSERT INTO ANT (CNSANT, CNSFCOM, DESCRIPCION, FECHA, VALORCXP, VALOR_LEG, NOREFERENCIA, F_FACTURAREF, F_VENCE, USUARIO, 
							ESTADO, CNSFCXP, CONTABILIZADO, NROCOMPROBANTE)
			SELECT @CNSANT, @CNSFCOM, 'Legalización A: '+TER.RAZONSOCIAL+' Ref. '+FCXP.NOREFERENCIA, GETDATE(), @T_ANTICIPOS, @T_ANTICIPOS, FCXP.NOREFERENCIA,
					FCXP.F_FACTURAREF, FCXP.F_VENCE, @USUARIO, 'I', @CNSFCXP, 0, ''
			FROM FCXP INNER JOIN TER ON TER.IDTERCERO = FCXP.IDTERCERO
			WHERE FCXP.CNSFCXP = @CNSFCXP
          
			SELECT @ESTADO_ANT = ESTADO FROM ANT WHERE CNSANT = @CNSANT
			IF @DEPURAR = 1 PRINT CONVERT(VARCHAR,GETDATE(),108)+'.- @ESTADO_ANT = '+@ESTADO_ANT

			IF @ESTADO_ANT = 'I'
			BEGIN
				EXEC SPK_ANTICIPO_LEG_CXP @CNSFCOM, @CNSANT, @COMPANIA, @USUARIO, @SEDE
			END
		END
      EXEC SPK_CALCULOVALORESCXP @CNSFCXP
	END
  
	IF @DEPURAR = 1 PRINT CONVERT(VARCHAR,GETDATE(),108)+'.- ACTUALIZACION DE IMOVH'
 
	--- AQUI ACTUALIZARA EL KARDEX
	IF @DEPURAR = 1 PRINT CONVERT(VARCHAR,GETDATE(),108)+'.- ACTUALIZA KARDEX'
	EXEC SPK_ACTUALIZA_KARDEX @CNSMOV

	--ACTUALIZAR IMOVH COLOCANDO ESTADO=1 DONDE ESTADO=9
	UPDATE IMOVH SET ESTADO = 1,
					NOLOTEPEDIDO = (SELECT TOP 1 NOLOTEPEDIDO FROM IEXI WITH(NOLOCK) WHERE IMOVH.NOLOTE=IEXI.NOLOTE AND IEXI.IDBODEGA=@IDBODEGA AND IEXI.IDARTICULO=IMOVH.IDARTICULO),
					FECHAVENCE = (SELECT TOP 1 FECHAVENCE FROM IEXI WITH(NOLOCK) WHERE IMOVH.NOLOTE=IEXI.NOLOTE AND IEXI.IDBODEGA=@IDBODEGA AND IEXI.IDARTICULO=IMOVH.IDARTICULO),
			ENCXP=0
	WHERE IMOVH.ESTADO = 9 AND IMOVH.CNSMOV = @CNSMOV

	IF @DEPURAR = 1 PRINT CONVERT(VARCHAR,GETDATE(),108)+'.- ACTUALIZACION DE COTIZACIONES Y ORDENES DE COMPRA'
	SELECT @CNSFCOM=CNSFCOM FROM IMOV WHERE CNSMOV=@CNSMOV
	UPDATE FCOM SET ESTADO='I' WHERE CNSFCOM=@CNSFCOM
	SELECT @CNSCTZ=CNSFCOT,@IDTERCERO=IDTERCERO FROM FCOM WHERE CNSFCOM=@CNSFCOM
	UPDATE FCTZTE SET ESTADO=5 WHERE CNSCTZ=@CNSCTZ AND IDTERCERO=@IDTERCERO
	
	IF @IDTIPOMOV=@IDINVMOV_MOVANUSAL AND DBO.FNK_VALORVARIABLE('IMOV_ANUL_GEN_NOTA')='SI'
	BEGIN
		DECLARE @VRTOTAL DECIMAL (14,2)
		SET @CNSFNOT=SPACE(20)  
		EXEC SPK_GENCONSECUTIVO @COMPANIA,@SEDE,'@FNOTC',@CNSFNOT OUTPUT
		SELECT @CNSFNOT = @SEDE + 'C' + REPLACE(SPACE(8 - LEN(@CNSFNOT))+LTRIM(RTRIM(@CNSFNOT)),SPACE(1),0)

		INSERT INTO FNOT (CNSFNOT, CLASE, N_FACTURA, CNSCXC, IDTERCERO, F_NOTA, VR_TOTAL, OBSERVACION, MARCA, MARCACONT, 
							CONTABILIZADA, NROCOMPROBANTE, COMPANIA, USUARIO, CERRADA, ESTADO, PROCEDENCIA,APLICADAA,
							CONCEPTO, IDCONCEPTO, TIPOCONCEPTO,  VALORCONCEPTO, FACTE)
		SELECT @CNSFNOT, 'C', IMOV.N_FACTURA, FCXCD.CNSCXC, FTR.IDTERCERO, DBO.FNK_FECHA_SIN_MLS(GETDATE()),0, 'Anulacion de factura electronica', 0,0,
				0,'','01',@USUARIO,0,'O','NOTAS','F', 0, DBO.FNK_VALORVARIABLE('IDCONCEP_ANULAFTRCE'), 'P','100',0
		FROM IMOV
			INNER JOIN FTR ON FTR.N_FACTURA=IMOV.N_FACTURA
			INNER JOIN FCXCD ON FCXCD.N_FACTURA=FTR.N_FACTURA
		WHERE IMOV.CNSMOV=@CNSMOV


		INSERT INTO FNOTD (CNSFNOT, CLASE, ITEM, TIPO, IDSERVICIO, DESCRIPCION, CANTIDAD, VR_UNITARIO, VR_TOTAL, 
							N_CUOTA, PIVA, VALORIVA, N_FACTURA, CCOSTO, IDAREA, PREFIJO)
		SELECT @CNSFNOT, 'C', FTRD.N_CUOTA, 'S', IMOVH.IDARTICULO, FTRD.ANEXO, IMOVH.CANTIDAD,FTRD.VALOR, IMOVH.CANTIDAD*FTRD.VALOR, 
				FTRD.N_CUOTA, FTRD.PIVA, FTRD.VIVA, IMOV.N_FACTURA, FTRD.CCOSTO, FTRD.AREAPRESTACION, FTRD.PREFIJO
		FROM IMOV
			INNER JOIN IMOVH ON IMOVH.CNSMOV=IMOV.CNSMOV
			INNER JOIN FTRD ON FTRD.N_FACTURA=IMOV.N_FACTURA AND FTRD.IDARTICULO=IMOVH.IDARTICULO AND FTRD.NOLOTE=IMOVH.NOLOTE
			INNER JOIN FCXCD ON FCXCD.N_FACTURA=IMOV.N_FACTURA
			INNER JOIN IART ON IART.IDARTICULO=IMOVH.IDARTICULO
		WHERE IMOV.CNSMOV=@CNSMOV

		SELECT @VRTOTAL=SUM(VR_TOTAL) FROM FNOTD WHERE CNSFNOT=@CNSFNOT

		UPDATE FNOT SET VR_TOTAL=@VRTOTAL WHERE CNSFNOT=@CNSFNOT
		
		EXEC SPK_NOTASCXC @CNSFNOT, 'C','',@SEDE, @COMPANIA, @USUARIO, @SYS_COMPUTERNAME
	END	
	--SELECT @ESTADO=ESTADO, @IDTIPOMOV=IDTIPOMOV FROM IMOV WHERE CNSMOV=@CNSMOV
	------------------------CONFIRMACION AUTOMATICA DE INVENTARIOS----------SJUNCO----10-12-08---------------------------
	IF @DEPURAR = 1 PRINT CONVERT(VARCHAR,GETDATE(),108)+'.- CONFIRMACION AUTOMATICA' 
	IF @SECONTABILIZA = 1  AND @EXCEPCION_CONT = 0  --- JEDM 04.AGO.2011 SE VERIFICA QUE NO EXISTA EXCEPCION
	BEGIN
		SET @ANO = YEAR(DBO.FNK_FECHA_SIN_MLS(GETDATE()))
		SET @MES = MONTH(DBO.FNK_FECHA_SIN_MLS(GETDATE()))
		SELECT @CERRADO = CERRADO FROM PRI WHERE ANO= @ANO AND MES=@MES
		IF @CERRADO = 1
			BEGIN
			IF @DEPURAR = 1 PRINT CONVERT(VARCHAR,GETDATE(),108)+'.- PERIODO CONTABLE CERRADO'
			END
		ELSE
			BEGIN
				IF (SELECT COALESCE(TERCERIZADA,0)  FROM SED WHERE IDSEDE=@SEDE)=0
				BEGIN
					IF DBO.FNK_VALORVARIABLE('CONTABIMOV_JOB')='SI'
						BEGIN
							INSERT INTO IMOVC(CNSMOV, USUARIO, SYS_COMPUTERNAME, COMPANIA, SEDE, NROCOMPROBANTE)
							SELECT @CNSMOV,@USUARIO,@SYS_COMPUTERNAME,'01',@SEDE,''  
						END
					ELSE
						BEGIN
							EXEC SPK_NC_CONTAB_INV @CNSMOV,@USUARIO,@SYS_COMPUTERNAME,@COMPANIA,@SEDE, ''
						END
				END
  			END 		   
	END
	IF (SELECT COALESCE(USURECIBE,'') FROM IMOV WHERE CNSMOV=@CNSMOV )=''
	BEGIN 
	UPDATE IMOV SET USURECIBE= CASE WHEN COALESCE(IDRECIBE,'')='' THEN @USUARIO ELSE IDRECIBE END WHERE  CNSMOV=@CNSMOV 
	END

	IF DBO.FNK_VALORVARIABLE('IXCOUNTRY')='PERU'
	BEGIN
		IF DBO.FNK_VALORVARIABLE('INTERFAZ_INV')='INTER_SAP'
		BEGIN
			PRINT 'VOY A NOTIFICAR A SAP'
			EXEC SPK_XML_MOVIN @CNSMOV
			PRINT 'REGRESO DE NOTIFICAR A SAP'
		END 
	END
END


