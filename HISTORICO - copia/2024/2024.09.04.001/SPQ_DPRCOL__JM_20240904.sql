CREATE OR ALTER PROCEDURE DBO.SPQ_DPRCOL
	@JSON  NVARCHAR(MAX)
WITH
ENCRYPTION
AS
DECLARE @PARAMETROS		NVARCHAR(MAX)
DECLARE @MODELO			VARCHAR(100)
DECLARE @METODO			VARCHAR(100)
DECLARE @USUARIO		VARCHAR(12)
DECLARE @UBICACIONLOGO	VARCHAR(512)
DECLARE	@LOGO			VARBINARY(MAX)
DECLARE @SQLString		NVARCHAR(1000)
DECLARE @SYS_COMPUTERNAME VARCHAR(MAX)
DECLARE @IDSEDE			VARCHAR(2)
DECLARE @CONSECUTIVOHCA VARCHAR(20)
DECLARE @CONSECUTIVOCIT VARCHAR(20)
DECLARE @UBICACIONLOGO_AUX VARCHAR(512)
DECLARE @N_FACTURA         VARCHAR(20)
DECLARE @IDTERCERO         VARCHAR(20)
DECLARE @IDPLAN         VARCHAR(20)
DECLARE @IDFORMATOFTR  VARCHAR(20)
DECLARE @TBLERRORES		TABLE(ERROR VARCHAR(200))
BEGIN
   
	IF ISJSON(@JSON) = 0 
	BEGIN
		RAISERROR('Json: Formato Erroneo',16,1)
		RETURN
	END
   
	SELECT * 
	INTO #JSON
	FROM OPENJSON (@json)
	WITH (
		MODELO         VARCHAR(100)     '$.MODELO',
		METODO         VARCHAR(100)     '$.METODO',
		USUARIO        VARCHAR(12)      '$.USUARIO',
		PARAMETROS     NVARCHAR(MAX)  AS JSON
	)

	SELECT @MODELO = MODELO , @METODO = METODO , @PARAMETROS = PARAMETROS, @USUARIO = USUARIO
	FROM #JSON

	IF @METODO = 'LOGO' 
	BEGIN
		BEGIN TRY
		
			SET @UBICACIONLOGO = dbo.FNK_VALORVARIABLE('UBICACIONLOGO')

			SELECT @SYS_COMPUTERNAME = SYS_COMPUTERNAME, @IDSEDE = IDSEDE FROM USUSU WHERE USUARIO=@USUARIO
			SELECT @IDSEDE = CASE WHEN COALESCE(IDSEDE,'')='' THEN @IDSEDE ELSE IDSEDE END FROM UBEQ WHERE SYS_COMPUTERNAME=@SYS_COMPUTERNAME

			SELECT @UBICACIONLOGO = CASE WHEN COALESCE(LOGO,'')='' THEN @UBICACIONLOGO ELSE LOGO END
			FROM SED
			WHERE IDSEDE=@IDSEDE OR COALESCE(@IDSEDE,'')=''

			IF LTRIM(RTRIM(COALESCE(@UBICACIONLOGO,''))) = '' 
				SELECT @UBICACIONLOGO = NULL

			SELECT @CONSECUTIVOHCA = CONSECUTIVOHCA
			FROM OPENJSON(@PARAMETROS)
			WITH(CONSECUTIVOHCA	VARCHAR(20)	'$.CONSECUTIVOHCA')


			IF COALESCE(@CONSECUTIVOHCA, '')<>''
			BEGIN
				--SELECT @NIT = NIT 
				--FROM TER 
				--INNER JOIN USVGS ON TER.IDTERCERO=USVGS.DATO
				--WHERE IDVARIABLE = 'IDTERCEROINSTALADO'

				SELECT @CONSECUTIVOCIT = CONSECUTIVOCIT 
				FROM HCA
				WHERE CONSECUTIVO = @CONSECUTIVOHCA

				PRINT '@CONSECUTIVOCIT = ' + @CONSECUTIVOCIT

				IF COALESCE(@CONSECUTIVOCIT, '')<>''
				BEGIN
					 SELECT @UBICACIONLOGO_AUX = LOGO
					 FROM KUNG
					 INNER JOIN CIT ON CIT.CODUNG = KUNG.CODUNG
					 WHERE CIT.CONSECUTIVO=@CONSECUTIVOCIT
					 AND LTRIM(RTRIM(COALESCE(LOGO,'')))<>''

					 IF LEN(COALESCE(@UBICACIONLOGO_AUX, ''))>0
					 BEGIN
						SET @UBICACIONLOGO = @UBICACIONLOGO_AUX
					 END

					 PRINT '@UBICACIONLOGO = ' + @UBICACIONLOGO
				END
			END
			SELECT @N_FACTURA = N_FACTURA
			FROM OPENJSON(@PARAMETROS)
			WITH(N_FACTURA	VARCHAR(20)	'$.N_FACTURA')

         IF COALESCE(@N_FACTURA,'')<>'' AND DBO.FNK_VALORVARIABLE('FACTSEDE')='SI'
         BEGIN
            PRINT 'Facturacion por SEDE'
            SELECT @UBICACIONLOGO_AUX=SED.LOGO
            FROM FTR INNER JOIN SED ON FTR.IDSEDE=SED.IDSEDE
            WHERE FTR.N_FACTURA=@N_FACTURA
            
            IF DBO.FNK_VALORVARIABLE('IXCOUNTRY')='PERU'
            BEGIN
               PRINT 'INGRESO A PERU'
               SELECT @IDFORMATOFTR=IDFORMATO FROM FTR WHERE N_FACTURA=@N_FACTURA
               IF @IDFORMATOFTR=DBO.FNK_VALORVARIABLE('IDFORMATOFTR_BOLETA') -- TICKET
               BEGIN
                  PRINT 'SI TENGO DE DONDE'
                  SELECT @UBICACIONLOGO_AUX=dbo.FNK_VALORVARIABLE('UBICACIONLOGO_UT')
               END
            END

				IF LEN(COALESCE(@UBICACIONLOGO_AUX, ''))>0
				BEGIN
				SET @UBICACIONLOGO = @UBICACIONLOGO_AUX
				END

				PRINT '@UBICACIONLOGO = ' + @UBICACIONLOGO
         END


			SET @SQLString = 'SELECT @LOGO = col FROM OPENROWSET(BULK '''+@UBICACIONLOGO+''', SINGLE_BLOB) Tbl(col)';  
			EXECUTE sp_executesql  @SQLString, @Params = N'@LOGO VARBINARY(MAX) OUTPUT', @LOGO=@LOGO OUTPUT

			SELECT OK = 'OK'
			SELECT CAST(N'' AS XML).value('xs:base64Binary(xs:hexBinary(sql:column("bin")))', 'VARCHAR(MAX)')  LOGO
				,@METODO AS METODO
			FROM (SELECT @LOGO AS bin) AS bin_sql_server_temp;

		END TRY
		BEGIN CATCH
			INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE()            
		END CATCH
		IF(SELECT COUNT(*) FROM @TBLERRORES) >0
		BEGIN
			SELECT 'KO' OK, '' IDCONCENTIMIENTO
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END

		RETURN
	END

	IF @METODO = 'LOGO_SECUNDARIO'
	BEGIN
		BEGIN TRY

			IF(SELECT COUNT(*) FROM @TBLERRORES) <=0
			BEGIN
				SET @UBICACIONLOGO = dbo.FNK_VALORVARIABLE('UBICACIONLOGO_UT') --'c:\KrystalosAS\Logos\CEM_AutoInmune.png'
				IF COALESCE(@UBICACIONLOGO,'')<>''
				BEGIN
					SET @SQLString = 'SELECT @LOGO = col FROM OPENROWSET(BULK '''+@UBICACIONLOGO+''', SINGLE_BLOB) Tbl(col)';  
					EXECUTE sp_executesql  @SQLString, @Params = N'@LOGO VARBINARY(MAX) OUTPUT', @LOGO=@LOGO OUTPUT
				END
			END

		END TRY
		BEGIN CATCH
			INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE()          
		END CATCH

		IF @LOGO IS NULL
		BEGIN
			INSERT INTO @TBLERRORES(ERROR)
			SELECT 'Variable UBICACIONLOGO_UT no configurada'
		END

		IF(SELECT COUNT(*) FROM @TBLERRORES) >0
		BEGIN
			SELECT 'KO' OK, NULL LOGO
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END

		SELECT OK='OK', CAST(N'' AS XML).value('xs:base64Binary(xs:hexBinary(sql:column("bin")))', 'VARCHAR(MAX)')  LOGO
			,@METODO AS METODO
		FROM (SELECT @LOGO AS bin) AS bin_sql_server_temp;
	END

	IF @METODO = 'LOGO_PPT'
	BEGIN
		BEGIN TRY
			SELECT @IDPLAN = JSON_VALUE(@PARAMETROS,'$.IDPLAN')
			SELECT @IDTERCERO = JSON_VALUE(@PARAMETROS,'$.IDTERCERO')
			SELECT @UBICACIONLOGO = UBICACIONLOGO FROM PPT WHERE IDPLAN = @IDPLAN AND IDTERCERO = @IDTERCERO
			IF COL_LENGTH('PPT','UBICACIONLOGO') IS NULL OR COALESCE(@UBICACIONLOGO, '') = ''
			BEGIN
				IF 1=2
				BEGIN
					SELECT @JSON =(
					SELECT MODELO = 'DPRCOL'
						,METODO = 'LOGO_SECUNDARIO'
						,USUARIO = 'EZERPA' 
					FOR JSON PATH
					)
					SELECT @JSON = REPLACE(@JSON,'[','')
					SELECT @JSON = REPLACE(@JSON,']','')
					EXEC SPQ_Json @JSON
					RETURN
				END
			END
			ELSE
			BEGIN
				IF COALESCE(@UBICACIONLOGO,'')<>''
				BEGIN
					SET @SQLString = 'SELECT @LOGO = col FROM OPENROWSET(BULK '''+@UBICACIONLOGO+''', SINGLE_BLOB) Tbl(col)';  
					EXECUTE sp_executesql  @SQLString, @Params = N'@LOGO VARBINARY(MAX) OUTPUT', @LOGO=@LOGO OUTPUT

					SELECT OK='OK', CAST(N'' AS XML).value('xs:base64Binary(xs:hexBinary(sql:column("bin")))', 'VARCHAR(MAX)')  LOGO	,@METODO AS METODO
					FROM (SELECT @LOGO AS bin) AS bin_sql_server_temp;
					RETURN
				END
			END


		END TRY
		BEGIN CATCH
			INSERT INTO @TBLERRORES(ERROR) SELECT ERROR_MESSAGE()          
		END CATCH

		IF(SELECT COUNT(*) FROM @TBLERRORES) >0
		BEGIN
			SELECT 'KO' OK, NULL LOGO
			SELECT ERROR FROM @TBLERRORES
			RETURN
		END

		SELECT 'OK' OK, NULL LOGO
	END
END


