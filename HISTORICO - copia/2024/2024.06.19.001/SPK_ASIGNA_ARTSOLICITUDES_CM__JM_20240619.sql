IF EXISTS (SELECT NAME FROM SYSOBJECTS WHERE NAME = 'SPK_ASIGNA_ARTSOLICITUDES_CM' AND TYPE = 'P')
BEGIN
   DROP PROCEDURE SPK_ASIGNA_ARTSOLICITUDES_CM
END
GO
CREATE PROCEDURE DBO.SPK_ASIGNA_ARTSOLICITUDES_CM
@CNSIZSOLD  VARCHAR(20),
@IDARTICULO VARCHAR(20),
@USUARIO    VARCHAR(12),
@CNSMOV     VARCHAR(20)
WITH ENCRYPTION
AS
DECLARE @IDBODEGA VARCHAR(20)
DECLARE @CLASE    VARCHAR(20)
DECLARE @CNSHTX   VARCHAR(20)
DECLARE @IDARTICULOREAL VARCHAR(20)
DECLARE @NOPRESTACION   VARCHAR(20)
DECLARE @CNSIZSOL  VARCHAR(20)
DECLARE @IDSEDE    VARCHAR(6)
DECLARE @NOLOTE    VARCHAR(20)
DECLARE @CLASEBOD  INT
BEGIN
   IF (SELECT COUNT(*) FROM IZSOLDT WHERE CNSIZSOLD =  @CNSIZSOLD AND IDARTICULO = @IDARTICULO AND COALESCE(ESTADO,0) = 0) <= 0
   BEGIN
      PRINT 'ERROR: NO EXISTEN ITEMS A ASIGNAR'
      RAISERROR('ERROR: NO EXISTEN ITEMS A ASIGNAR',16,1) 
      RETURN
   END
   IF COALESCE(@CNSMOV,'')=''
   BEGIN
     SELECT @CNSIZSOL=CNSIZSOL,@IDSEDE=LEFT(CNSIZSOL,LEN(CNSIZSOL)-10) FROM IZSOLD WHERE CNSIZSOLD=@CNSIZSOLD 
   --EXEC SPK_CM_GENIMOV_SOL '& FNSQLFMT(IZSOL:CNSIZSOL)&', '&FNSQLFMT(GLO:IDSEDE)&', '&FNSQLFMT(GLO:USUARIO)

     EXEC SPK_CM_GENIMOV_SOL @CNSIZSOL,@IDSEDE,@USUARIO

     SELECT TOP 1 @CNSMOV=IMOV.CNSMOV FROM IMOV WHERE NODOCUMENTO=@CNSIZSOL AND PROCEDENCIA='CM_SOL' AND ESTADO=0 AND USUARIO=@USUARIO
   END
   UPDATE IZSOLDT SET CNSMOV=@CNSMOV WHERE CNSIZSOLD=@CNSIZSOLD AND COALESCE(CNSMOV,'')=''
   SELECT @IDBODEGA = IDBODEGA FROM IMOV WHERE CNSMOV = @CNSMOV

   SELECT @CLASE=IZSOL.CLASE,@CNSHTX=IZSOLD.CNSHBALI, @NOPRESTACION=IZSOL.CNSIZSOLM 
   FROM IZSOLD INNER JOIN IZSOL ON IZSOLD.CNSIZSOL=IZSOL.CNSIZSOL
   WHERE IZSOLD.CNSIZSOLD=@CNSIZSOLD
   SELECT TOP 1 @IDARTICULOREAL=IDARTICULOREAL  FROM IZSOLDT WHERE CNSIZSOLD=@CNSIZSOLD

      UPDATE IMOVH SET CANTIDAD = CANTIDAD + IZSOLDT.CANTIDADSOL, CANTPEDIDA = CANTPEDIDA + IZSOLDT.CANTIDADSOL
      FROM   IMOVH INNER JOIN IZSOLDT ON IMOVH.IDARTICULO = IZSOLDT.IDARTICULOREAL
                                       AND IMOVH.NOLOTE     = IZSOLDT.NOLOTE
      WHERE  IZSOLDT.CNSIZSOLD  = @CNSIZSOLD 
      AND    IZSOLDT.IDARTICULO = @IDARTICULO 
      AND    COALESCE(IZSOLDT.ESTADO,0) = 0
      AND    IMOVH.CNSMOV=@CNSMOV
      AND    EXISTS ( SELECT * FROM IMOVH A WHERE A.CNSMOV = IMOVH.CNSMOV
                        AND    A.IDARTICULO = IZSOLDT.IDARTICULOREAL
                        AND    A.NOLOTE     = IZSOLDT.NOLOTE )


      INSERT INTO IMOVH (CNSMOV, IDARTICULO, EXISTENCIA, CANTIDAD, CANTPEDIDA, PCOSTO, NOLOTE, NOLOTEPEDIDO, FECHAVENCE, ESTADO, IDARTICULOTF,
                           CANTIDADTF, PCOSTOANTES, CNSTRAN, ITEM, PVENTA, USUARIO, USUARIOCONF, FECHACONF, PRIEXI, FECHAREPOSI, IDARTICULOORI,
                           CANTIDADORI, TIENECAMBIO, DETALLE, CANT_EN_ACTIVOS, ENCXP, PIVA, VLRIVA, PDTO, VLRDTO, CNSHTX, COTIZADO, IDIMPUESTO,
                           IDCLASE, ITFC, CNSITFC, CUENTA_FIMPDV, IDITAR, CODCUM, CAMBIADO, PCOSTOANTESMOD, USUARIOCAMBIO, IDFABRICANTE, CUENTADB,
                           CUENTACR, IDSERVICIO,DILUYENTE)
      SELECT @CNSMOV, IDARTICULOREAL, IEXI.EXISLOTE, IZSOLDT.CANTIDADSOL, IZSOLDT.CANTIDADSOL, IART.PCOSTO, IZSOLDT.NOLOTE, IEXI.NOLOTEPEDIDO, IEXI.FECHAVENCE, 0, NULL,
               0, IART.PCOSTO, IZSOLDT.CNSIZSOLDT, NULL, NULL , @USUARIO, NULL, NULL, 0, NULL, IZSOLDT.IDARTICULOREAL,
               IZSOLDT.CANTIDADSOL, 0, '', 0, 0, NULL  , NULL  , 0, 0 ,IZSOLDT.CNSIZSOLD , 0, NULL,
               NULL, 0, NULL, NULL, IART.IDITAR, IART.CODCUM, 0, IART.PCOSTO, NULL, IART.IDFABRICANTE, NULL, NULL, IZSOLD.IDSERVICIO,IZSOLD.TIPOM
      FROM   IZSOLDT INNER JOIN IEXI ON IZSOLDT.IDARTICULOREAL = IEXI.IDARTICULO
                                    AND IZSOLDT.NOLOTE          = IEXI.NOLOTE
                     INNER JOIN IART ON IZSOLDT.IDARTICULOREAL = IART.IDARTICULO
                     INNER JOIN IZSOLD ON IZSOLDT.CNSIZSOLD=IZSOLD.CNSIZSOLD
      WHERE  IZSOLDT.CNSIZSOLD  = @CNSIZSOLD 
      AND    IZSOLDT.IDARTICULO = @IDARTICULO 
      AND    COALESCE(IZSOLDT.ESTADO,0) = 0
      AND    IEXI.IDBODEGA              = @IDBODEGA
      AND    NOT EXISTS ( SELECT * FROM IMOVH A WHERE A.CNSMOV = @CNSMOV
                           AND    A.IDARTICULO = IZSOLDT.IDARTICULOREAL
                           AND    A.NOLOTE     = IZSOLDT.NOLOTE )  
				

      UPDATE ISAL SET CANTIDAD = ISAL.CANTIDAD + IZSOLDT.CANTIDADSOL
      FROM   ISAL INNER JOIN IZSOLDT ON ISAL.CNSMOV=IZSOLDT.CNSMOV
         AND ISAL.IDARTICULO=IZSOLDT.IDARTICULOREAL AND ISAL.NOLOTE=IZSOLDT.NOLOTE
      WHERE  IZSOLDT.CNSIZSOLD=@CNSIZSOLD AND IZSOLDT.CNSMOV=@CNSMOV AND IZSOLDT.IDARTICULO=@IDARTICULO
      AND    COALESCE(IZSOLDT.ESTADO,0) = 0
      AND    EXISTS ( SELECT * FROM ISAL A WHERE A.CNSMOV = @CNSMOV
                      AND    A.IDARTICULO = IZSOLDT.IDARTICULOREAL
                      AND    A.NOLOTE     = IZSOLDT.NOLOTE )  

		INSERT INTO ISAL (CNSMOV, NOLOTE, IDARTICULO, CANTIDAD, FECHA, NOLOTEPEDIDO, FECHAVENCE, PCOSTO, IDARTICULO_IMOVH,VR_ANTESIVA,VR_IVA) 
		SELECT @CNSMOV,IZSOLDT.NOLOTE,IZSOLDT.IDARTICULOREAL,IZSOLDT.CANTIDADSOL,DBO.FNK_FECHA_SIN_MLS(GETDATE()),IEXI.NOLOTEPEDIDO,IEXI.FECHAVENCE,IART.PCOSTO,IZSOLDT.IDARTICULOREAL,IEXI.VR_ANTESIVA,IEXI.VR_IVA
      FROM   IZSOLDT INNER JOIN IEXI ON IZSOLDT.IDARTICULOREAL = IEXI.IDARTICULO
                                       AND IZSOLDT.NOLOTE          = IEXI.NOLOTE
                     INNER JOIN IART ON IZSOLDT.IDARTICULOREAL = IART.IDARTICULO
                     INNER JOIN IZSOLD ON IZSOLDT.CNSIZSOLD=IZSOLD.CNSIZSOLD
      WHERE  IZSOLDT.CNSIZSOLD  = @CNSIZSOLD 
      AND    IZSOLDT.IDARTICULO = @IDARTICULO 
      AND    COALESCE(IZSOLDT.ESTADO,0) = 0
      AND    IEXI.IDBODEGA              = @IDBODEGA
      AND    NOT EXISTS ( SELECT * FROM ISAL A WHERE A.CNSMOV = @CNSMOV
                           AND    A.IDARTICULO = IZSOLDT.IDARTICULOREAL
                           AND    A.NOLOTE     = IZSOLDT.NOLOTE )   

      
      UPDATE IZSOLDT SET ESTADO = 1, LIBERADO=CASE WHEN IART.IDITAR=DBO.FNK_VALORVARIABLE('IDITARHEMODERIVADOS') THEN 4 ELSE 0 END
      FROM   IZSOLDT INNER JOIN IMOVH ON IZSOLDT.IDARTICULOREAL = IMOVH.IDARTICULO
                                       AND IZSOLDT.NOLOTE         = IMOVH.NOLOTE
                     INNER JOIN IART  ON IZSOLDT.IDARTICULOREAL = IART.IDARTICULO
      WHERE  IZSOLDT.CNSIZSOLD  = @CNSIZSOLD 
      AND    IZSOLDT.IDARTICULO = @IDARTICULO 
      AND    COALESCE(IZSOLDT.ESTADO,0) = 0
      AND    IMOVH.CNSMOV       = @CNSMOV

      UPDATE IZSOLDT SET ESTADO = 1
      WHERE  IZSOLDT.CNSIZSOLD  = @CNSIZSOLD 
      AND    IZSOLDT.IDARTICULO = @IDARTICULO 
      AND    COALESCE(IZSOLDT.ESTADO,0) = 0

      SELECT @CLASEBOD=ISNULL(ITBOD.CLASE,0)
      FROM IBOD INNER JOIN ITBOD ON ITBOD.IDTBODEGA=IBOD.IDTBODEGA
      WHERE IDBODEGA=@IDBODEGA

      IF DBO.FNK_VALORVARIABLE('IXCOUNTRY')='PERU' AND @CLASEBOD=0
      BEGIN
         PRINT  'BUSCO PRECIO DE VENTA Y CALCULO EL COPAGO...'

         IF DBO.FNK_VALORVARIABLE('IDTERCEROINSTALADO')='20602059261'
         BEGIN
            PRINT 'SOLO PARA EXPERTTA'
            EXEC SPK_ASIGNA_COPAGOS_CM @CNSMOV
         END
         BEGIN
            EXEC SPK_ASIGNA_COPAGOS_IMOVH @CNSMOV
         END
      END
      
      IF @CLASE='HTX'
      BEGIN
         UPDATE HTX SET CNSMOV=@CNSMOV,IDARTICULO=@IDARTICULOREAL WHERE CNSHTX=@CNSHTX
      END
      IF @CLASE='HPRE'
      BEGIN
         UPDATE HPRED SET IDARTICULO=@IDARTICULOREAL WHERE  NOPRESTACION=@NOPRESTACION AND IDSERVICIO=@IDARTICULO 
      END    
      
      --PRINT 'LIBERANDO LAS RESERVAS'
      --SELECT @NOLOTE= NOLOTE FROM IZSOLDT WHERE CNSIZSOLDT=@CNSIZSOLT
      --UPDATE IZSOLDT WHERE 
     /* SE COMENTARIZA POR ERROR EN LA LOGICA 
     SELECT  @NOLOTE=NOLOTE,@IDARTICULO=IDARTICULO FROM IZSOLDT WHERE CNSIZSOLD=@CNSIZSOLD
      UPDATE IEXI SET EXISLOTE = EXISLOTE - 1 WHERE IDBODEGA=@IDBODEGA AND NOLOTE=@NOLOTE */

     IF (SELECT COUNT(*) FROM BSRES WHERE LOTE=@NOLOTE AND IDARTICULO=@IDARTICULO)>1
     BEGIN
        UPDATE BSRES SET ESTADO='Cancelada' 
        WHERE  LOTE=@NOLOTE AND IDARTICULO=@IDARTICULO 
        AND    CNSIZSOLD NOT IN(@CNSIZSOLD)
     END                                   
END

