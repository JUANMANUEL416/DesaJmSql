IF EXISTS(SELECT NAME FROM SYSOBJECTS WHERE NAME = 'SPK_CIERRE_MES_CONTABLE_NIIF' AND XTYPE='P')
BEGIN
   DROP PROCEDURE SPK_CIERRE_MES_CONTABLE_NIIF
END
GO
CREATE PROC DBO.SPK_CIERRE_MES_CONTABLE_NIIF
@ANO     VARCHAR(4), 
@MES     INT,
@USUARIO VARCHAR(12),
@ESP     INT = 0
WITH ENCRYPTION
AS
DECLARE @AUX    INT
DECLARE @ANOANT VARCHAR(4)
DECLARE @MESANT INT
DECLARE @S4     DECIMAL(14,2),
        @S5     DECIMAL(14,2),
        @S6     DECIMAL(14,2),
        @RES    DECIMAL(14,2)
BEGIN
   PRINT 'SPK_CIERRE_MES_CONTABLE_NIIF '''+@ANO+''','''+CAST(@MES AS VARCHAR(2))+''','''+@USUARIO+''''
   IF @ESP = 0
   BEGIN
      SELECT @AUX = COUNT(*) FROM PRI WHERE COALESCE(SINIIF,0) = 1
      IF COALESCE(@AUX,0) > 1
      BEGIN
         RAISERROR('MAS DE UN PERIODO DEFINIDO COMO DE SALDOS INICIALES',16,1)
         RETURN
      END
      SELECT @AUX = COALESCE(SINIIF,0) FROM PRI WHERE ANO = @ANO AND MES = @MES
      IF COALESCE(@AUX,0) > 0
      BEGIN
         RAISERROR('PERIODO ESTA DEFINIDO COMO DE SALDOS INICIALES',16,1)
         RETURN
      END
      SELECT @AUX = COALESCE(PRI.CERRADONIIF,0) FROM PRI WHERE ANO = @ANO AND MES = @MES
      IF @AUX = 1
      BEGIN
         RAISERROR('PERIODO CERRADO ',16,1)
         RETURN
      END  
   
      SELECT @AUX = COUNT(*) FROM MCPNIIF WHERE COALESCE(ESTADO,0) <> '2' AND COALESCE(ANULADO,0) = 0 AND ANO = @ANO AND MES = @MES
      IF COALESCE(@AUX,0) > 0
      BEGIN
         RAISERROR('FALTAN COMPROBANTES POR CONFIRMAR ',16,1)
         RETURN
      END
      SELECT @MESANT = CASE @MES WHEN 1 THEN 12 ELSE @MES -1 END
      SELECT @ANOANT = CASE @MES WHEN 1 THEN @ANO - 1 ELSE @ANO END
   
      SELECT @AUX = COALESCE(CERRADONIIF,0) FROM PRI WHERE ANO = @ANOANT AND MES = @MESANT
      IF @AUX = 0
      BEGIN
         RAISERROR('PERIODO ANTERIOR NO ESTA CERRADO.',16,1)
         RETURN
      END

      SELECT @AUX = COALESCE(COUNT(*),0) FROM MCPE WHERE ANO = @ANO AND MES = @MES
      IF @AUX > 0
      BEGIN
         RAISERROR('EN EL PERIODO EXISTEN COMPROBANTES CON ERRORES (MCPE).',16,1)
         RETURN
      END

      IF DBO.FNK_VALORVARIABLE('VALIDAINVCIERRECONT') = 'SI' 
      BEGIN
         IF @MES < 12 
	         SELECT @AUX = COUNT(*) FROM IMOV WHERE FECHAMOV >= '1/' + CONVERT(VARCHAR,@MES) + '/' + CONVERT(VARCHAR,@ANO) AND FECHAMOV < '1/' + CONVERT(VARCHAR,@MES+1) + '/' + CONVERT(VARCHAR,@ANO) AND ESTADO = 0 AND IDTIPOMOV IN (SELECT IDTIPOMOV FROM ITMO WHERE SECONTABILIZA=1)
         ELSE
	         SELECT @AUX = COUNT(*) FROM IMOV WHERE FECHAMOV >= '1/12/' + CONVERT(VARCHAR,@ANO) AND FECHAMOV < '1/1/' + CONVERT(VARCHAR,@ANO+1) AND ESTADO = 0 AND IDTIPOMOV IN (SELECT IDTIPOMOV FROM ITMO WHERE SECONTABILIZA=1)

         IF COALESCE(@AUX,0) > 0
         BEGIN
            RAISERROR('HAY MOVIMIENTOS DE INVENTARIO PENDIENTES POR CONFIRMAR PARA ESTE PERIODO CONTABLE',16,1)
            RETURN
         END  
      END 
   END
   ELSE
   BEGIN
      SELECT @MESANT = CASE @MES WHEN 1 THEN 12 ELSE @MES -1 END
      SELECT @ANOANT = CASE @MES WHEN 1 THEN @ANO - 1 ELSE @ANO END
   END

   CREATE TABLE #GENEALOGICO
          (CUENTA         VARCHAR(16) COLLATE database_default,   
           NOMCUENTA      VARCHAR(200) COLLATE database_default,   
           TIPO           VARCHAR(7)  COLLATE database_default,   
           CENTRO         SMALLINT,   
           TERCERO        SMALLINT,  
           CLASE          VARCHAR(10) COLLATE database_default,  
           NIVEL          SMALLINT,  
           CUENTA_SUMA    VARCHAR(16) COLLATE database_default,
           CUENTA_DETALLE VARCHAR(16) COLLATE database_default
          )
          
   PRINT 'INSERTAMOS GENEALOGICO       '
   INSERT INTO #GENEALOGICO
   SELECT  * FROM FNK_GENEALOGICO_CUENIIF()
   PRINT 'BORRAMOS SALDOS DEL MES'
   DELETE SMNIIF WHERE ANO = @ANO AND MES = @MES  
   PRINT 'BALANCE DEL MES DB Y CR CON MOVIMIENTOS DEL MES'
   INSERT INTO SMNIIF (ANO, MES, CUENTA, NOMCUENTA, SI, DB, CR, SF, SM, NTZ, SI_DB, SI_CR, SF_DB, SF_CR)
   SELECT @ANO, @MES, X.CUENTA, X.NOMCUENTA, 0 SI, 
          SUM(CASE MCHNIIF.TIPO WHEN 'DB' THEN MCHNIIF.VALOR ELSE 0 END) DB, 
          SUM(CASE MCHNIIF.TIPO WHEN 'CR' THEN MCHNIIF.VALOR ELSE 0 END) CR,
          0 SF,
          0 SM, 	       
          NTZ.TIPO, 0 SI_DB, 0 SI_CR, 0 SF_DB, 0 SF_CR
   FROM   MCPNIIF INNER JOIN MCHNIIF            ON MCPNIIF.NROCOMPROBANTE = MCHNIIF.NROCOMPROBANTE 
              INNER JOIN #GENEALOGICO X ON X.CUENTA_DETALLE = MCHNIIF.CUENTA
              INNER JOIN NTZ  ON  LEFT(MCHNIIF.CUENTA,1) = NTZ.N_INICIAL
   WHERE  MCPNIIF.ESTADO = 2 AND ISNULL(MCPNIIF.ANULADO,0) = 0
   AND    MCPNIIF.ANO =  @ANO
   AND    MCPNIIF.MES =  @MES
   GROUP BY X.CUENTA, X.NOMCUENTA, NTZ.TIPO	       
   ORDER BY X.CUENTA     

   /******************************************************************************************************************/
   PRINT 'SE INSERTA EN BALANCE CUENTAS QUE NO TUVIERON MOVIMIENTO EN EL MES PERO TIENEN SALDOS ANTERIORES DE SALDOMES'
   /******************************************************************************************************************/
   
   INSERT INTO SMNIIF(ANO, MES, CUENTA,NOMCUENTA ,SI,DB,CR,SF, SM, NTZ, SI_DB, SI_CR, SF_DB, SF_CR)
   SELECT @ANO, @MES, X.CUENTA, CUE.NOMCUENTA, 0, 0 , 0 , 0 , 0 , NTZ.TIPO, 0, 0, 0, 0
   FROM   SMNIIF A INNER JOIN #GENEALOGICO X ON X.CUENTA_DETALLE = A.CUENTA
                     INNER JOIN NTZ            ON LEFT(A.CUENTA,1) = NTZ.N_INICIAL
                     INNER JOIN CUENIIF CUE            ON X.CUENTA = CUE.CUENTA
   WHERE  X.CUENTA NOT IN(SELECT CUENTA FROM SMNIIF WHERE ANO = @ANO AND MES = @MES)
   AND    A.ANO    = @ANOANT
   AND    A.MES    = @MESANT
   GROUP BY X.CUENTA, CUE.NOMCUENTA, NTZ.TIPO
   ORDER BY X.CUENTA      

   /******************************/
   /* COLOCAMOS SALDOS INICIALES */ 
   /******************************/
   UPDATE SMNIIF SET SMNIIF.SI = X.SF, SI_DB = X.SF_DB, SI_CR = X.SF_CR
   FROM   SMNIIF INNER JOIN (
                               SELECT SALDOMES.CUENTA, SALDOMES.SF, SALDOMES.SF_DB, SALDOMES.SF_CR
	                            FROM   SMNIIF  SALDOMES
	                            WHERE  SALDOMES.ANO = @ANOANT
	                            AND    SALDOMES.MES = @MESANT 
                               ) X ON SMNIIF.CUENTA = X.CUENTA	
   WHERE   SMNIIF.ANO = @ANO
   AND     SMNIIF.MES = @MES                            

   /*****************************/
   /* CALCULAMOS SALDOS FINALES */
   /*****************************/
   UPDATE SMNIIF SET SF = CASE NTZ.TIPO WHEN 'DB' THEN SMNIIF.SI + SMNIIF.DB - SMNIIF.CR
                                                    ELSE SMNIIF.SI + SMNIIF.CR - SMNIIF.DB
                            END,                
                       SM = CASE NTZ.TIPO WHEN 'DB' THEN SMNIIF.DB - SMNIIF.CR
                                                    ELSE SMNIIF.CR - SMNIIF.DB
                            END                     
   FROM   SMNIIF INNER JOIN NTZ ON LEFT(SMNIIF.CUENTA,1) = NTZ.N_INICIAL
   WHERE  SMNIIF.ANO = @ANO
   AND    SMNIIF.MES = @MES
   /*************************************/
   PRINT 'SALDO FINAL DB Y CR'
   /*************************************/
   UPDATE SMNIIF SET SF_DB = CASE NTZ.TIPO WHEN 'DB' THEN CASE WHEN SF>= 0 THEN SF ELSE 0  END                      
                                                       ELSE CASE WHEN SF>= 0 THEN 0  ELSE ABS(SF) END
                               END,
                       SF_CR = CASE NTZ.TIPO WHEN 'CR' THEN CASE WHEN SF>= 0 THEN SF ELSE 0  END                      
                                                       ELSE CASE WHEN SF>= 0 THEN 0  ELSE ABS(SF) END
                               END
   FROM   SMNIIF INNER JOIN NTZ ON LEFT(SMNIIF.CUENTA,1) = NTZ.N_INICIAL
   WHERE  SMNIIF.ANO = @ANO
   AND    SMNIIF.MES = @MES
   IF @ESP = 0
   BEGIN
     /*VAMOS A CERRAR POR FACTURA*/
     EXEC SPK_NC_CIERRE_FACTURAS_NIIF @ANO, @MES, @USUARIO
     -- CERRAMOS EL PERIODO
   END
   UPDATE PRI SET CERRADONIIF = 1 WHERE ANO = @ANO AND MES = @MES AND COMPANIA = '01'
   /*COLOCAR RESULTADO DEL PERIODO*/
   SELECT @S4 = SMNIIF.SF FROM SMNIIF WHERE CUENTA = '4' AND ANO = @ANO AND MES = @MES
   SELECT @S5 = SMNIIF.SF FROM SMNIIF WHERE CUENTA = '5' AND ANO = @ANO AND MES = @MES
   SELECT @S6 = SMNIIF.SF FROM SMNIIF WHERE CUENTA = '6' AND ANO = @ANO AND MES = @MES
   SELECT @RES = @S4 -@S5 -@S6
   --UPDATE PRI SET PRI.EJERCICIOMES = @RES WHERE ANO = @ANO AND MES = @MES
   /*MIRAR CIERRE DE INVENTARIOS Y FACTURACION*/
   --IF COALESCE(DBO.FNK_VALORVARIABLE('CIERRECONT_CIERRAINV'),'') = 'SI'
   --   UPDATE PRI SET CERRADO_INV = 1 WHERE ANO = @ANO AND MES = @MES
   --IF COALESCE(DBO.FNK_VALORVARIABLE('CIERRECONT_CIERRAFAC'),'') = 'SI'
   --   UPDATE PRI SET CERRADO_FAC = 1 WHERE ANO = @ANO AND MES = @MES


END

