CREATE OR ALTER PROCEDURE DBO.SPQ_CONF_CONTABLE @JSON NVARCHAR(MAX)
	WITH ENCRYPTION
AS
SET DATEFORMAT dmy
DECLARE @TBLERRORES TABLE (ERROR VARCHAR(MAX))
DECLARE  @PARAMETROS NVARCHAR(MAX)			,@MODELO VARCHAR(100)			   ,@METODO VARCHAR(100)
		,@USUARIO VARCHAR(12)				   ,@COMPANIA VARCHAR(2)		      ,@IDSEDE      VARCHAR(5)		
      ,@SYS_COMPUTERNAME VARCHAR(200)     ,@DATOS    VARCHAR(MAX)
      ,@DESCRIPCION VARCHAR(255)          ,@DIRECCION VARCHAR(60)
      ,@TELEFONOS VARCHAR(35)             ,@CIUDAD VARCHAR(20)             
      ,@RESPONSABLE VARCHAR(8)            ,@NIT VARCHAR(20)                ,@DV SMALLINT
      ,@REPRESENTANTELEGAL VARCHAR(30)    ,@TIPO_DOC VARCHAR(3)            ,@NITREP VARCHAR(20)
      ,@IDMODELODSS VARCHAR(20)           ,@IDTARIFA VARCHAR(20)           ,@NIVELSEDE SMALLINT
      ,@NIVELVISTA SMALLINT               ,@ATIENDEOTRASSEDES BIT          ,@LOGO VARCHAR(45)
      ,@LINEA VARCHAR(255)                ,@LINEA2 VARCHAR(255)            ,@LINEA3 VARCHAR(255)
      ,@GRANCONT1 VARCHAR(255)            ,@GRANCONT2 VARCHAR(255)         ,@LEGAL VARCHAR(255)
      ,@LEGAL2 VARCHAR(255)               ,@LEGAL3 VARCHAR(255)            ,@LEGAL4 VARCHAR(255)
      ,@HOMOLOGO VARCHAR(20)              ,@IDBODEGALOG VARCHAR(20)        ,@IDBODEGACM VARCHAR(20)
      ,@IDBODEGA24H VARCHAR(20)           ,@CODHABILITA VARCHAR(20)        ,@IDBODHEMO VARCHAR(20)
      ,@IDSGSSS VARCHAR(20)               ,@IPS VARCHAR(20)                ,@MEFARMACIA BIT
      ,@PROCESO VARCHAR(20)               ,@CODUNG VARCHAR(20)             ,@CCOSTO VARCHAR(20)
      ,@ESTADO VARCHAR(10)                ,@CONTABLE BIT                   ,@PRESTACION BIT
      ,@IDAREAH VARCHAR(45)               ,@IDAREA VARCHAR(20)             ,@AMBITO SMALLINT
      ,@CE VARCHAR(20)                    ,@TIPO VARCHAR(20)               ,@ENTRIAGE BIT
      ,@ENHAB BIT                         ,@NIVEL SMALLINT                 ,@GALTOCOSTO_QX VARCHAR(4)

BEGIN
	SELECT *
	INTO #JSON
	FROM OPENJSON(@json) WITH (
			MODELO VARCHAR(100) '$.MODELO'
			,METODO VARCHAR(100) '$.METODO'
			,USUARIO VARCHAR(12) '$.USUARIO'
			,PARAMETROS NVARCHAR(MAX) AS JSON
	)

	SELECT   @MODELO = MODELO			,@METODO = METODO
			,@PARAMETROS = PARAMETROS	,@USUARIO = USUARIO
	FROM #JSON
   IF @METODO='CRUD_SEDES'     
   BEGIN         
      SELECT @DATOS=DATOS        
      FROM   OPENJSON (@PARAMETROS)
      WITH (           
      DATOS NVARCHAR(MAX) AS JSON 
      )
                 
      SELECT @IDSEDE=IDSEDE, @DESCRIPCION=DESCRIPCION,@DIRECCION=DIRECCION,@TELEFONOS=TELEFONOS,@CIUDAD=CIUDAD,@RESPONSABLE=RESPONSABLE,
             @NIT=NIT,@DV=DV,@REPRESENTANTELEGAL=REPRESENTANTELEGAL,@TIPO_DOC=TIPO_DOC,@NITREP=NITREP,@IDMODELODSS=IDMODELODSS,
             @NIVELSEDE=NIVELSEDE,@NIVELVISTA=NIVELVISTA,@ATIENDEOTRASSEDES=CASE COALESCE(ATIENDEOTRASSEDES,'') WHEN 'true' THEN 1 ELSE 0 END,
             @LOGO=LOGO,@LINEA=LINEA,@LINEA2=LINEA2,@LINEA3=LINEA3,@GRANCONT1=GRANCONT1,@GRANCONT2=GRANCONT2,@LEGAL=LEGAL,@LEGAL2=LEGAL2,
             @LEGAL3=LEGAL3,@LEGAL4=LEGAL4,@HOMOLOGO=HOMOLOGO,@IDBODEGALOG=IDBODEGALOG,@IDBODEGACM=IDBODEGACM,@IDBODEGA24H=IDBODEGA24H,
             @CODHABILITA=CODHABILITA,@IDBODHEMO=IDBODHEMO,@IDSGSSS=IDSGSSS,@IPS=CASE COALESCE(IPS,'') WHEN 'true' THEN 1 ELSE 0 END ,
             @MEFARMACIA=CASE COALESCE(MEFARMACIA,'') WHEN 'true' THEN 1 ELSE 0 END,@PROCESO=PROCESO
      FROM   OPENJSON (@DATOS)
      WITH   ( 
         IDSEDE VARCHAR(5)                '$.IDSEDE',
         DESCRIPCION VARCHAR(255)         '$.DESCRIPCION',
         DIRECCION VARCHAR(60)            '$.DIRECCION',
         TELEFONOS VARCHAR(35)            '$.TELEFONOS',
         CIUDAD VARCHAR(20)               '$.CIUDAD',
         RESPONSABLE VARCHAR(20)          '$.RESPONSABLE',
         NIT VARCHAR(20)                  '$.NIT',
         DV SMALLINT                      '$.DV',
         REPRESENTANTELEGAL VARCHAR(35)   '$.REPRESENTANTELEGAL',
         TIPO_DOC VARCHAR(4)              '$.TIPO_DOC',
         NITREP VARCHAR(20)               '$.NITREP',
         IDMODELODSS VARCHAR(20)          '$.IDMODELODSS',
         NIVELSEDE SMALLINT               '$.NIVELSEDE',
         NIVELVISTA SMALLINT              '$.NIVELVISTA',
         ATIENDEOTRASSEDES VARCHAR(10)    '$.ATIENDEOTRASSEDES',
         LOGO VARCHAR(45)                 '$.LOGO',
         LINEA VARCHAR(255)               '$.LINEA',
         LINEA2 VARCHAR(255)              '$.LINEA2',
         LINEA3 VARCHAR(255)              '$.LINEA3',
         GRANCONT1 VARCHAR(255)           '$.GRANCONT1',
         GRANCONT2 VARCHAR(255)           '$.GRANCONT2',
         LEGAL VARCHAR(255)               '$.LEGAL',
         LEGAL2 VARCHAR(255)              '$.LEGAL2',
         LEGAL3 VARCHAR(255)              '$.LEGAL3',
         LEGAL4 VARCHAR(255)              '$.LEGAL4',
         HOMOLOGO VARCHAR(255)            '$.HOMOLOGO',
         IDBODEGALOG VARCHAR(20)          '$.IDBODEGALOG',
         IDBODEGACM VARCHAR(20)           '$.IDBODEGACM',
         IDBODEGA24H VARCHAR(20)          '$.IDBODEGA24H',
         CODHABILITA VARCHAR(20)          '$.CODHABILITA',
         IDBODHEMO VARCHAR(20)            '$.IDBODHEMO',
         IDSGSSS VARCHAR(20)              '$.IDSGSSS',
         IPS VARCHAR(10)                  '$.IPS',
         MEFARMACIA VARCHAR(10)           '$.MEFARMACIA',
         PROCESO VARCHAR(20)              '$.PROCESO'     
      )
      IF @PROCESO='Nueva'
      BEGIN
         IF NOT EXISTS(SELECT * FROM SED WHERE IDSEDE=@IDSEDE)
         BEGIN
            INSERT INTO SED (IDSEDE, DESCRIPCION, DIRECCION, TELEFONOS, CIUDAD, IDREGIONAL, RESPONSABLE, MONTO_MAX, MONTO_MIN, 
                              MONTO_REE, NIT, DV, REPRESENTANTELEGAL, TIPO_DOC, NITREP, IDMODELODSS, IDTARIFA, NIVELSEDE,  NIVELVISTA,
                              CATEGORIA, ATIENDEOTRASSEDES, LOGO, LINEA, LINEA2, LINEA3, GRANCONT1, GRANCONT2, LEGAL, LEGAL2, LEGAL3, 
                              LEGAL4, CODUNG, CODPRG, HOMOLOGO, TERCERIZADA, IDBODEGALOG,  IDBODEGACM, IDBODEGA24H, CODHABILITA, 
                              IDBODHEMO, IDSGSSS, IPS, MEFARMACIA, CRONICO, EXTRAMURAL, EMAIL)
           SELECT @IDSEDE, @DESCRIPCION, @DIRECCION, @TELEFONOS, @CIUDAD, NULL, @RESPONSABLE, 0, 0, 
                              0, @NIT, @DV, @REPRESENTANTELEGAL, @TIPO_DOC, @NITREP, @IDMODELODSS, NULL, @NIVELSEDE,  @NIVELVISTA,
                              NULL, @ATIENDEOTRASSEDES, @LOGO, @LINEA, @LINEA2, @LINEA3, @GRANCONT1, @GRANCONT2, @LEGAL, @LEGAL2, @LEGAL3, 
                              @LEGAL4, NULL, NULL, @HOMOLOGO, 0, @IDBODEGALOG,  @IDBODEGACM, @IDBODEGA24H, @CODHABILITA, 
                              @IDBODHEMO, @IDSGSSS, @IPS, @MEFARMACIA, 0, NULL, NULL

         END
         ELSE
         BEGIN
            INSERT INTO @TBLERRORES(ERROR)
            SELECT 'posible error de Duplicidad, el Id.Sede ya existe '
         END
      END
      IF @PROCESO='Editar'
      BEGIN
         IF EXISTS(SELECT * FROM SED WHERE IDSEDE=@IDSEDE)
         BEGIN
            UPDATE SED SET DESCRIPCION=@DESCRIPCION, DIRECCION=@DIRECCION, TELEFONOS=@TELEFONOS, CIUDAD=@CIUDAD,RESPONSABLE=@RESPONSABLE,
                           NIT=@NIT,DV=@DV,REPRESENTANTELEGAL=@REPRESENTANTELEGAL,TIPO_DOC=@TIPO_DOC, NITREP=@NITREP,IDMODELODSS=@IDMODELODSS,
                           NIVELSEDE =@NIVELSEDE,  NIVELVISTA=@NIVELVISTA,ATIENDEOTRASSEDES=@ATIENDEOTRASSEDES, LOGO=@LOGO, LINEA=@LINEA,
                           LINEA2=@LINEA2, LINEA3=@LINEA3, GRANCONT1=@GRANCONT1, GRANCONT2=@GRANCONT2, LEGAL=@LEGAL, LEGAL2=@LEGAL2, LEGAL3=@LEGAL3, 
                           LEGAL4=@LEGAL4, HOMOLOGO=@HOMOLOGO,IDBODEGALOG=@IDBODEGALOG,  IDBODEGACM=@IDBODEGACM, IDBODEGA24H=@IDBODEGA24H,
                           CODHABILITA =@CODHABILITA,IDBODHEMO=@IDBODHEMO, IDSGSSS=@IDSGSSS, IPS=@IPS, MEFARMACIA=@MEFARMACIA
            WHERE IDSEDE=@IDSEDE                          
         END
         ELSE
         BEGIN
            INSERT INTO @TBLERRORES(ERROR)
            SELECT 'Sede No encontrada. Verifique e intente de nuevo'
         END
      END
      IF(SELECT COUNT(*) FROM @TBLERRORES)>0
      BEGIN
         SELECT 'KO' OK, ERROR FROM @TBLERRORES
         RETURN
      END
      SELECT 'OK' OK
      RETURN 
   END 
   IF @METODO='CRUD_SEDUNG'     
   BEGIN         
      SELECT @DATOS=DATOS        
      FROM   OPENJSON (@PARAMETROS)
      WITH (           
      DATOS NVARCHAR(MAX) AS JSON 
      )

      SELECT @IDSEDE=IDSEDE,@CODUNG=CODUNG,@CCOSTO=CCOSTO,@ESTADO=ESTADO,@PROCESO=PROCESO      
      FROM   OPENJSON (@DATOS)
      WITH   ( 
      IDSEDE  VARCHAR(6)   '$.IDSEDE',
      CODUNG  VARCHAR(20)   '$.CODUNG',
      CCOSTO  VARCHAR(20)   '$.CCOSTO',
      ESTADO  VARCHAR(10)   '$.ESTADO',
      PROCESO  VARCHAR(20)  '$.PROCESO'
      ) 
      PRINT '@PROCESO='+@PROCESO
      IF @PROCESO='Nuevo'
      BEGIN
         IF NOT EXISTS(SELECT * FROM SEDUNG WHERE IDSEDE=@IDSEDE AND CODUNG=@CODUNG AND CCOSTO=@CCOSTO)
         BEGIN
            INSERT INTO SEDUNG(IDSEDE,CODUNG,CCOSTO,ESTADO)
            SELECT @IDSEDE,@CODUNG,@CCOSTO,@ESTADO
         END
         ELSE
         BEGIN
            INSERT INTO @TBLERRORES(ERROR)
            SELECT 'ya Existe un Registro con estos datos. Verique e intente de nuevo'
         END
      END
      IF @PROCESO='Editar'
      BEGIN
         IF EXISTS(SELECT * FROM SEDUNG WHERE IDSEDE=@IDSEDE AND CODUNG=@CODUNG AND CCOSTO=@CCOSTO)
         BEGIN
            UPDATE SEDUNG SET ESTADO=@ESTADO WHERE IDSEDE=@IDSEDE AND CODUNG=@CODUNG AND CCOSTO=@CCOSTO
         END
         ELSE
         BEGIN
            PRINT '@IDSEDE ='+@IDSEDE+'  @CODUNG='+@CODUNG+'  @CCOSTO='+@CCOSTO
            INSERT INTO @TBLERRORES(ERROR)
            SELECT 'Datos no encontrados, no se puede Actualizar. Verifique e intente de nuevo'
         END
      END
      IF(SELECT COUNT(*) FROM @TBLERRORES)>0
      BEGIN
         SELECT 'KO'OK, ERROR FROM @TBLERRORES
         RETURN
      END
      SELECT 'OK'OK
      RETURN 
   END 
   IF @METODO='CRUD_AFU'     
   BEGIN         
      SELECT @DATOS=DATOS        
      FROM   OPENJSON (@PARAMETROS)
      WITH (           
      DATOS NVARCHAR(MAX) AS JSON 
      )
                 
      SELECT @PROCESO=PROCESO,@CONTABLE= CASE WHEN COALESCE(CONTABLE,'')='true' THEN 1 ELSE 0 END,
             @PRESTACION=CASE WHEN COALESCE(PRESTACION,'')='true' THEN 1 ELSE 0 END,
             @ESTADO=CASE WHEN COALESCE(ESTADO,'')='true' THEN 1 ELSE 0 END,@IDAREAH=IDAREAH,@IDAREA=IDAREA,
             @DESCRIPCION=DESCRIPCION,@AMBITO=AMBITO,@CE=CE
      FROM   OPENJSON (@DATOS)
      WITH   (
         PROCESO VARCHAR(20)      '$.PROCESO',
         CONTABLE VARCHAR(10)     '$.CONTABLE',
         PRESTACION VARCHAR(10)   '$.PRESTACION',
         ESTADO VARCHAR(10)       '$.ESTADO',
         IDAREAH VARCHAR(20)      '$.IDAREAH',
         IDAREA VARCHAR(20)       '$.IDAREA',
         DESCRIPCION VARCHAR(45)  '$.DESCRIPCION',
         AMBITO SMALLINT          '$.AMBITO',
         CE VARCHAR(20)           '$.CE.value'     
      )
      IF @PROCESO='Nueva'
      BEGIN
         IF NOT EXISTS(SELECT * FROM AFU WHERE IDAREA=@IDAREA)
         BEGIN
            SELECT DBO.FNK_COLUMNAS_TABLAS('AFU')
            INSERT INTO AFU(IDAREAH, IDAREA, DESCRIPCION, CCOSTO, BODEGADIA, BODEGANOCHE, CONTABLE, PRESTACION, CUENTACOSTO, AMBITO, BODEGADIA2, NIVELATENCION, ESTADO, CE, GRUPOSER)
            SELECT @IDAREAH, @IDAREA, @DESCRIPCION, '', NULL, NULL, @CONTABLE, @PRESTACION, NULL, @AMBITO, NULL, 1, @ESTADO, @CE, NULL
         END
         ELSE
         BEGIN
            INSERT INTO @TBLERRORES(ERROR)
            SELECT 'Ya existe un Area Funcional con este Codigo. Verifique e intente de nuevo'ERROR
         END
      END
      IF @PROCESO='Editar'
      BEGIN
         IF EXISTS(SELECT * FROM AFU WHERE IDAREA=@IDAREA)
         BEGIN
            UPDATE AFU SET IDAREAH=@IDAREAH,DESCRIPCION=@DESCRIPCION,CONTABLE=@CONTABLE, PRESTACION=@PRESTACION, AMBITO=@AMBITO,
            ESTADO=@ESTADO, CE=@CE
            WHERE IDAREA=@IDAREA
         END
         ELSE
         BEGIN
           INSERT INTO @TBLERRORES(ERROR)
           SELECT 'Area Funcional, no Encontrada. Verique e Intente de nuevo'error
         END
      END
      IF(SELECT COUNT(*) FROM @TBLERRORES)>0
      BEGIN
         SELECT 'KO' OK, ERROR FROM @TBLERRORES
         RETURN
      END
      SELECT 'OK' OK
      RETURN 
   END  
   IF @METODO='CRUD_CCOSTO'     
   BEGIN         
      SELECT @DATOS=DATOS        
      FROM   OPENJSON (@PARAMETROS)
      WITH (           
      DATOS NVARCHAR(MAX) AS JSON 
      )
                 
      SELECT @PROCESO=PROCESO,@IDAREA=IDAREA,@COMPANIA=COMPANIA,@TIPO=TIPO,@ENTRIAGE=CASE WHEN COALESCE(ENTRIAGE,'')='true' THEN 1 ELSE 0 END,
             @ENHAB=CASE WHEN COALESCE(ENHAB,'')='true' THEN 1 ELSE 0 END, @NIVEL=NIVEL,@GALTOCOSTO_QX=GALTOCOSTO_QX,
             @ESTADO=ESTADO,@IDSEDE=IDSEDE,@CCOSTO=CCOSTO,@DESCRIPCION=DESCRIPCION,@CIUDAD=CIUDAD
      FROM   OPENJSON (@DATOS)
      WITH   (   
         PROCESO VARCHAR(20)       '$.PROCESO',
         IDAREA VARCHAR(20)        '$.IDAREA',
         COMPANIA VARCHAR(2)       '$.COMPANIA',
         TIPO VARCHAR(20)          '$.TIPO',
         ENTRIAGE VARCHAR(10)      '$.ENTRIAGE',
         ENHAB VARCHAR(10)         '$.ENHAB',
         NIVEL SMALLINT            '$.NIVEL',
         GALTOCOSTO_QX VARCHAR(4)  '$.GALTOCOSTO_QX',
         ESTADO VARCHAR(20)        '$.ESTADO',
         IDSEDE VARCHAR(6)         '$.IDSEDE',
         CCOSTO VARCHAR(20)        '$.CCOSTO',
         DESCRIPCION VARCHAR(100)  '$.DESCRIPCION',
         CIUDAD VARCHAR(10)        '$.CIUDAD'      
      ) 
      IF @PROCESO='Nuevo'
      BEGIN
         IF NOT EXISTS(SELECT * FROM CEN WHERE CCOSTO=@CCOSTO)
         BEGIN
            INSERT INTO CEN(COMPANIA, CCOSTO, DESCRIPCION, TIPO,CIUDAD, NIVEL,  IDAREA, ENHAB,  HOMOLOGO,
            GALTOCOSTO_QX,  ESTADO, IDSEDE, ENTRIAGE)
            SELECT @COMPANIA, @CCOSTO, @DESCRIPCION, @TIPO, @CIUDAD,@NIVEL,  @IDAREA, @ENHAB,@HOMOLOGO,
            @GALTOCOSTO_QX,  @ESTADO, @IDSEDE, @ENTRIAGE 
         END
         ELSE
         BEGIN
            INSERT INTO @TBLERRORES(ERROR)
            SELECT 'Ya Existe un Centro de Costo con este Codigo. Verifique e Intente de nuevo'
         END
      END
      IF @PROCESO='Editar'
      BEGIN
         IF EXISTS(SELECT * FROM CEN WHERE CCOSTO=@CCOSTO)
         BEGIN
            UPDATE CEN SET DESCRIPCION=@DESCRIPCION, TIPO=@TIPO,CIUDAD=@CIUDAD, NIVEL=@NIVEL,  IDAREA=@IDAREA, ENHAB=@ENHAB,
            HOMOLOGO=@HOMOLOGO,GALTOCOSTO_QX=@GALTOCOSTO_QX,ESTADO=@ESTADO,IDSEDE=@IDSEDE, ENTRIAGE=@ENTRIAGE
            WHERE CCOSTO=@CCOSTO
         END
         ELSE
         BEGIN
            INSERT INTO @TBLERRORES(ERROR)
            SELECT 'Centro de Costo no encontrado, Valide e intente de nuevo'
         END
      END
      IF(SELECT COUNT(*) FROM @TBLERRORES)>0
      BEGIN
         SELECT 'KO' OK, ERROR FROM @TBLERRORES
         RETURN
      END
      SELECT 'OK' OK
      RETURN 
   END  
END